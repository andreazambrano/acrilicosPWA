{"version":3,"file":"ngx-awesome-uploader.js","sources":["ng://ngx-awesome-uploader/lib/file-picker.service.ts","ng://ngx-awesome-uploader/lib/file-upload.utils.ts","ng://ngx-awesome-uploader/lib/validation-error.model.ts","ng://ngx-awesome-uploader/lib/file-picker.adapter.ts","ng://ngx-awesome-uploader/lib/default-captions.ts","ng://ngx-awesome-uploader/lib/file-picker.component.ts","ng://ngx-awesome-uploader/lib/icons/close-icon/close-icon.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-container.component.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-file.model.ts","ng://ngx-awesome-uploader/lib/file-drop/upload-event.model.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.component.ts","ng://ngx-awesome-uploader/lib/icons/cloud-icon/cloud-icon.component.ts","ng://ngx-awesome-uploader/lib/file-drop/file-drop.module.ts","ng://ngx-awesome-uploader/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","ng://ngx-awesome-uploader/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","ng://ngx-awesome-uploader/lib/file-picker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class FilePickerService {\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n  mockUploadFile(formData): Observable<any> {\r\n    const event = new CustomEvent('customevent', {\r\n      detail: {\r\n        type: 'UploadProgreess'\r\n      }\r\n    });\r\n    return of (event.detail);\r\n  }\r\n  createSafeUrl(file): SafeResourceUrl {\r\n    if ((<any> window).UPLOADER_TEST_MODE) {return;}\r\n    try {\r\n      const url = window.URL.createObjectURL(file);\r\n    const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    return safeUrl;\r\n\r\n    } catch (er) {\r\n      console.log(er);\r\n    }\r\n  }\r\n}\r\n","import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nexport function getFileType(fileExtension: string): string {\r\n  if (fileExtension.includes('image')) {\r\n    return 'image';\r\n  } else if (fileExtension.includes('video')) {\r\n    return 'video';\r\n  } else {\r\n    return 'other';\r\n  }\r\n}\r\n\r\n","export interface ValidationError {\r\n  file: File;\r\n  error: string; // is FileValidationType enum type\r\n}\r\nexport enum FileValidationTypes {\r\n  fileMaxSize = 'FILE_MAX_SIZE',\r\n  fileMaxCount = 'FILE_MAX_COUNT',\r\n  totalMaxSize = 'TOTAL_MAX_SIZE',\r\n  extensions = 'EXTENSIONS',\r\n  uploadType = 'UPLOAD_TYPE',\r\n  customValidator = 'CUSTOM_VALIDATOR'\r\n}\r\n","import { FilePreviewModel } from './file-preview.model';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class FilePickerAdapter {\r\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<number| string>;\r\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\r\n}\r\n","import { UploaderCaptions } from \"./uploader-captions\";\r\n\r\nexport const DefaultCaptions: UploaderCaptions = {\r\n    dropzone: {\r\n        title: \"Drag and drop file here\",\r\n        or: \"or\",\r\n        browse: \"Browse Files\"\r\n    },\r\n    cropper: {\r\n        crop: \"Crop\",\r\n        cancel: \"Cancel\"\r\n    },\r\n    previewCard: {\r\n        remove: \"Remove\",\r\n        uploadError: \"Error on upload\"\r\n    }\r\n}","import {FilePickerService} from './file-picker.service';\r\nimport {Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ChangeDetectorRef} from '@angular/core';\r\nimport {SafeResourceUrl} from '@angular/platform-browser';\r\nimport {FilePreviewModel} from './file-preview.model';\r\nimport {getFileType} from './file-upload.utils';\r\nimport {FileValidationTypes, ValidationError} from './validation-error.model';\r\nimport {FilePickerAdapter} from './file-picker.adapter';\r\nimport {FileSystemDirectoryEntry, FileSystemFileEntry, UploadEvent} from './file-drop';\r\nimport {combineLatest, Observable, of, Subject} from 'rxjs';\r\nimport {map, takeUntil, tap} from 'rxjs/operators';\r\nimport {DefaultCaptions} from './default-captions';\r\nimport {UploaderCaptions} from './uploader-captions';\r\n\r\ndeclare var Cropper;\r\n@Component({\r\n  selector: 'ngx-file-picker',\r\n  template: `\r\n   <div (click)=\"fileInput.click()\" class=\"file-drop-wrapper\" *ngIf=\"showeDragDropZone\">\r\n      <file-drop\r\n        (onFileDrop)=\"dropped($event)\"\r\n        [customstyle]=\"'custom-drag'\"\r\n        [captions]=\"_captions\"\r\n      >\r\n      <ng-content select=\".dropzoneTemplate\"> </ng-content>\r\n      </file-drop>\r\n    </div>\r\n\r\n\r\n    <input type=\"file\" name=\"file[]\" id=\"fileInput\"\r\n           #fileInput\r\n           [multiple]=\"uploadType === 'multi' ? 'multiple' : '' \"\r\n           (click)=\"fileInput.value = null\"\r\n           (change)=\"onChange(fileInput)\"\r\n           [accept]=\"accept\"\r\n           class=\"file-input\"\r\n          >\r\n\r\n    <div class=\"cropperJsOverlay\" *ngIf=\"currentCropperFile\">\r\n     <div class=\"cropperJsBox\">\r\n     <img [src]=\"safeCropImgUrl\" id=\"cropper-img\" (load) = \"cropperImgLoaded($event)\">\r\n        <div class=\"cropper-actions\">\r\n        <button class=\"cropSubmit\" (click)=\"onCropSubmit()\">{{_captions?.cropper?.crop}}</button>\r\n        <button class=\"cropCancel\" (click)=\"closeCropper({file: currentCropperFile, fileName: currentCropperFile.name})\">\r\n        {{_captions?.cropper?.cancel}}\r\n        </button> </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"files-preview-wrapper\" *ngIf=\"showPreviewContainer\">\r\n      <file-preview-container *ngIf=\"files\"\r\n      [previewFiles]=\"files\"\r\n      (removeFile)=\"removeFile($event)\"\r\n      (uploadSuccess)=\"onUploadSuccess($event)\"\r\n      [adapter]=\"adapter\"\r\n      [itemTemplate]=\"itemTemplate\"\r\n      [captions]=\"_captions\"\r\n      > </file-preview-container>\r\n    </div>\r\n\r\n  `,\r\n  styleUrls: ['./file-picker.component.scss']\r\n})\r\nexport class FilePickerComponent implements OnInit, OnDestroy {\r\n  /** Emitted when file is uploaded via api successfully. Emitted for every file */\r\n  @Output() uploadSuccess = new EventEmitter<FilePreviewModel>();\r\n  /** Emitted when file is removed via api successfully. Emitted for every file */\r\n  @Output() removeSuccess = new EventEmitter<FilePreviewModel>();\r\n  /** Emitted on file validation fail */\r\n  @Output() validationError = new EventEmitter<ValidationError>();\r\n  /** Emitted when file is added and passed validations. Not uploaded yet */\r\n  @Output() fileAdded = new EventEmitter<FilePreviewModel>();\r\n  /** Custom validator function */\r\n  @Input() customValidator: (file: File) => Observable<boolean>;\r\n  /** Whether to enable cropper. Default: disabled */\r\n  @Input()\r\n   enableCropper = false;\r\n  /** Whether to show default drag and drop zone. Default:true */\r\n  @Input() showeDragDropZone = true;\r\n   /** Whether to show default files preview container. Default: true */\r\n  @Input() showPreviewContainer = true;\r\n   /** Preview Item template */\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n  /** Single or multiple. Default: multi */\r\n  @Input()\r\n   uploadType = 'multi';\r\n  /** Max size of selected file in MB. Default: no limit */\r\n  @Input()\r\n   fileMaxSize: number;\r\n  /** Max count of file in multi-upload. Default: no limit */\r\n  @Input()\r\n   fileMaxCount: number;\r\n  /** Total Max size limit of all files in MB. Default: no limit */\r\n  @Input()\r\n   totalMaxSize: number;\r\n  /** Which file types to show on choose file dialog. Default: show all */\r\n  @Input()\r\n  accept: string;\r\n  files: FilePreviewModel[] = [];\r\n /** File extensions filter */\r\n  @Input() fileExtensions: String[];\r\n  cropper: any;\r\n  /** Cropper options. */\r\n  @Input() cropperOptions: Object;\r\n  /** Files array for cropper. Will be shown equentially if crop enabled */\r\n  filesForCropper: File[] = [];\r\n   /** Current file to be shown in cropper*/\r\n   currentCropperFile: File;\r\n  /** Custom api Adapter for uploading/removing files */\r\n  @Input()\r\n   adapter: FilePickerAdapter;\r\n  /**  Custome template for dropzone */\r\n   @Input() dropzoneTemplate: TemplateRef<any>;\r\n  /** Custom captions input. Used for multi language support */\r\n   @Input() captions: UploaderCaptions;\r\n   /** captions object*/\r\n   _captions: UploaderCaptions;\r\n   cropClosed$ = new Subject<FilePreviewModel>();\r\n   _onDestroy$ = new Subject<void>();\r\n   safeCropImgUrl: SafeResourceUrl;\r\n  constructor(private fileService: FilePickerService,\r\n     private elementRef: ElementRef\r\n     ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setCropperOptions();\r\n    this.listenToCropClose();\r\n    this.setCaptions();\r\n  }\r\n  ngOnDestroy() {\r\n    this._onDestroy$.next();\r\n  }\r\n  setCaptions() {\r\n  this._captions = this.captions || DefaultCaptions;\r\n  }\r\n  /** Listen when Cropper is closed and open new cropper if next image exists */\r\n  listenToCropClose() {\r\n    this.cropClosed$\r\n    .pipe(takeUntil(this._onDestroy$))\r\n    .subscribe((res: FilePreviewModel) => {\r\n      const croppedIndex = this.filesForCropper.findIndex(item => item.name === res.fileName);\r\n      const nextFile = croppedIndex !== -1 ? this.filesForCropper[croppedIndex + 1] : undefined;\r\n     // console.log(nextFile)\r\n  //  console.log('cropped', res);\r\n      this.filesForCropper = [...this.filesForCropper].filter(item => item.name !== res.fileName);\r\n     // console.log(this.filesForCropper);\r\n      if (nextFile) {\r\n         this.openCropper(nextFile);\r\n      }\r\n    });\r\n  }\r\n/** Sets custom cropper options if avaiable */\r\n  setCropperOptions() {\r\n    if (!this.cropperOptions) {\r\n    this.setDefaultCropperOptions();\r\n    }\r\n  }\r\n  /** Sets manual cropper options if no custom options are avaiable */\r\n  setDefaultCropperOptions() {\r\n    this.cropperOptions = {\r\n      dragMode: 'crop',\r\n      aspectRatio: 1,\r\n      autoCrop: true,\r\n      movable: true,\r\n      zoomable: true,\r\n      scalable: true,\r\n      autoCropArea: 0.8\r\n    };\r\n  }\r\n  /** On input file selected */\r\n  onChange( fileInput: HTMLInputElement) {\r\n     const files: File[] =  Array.from(fileInput.files);\r\n    this.handleFiles(files).subscribe();\r\n  }\r\n  /** Handles input and drag/drop files */\r\n   handleFiles(files: File[]): Observable<void> {\r\n    if (!this.isValidMaxFileCount(files)) {return of(null); }\r\n    const isValidUploadSync = files.every(item => this.validateFileSync(item));\r\n    const asyncFunctions = files.map(item => this.validateFileAsync(item));\r\n    return combineLatest(...asyncFunctions)\r\n      .pipe(\r\n        map(res => {\r\n          const isValidUploadAsync = res.every(result => result === true);\r\n          if (!isValidUploadSync || !isValidUploadAsync) {return; }\r\n          files.forEach((file: File, index: number) => {\r\n            this.handleInputFile(file, index );\r\n          });\r\n        })\r\n      );\r\n  }\r\n  /** Validates synchronous validations */\r\n  validateFileSync(file: File): boolean {\r\n    if (!file) {return; }\r\n    if (!this.isValidUploadType(file)) {return; }\r\n    if (!this.isValidExtension(file, file.name)) {return; }\r\n    return true;\r\n  }\r\n  /** Validates asynchronous validations */\r\n  validateFileAsync(file: File): Observable<boolean> {\r\n    if (!this.customValidator) {return of(true); }\r\n    return this.customValidator(file).pipe(\r\n      tap(res => {\r\n        if (!res) { this.validationError.next({file: file, error: FileValidationTypes.customValidator}); }\r\n      })\r\n    );\r\n  }\r\n  /** Handles input and drag&drop files */\r\n  handleInputFile(file: File, index): void {\r\n    const type = getFileType(file.type);\r\n    if (type === 'image' && this.enableCropper) {\r\n      this.filesForCropper.push(file);\r\n      if (!(this.currentCropperFile)) {\r\n        this.openCropper(file);\r\n      }\r\n    } else {\r\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\r\n       if (this.isValidSize(file, file.size)) {\r\n        this.pushFile(file);\r\n       }\r\n    }\r\n  }\r\n  /** Validates if upload type is single so another file cannot be added */\r\n  isValidUploadType(file): boolean {\r\n    if (this.uploadType === 'single' && this.files.length > 0) {\r\n      this.validationError.next({file: file, error: FileValidationTypes.uploadType});\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  /** Validates max file count */\r\n  isValidMaxFileCount(files: File[]): boolean {\r\n    if (!this.fileMaxCount || this.fileMaxCount >= this.files.length + files.length ) {\r\n      return true;\r\n     } else {\r\n       this.validationError.next({file: null, error: FileValidationTypes.fileMaxCount});\r\n      return false;\r\n     }\r\n  }\r\n  /** On file dropped */\r\n  dropped(event: UploadEvent) {\r\n    const files = event.files;\r\n    const filesForUpload: File[] = [];\r\n    for (const droppedFile of event.files) {\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          filesForUpload.push(file);\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n       // console.log(droppedFile.relativePath, fileEntry);\r\n      }\r\n    }\r\n    setTimeout(() => this.handleFiles(filesForUpload).subscribe());\r\n  }\r\n  /** Add file to file list after succesfull validation */\r\n  pushFile( file: File, fileName = file.name): void {\r\n      this.files.push({ file: file, fileName: fileName});\r\n      this.fileAdded.next({ file: file, fileName: fileName});\r\n  }\r\n  /** Opens cropper for image crop */\r\n  openCropper(file: File): void {\r\n    if ((<any>window).UPLOADER_TEST_MODE || typeof Cropper !== 'undefined' ) {\r\n      this.safeCropImgUrl = this.fileService.createSafeUrl(file);\r\n      this.currentCropperFile = file;\r\n    } else  {\r\n      console.warn('please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]=\"false\"');\r\n      return;\r\n    }\r\n  }\r\n  getSafeUrl(file: File): SafeResourceUrl {\r\n    return this.fileService.createSafeUrl(file);\r\n  }\r\n  /** On img load event */\r\n  cropperImgLoaded(e): void {\r\n    const image = document.getElementById('cropper-img');\r\n    this.cropper = new Cropper(image, this.cropperOptions);\r\n  }\r\n  /** Close or cancel cropper */\r\n  closeCropper(filePreview: FilePreviewModel): void {\r\n    this.currentCropperFile = undefined;\r\n    this.cropper = undefined;\r\n    setTimeout(() => this.cropClosed$.next(filePreview), 200);\r\n  }\r\n/** Removes files from files list */\r\n  removeFileFromList(file: FilePreviewModel): void {\r\n    this.files = this.files.filter(f =>  f !== file);\r\n  }\r\n  /** Emits event when file upload api returns success  */\r\n  onUploadSuccess(fileItem: FilePreviewModel): void {\r\n    this.uploadSuccess.next(fileItem);\r\n  }\r\n /** Validates file extension */\r\n isValidExtension(file: File, fileName: string): boolean {\r\n  if (!this.fileExtensions) {return true; }\r\n  const extension = fileName.split('.').pop();\r\n  const fileExtensions = this.fileExtensions.map(ext => ext.toLowerCase());\r\n  if (fileExtensions.indexOf(extension.toLowerCase()) === -1) {\r\n    this.validationError.next({file: file, error: FileValidationTypes.extensions});\r\n    return false;\r\n  }\r\n     return true;\r\n}\r\n   /** Validates selected file size and total file size */\r\n  isValidSize(file: File, size: number): boolean {\r\n    /** Validating selected file size */\r\n    const res: number = this.bitsToMb(size.toString());\r\n    let isValidFileSize: boolean;\r\n    let isValidTotalFileSize: boolean;\r\n    if  (!this.fileMaxSize || ( this.fileMaxSize && res < this.fileMaxSize)) {\r\n      isValidFileSize = true;\r\n    } else {\r\n      this.validationError.next({file: file, error: FileValidationTypes.fileMaxSize});\r\n    }\r\n    /** Validating Total Files Size */\r\n    const totalBits = this.files.map(f => f.file.size).reduce((acc, curr) => acc + curr, 0);\r\n      if (!this.totalMaxSize || (this.totalMaxSize && this.bitsToMb(totalBits + file.size) < this.totalMaxSize)) {\r\n         isValidTotalFileSize = true;\r\n      } else {\r\n        this.validationError.next({file: file, error: FileValidationTypes.totalMaxSize});\r\n      }\r\n      return !!isValidFileSize && isValidTotalFileSize;\r\n  }\r\n  bitsToMb(size): number {\r\n    return parseFloat(size) / 1048576;\r\n  }\r\n  /** when crop button submitted */\r\n  onCropSubmit(): void {\r\n    this.cropper.getCroppedCanvas().toBlob(this.blobFallBack.bind(this), 'image/jpeg');\r\n  }\r\n  /** After crop submit */\r\n  blobFallBack(blob: Blob): void {\r\n    if (!blob) {return;}\r\n    if (this.isValidSize(<File>blob, blob.size)) {\r\n      this.pushFile(<File>blob, this.currentCropperFile.name);\r\n    }\r\n   this.closeCropper({file: blob as File, fileName: this.currentCropperFile.name});\r\n  }\r\n  removeFile(fileItem: FilePreviewModel): void {\r\n    if (this.adapter) {\r\n      this.adapter.removeFile(fileItem)\r\n      .subscribe(res => {\r\n        this.onRemoveSuccess(fileItem);\r\n      });\r\n     } else {\r\n      console.warn('no adapter was provided');\r\n     }\r\n   }\r\n    /** Emits event when file remove api returns success  */\r\n  onRemoveSuccess(fileItem: FilePreviewModel): void {\r\n    this.removeSuccess.next(fileItem);\r\n    this.removeFileFromList(fileItem);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'close-icon',\r\n  templateUrl: './close-icon.component.html',\r\n  styleUrls: ['./close-icon.component.scss']\r\n})\r\nexport class CloseIconComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { FilePickerService } from './../../file-picker.service';\r\nimport { FilePreviewModel } from './../../file-preview.model';\r\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { SafeResourceUrl } from '@angular/platform-browser';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { getFileType} from '../../file-upload.utils';\r\nimport {  Subscription } from 'rxjs';\r\nimport { FilePickerAdapter } from '../../file-picker.adapter';\r\nimport { UploaderCaptions } from '../../uploader-captions';\r\n\r\n@Component({\r\n  selector: 'file-preview-item',\r\n  templateUrl: './file-preview-item.component.html',\r\n  styleUrls: ['./file-preview-item.component.scss']\r\n})\r\nexport class FilePreviewItemComponent implements OnInit {\r\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\r\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\r\n  @Output() public imageClicked = new EventEmitter<FilePreviewModel>();\r\n  @Input() public fileItem: FilePreviewModel;\r\n  @Input() adapter: FilePickerAdapter;\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n  @Input() captions: UploaderCaptions;\r\n  icon = 'checkmark';\r\n  uploadProgress: number;\r\n  fileType: string;\r\n  safeUrl: SafeResourceUrl;\r\n  uploadError: boolean;\r\n  uploadSubscription: Subscription;\r\n  fileId: string;\r\n  constructor(\r\n    private fileService: FilePickerService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  this.uploadFile(this.fileItem);\r\n    this.fileType = getFileType(this.fileItem.file.type);\r\n    this.safeUrl = this.getSafeUrl(this.fileItem.file);\r\n  }\r\n  getSafeUrl(file: File | Blob): SafeResourceUrl {\r\n    return this.fileService.createSafeUrl(file);\r\n  }\r\n  /** Converts bytes to nice size */\r\n  niceBytes(x): string {\r\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    let l = 0,\r\n      n = parseInt(x, 10) || 0;\r\n    while (n >= 1024 && ++l) {\r\n      n = n / 1024;\r\n    }\r\n    // include a decimal point and a tenths-place digit if presenting\r\n    // less than ten of KB or greater units\r\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\r\n  }\r\n  /** Retry file upload when upload was unsuccessfull */\r\n  onRetry(): void {\r\n    this.uploadFile(this.fileItem);\r\n  }\r\n  onCheckMarkClick() {\r\n    this.icon = 'error';\r\n  }\r\n  uploadFile(fileItem: FilePreviewModel): void {\r\n    if (this.adapter) {\r\n      this.uploadSubscription =\r\n      this.adapter.uploadFile(fileItem)\r\n      .subscribe((res: number | string) => {\r\n        if (typeof res === 'string') {\r\n          this.onUploadSuccess(res, fileItem);\r\n          this.uploadProgress = undefined;\r\n        }\r\n        if (typeof res === 'number') {\r\n          this.uploadProgress = res;\r\n        //  this.handleProgressResponse(<HttpEvent<any>>res, fileItem);\r\n        }\r\n      }, (er) => {\r\n        this.uploadError = er;\r\n        this.uploadProgress = undefined;\r\n  });\r\n    } else {\r\n      console.warn('no adapter was provided');\r\n    }\r\n  }\r\n  /** Emits event when file upload api returns success  */\r\n  onUploadSuccess(id: string, fileItem: FilePreviewModel): void {\r\n    this.fileId = id;\r\n    this.fileItem.fileId = id;\r\n    this.uploadSuccess.next({...fileItem, fileId: id});\r\n  }\r\n  handleProgressResponse(event: HttpEvent<any> , fileName) {\r\n    switch (event.type) {\r\n      case HttpEventType.Sent:\r\n        return ;\r\n\r\n      case HttpEventType.UploadProgress:\r\n        // Compute and show the % done:\r\n        this.uploadProgress = Math.round((100 * event.loaded) / event.total);\r\n       return;\r\n\r\n      case HttpEventType.Response:\r\n        const body: any = event.body;\r\n        if (body && body.data) {\r\n         // this.uploaded.next(res.data.toString());\r\n        }\r\n        this.uploadProgress = undefined;\r\n        return;\r\n      default:\r\n        this.uploadProgress = undefined;\r\n        return `File \"${fileName}\" surprising upload event: ${event.type}.`;\r\n    }\r\n  }\r\n onRemove(fileItem: FilePreviewModel): void {\r\n  this.uploadUnsubscribe();\r\n  this.removeFile.next(fileItem);\r\n }\r\n /** Cancel upload. Cancels request  */\r\n uploadUnsubscribe(): void {\r\n  if (this.uploadSubscription) {\r\n    this.uploadSubscription.unsubscribe();\r\n   }\r\n }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { FilePreviewModel } from '../file-preview.model';\r\nimport { FilePickerAdapter } from '../file-picker.adapter';\r\nimport { UploaderCaptions } from '../uploader-captions';\r\n\r\n@Component({\r\n  selector: 'file-preview-container',\r\n  templateUrl: './file-preview-container.component.html',\r\n  styleUrls: ['./file-preview-container.component.scss']\r\n})\r\nexport class FilePreviewContainerComponent implements OnInit {\r\n  @Input() previewFiles: FilePreviewModel[];\r\n  @Input() itemTemplate: TemplateRef<any>;\r\n  @Output() public removeFile = new EventEmitter<FilePreviewModel>();\r\n  @Output() public uploadSuccess = new EventEmitter<FilePreviewModel>();\r\n  lightboxFile: FilePreviewModel;\r\n  @Input() adapter: FilePickerAdapter;\r\n  @Input() captions: UploaderCaptions;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  openLightbox(file: FilePreviewModel) {\r\n   this.lightboxFile = file;\r\n  }\r\n  closeLightbox() {\r\n    this.lightboxFile = undefined;\r\n  }\r\n\r\n}\r\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\r\n\r\n/**\r\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\r\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\r\n * properties of the given {@link FileSystemEntry}.\r\n */\r\nexport class UploadFile {\r\n    constructor(\r\n        public relativePath: string,\r\n        public fileEntry: FileSystemEntry) {\r\n    }\r\n}\r\n","import { UploadFile } from './upload-file.model';\r\n\r\nexport class UploadEvent {\r\n    constructor(\r\n        public files: UploadFile[]) {\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { timer, Subscription } from 'rxjs';\r\n\r\nimport { UploadFile } from './upload-file.model';\r\nimport { UploadEvent } from './upload-event.model';\r\nimport { FileSystemFileEntry, FileSystemEntry, FileSystemDirectoryEntry } from './dom.types';\r\nimport { UploaderCaptions } from '../uploader-captions';\r\n\r\n@Component({\r\n  selector: 'file-drop',\r\n  templateUrl: './file-drop.component.html',\r\n  styleUrls: ['./file-drop.component.scss']\r\n})\r\n\r\n\r\nexport class FileComponent implements OnDestroy {\r\n  @Input()\r\n  captions: UploaderCaptions\r\n  @Input()\r\n  customstyle: string = null;\r\n  @Input()\r\n  disableIf = false;\r\n\r\n  @Output()\r\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\r\n  @Output()\r\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output()\r\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  stack = [];\r\n  files: UploadFile[] = [];\r\n  subscription: Subscription;\r\n  dragoverflag = false;\r\n\r\n  globalDisable = false;\r\n  globalStart: Function;\r\n  globalEnd: Function;\r\n\r\n  numOfActiveReadEntries = 0;\r\n  constructor(\r\n    private zone: NgZone,\r\n    private renderer: Renderer2\r\n  ) {\r\n    if (!this.customstyle) {\r\n      this.customstyle = 'drop-zone';\r\n    }\r\n    this.globalStart = this.renderer.listen('document', 'dragstart', (evt) => {\r\n      this.globalDisable = true;\r\n    });\r\n    this.globalEnd = this.renderer.listen('document', 'dragend', (evt) => {\r\n      this.globalDisable = false;\r\n    });\r\n  }\r\n  public onDragOver(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (!this.dragoverflag) {\r\n        this.dragoverflag = true;\r\n        this.onFileOver.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  public onDragLeave(event: Event): void {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      if (this.dragoverflag) {\r\n        this.dragoverflag = false;\r\n        this.onFileLeave.emit(event);\r\n      }\r\n      this.preventAndStop(event);\r\n    }\r\n  }\r\n\r\n  dropFiles(event: any) {\r\n    if (!this.globalDisable && !this.disableIf) {\r\n      this.dragoverflag = false;\r\n      event.dataTransfer.dropEffect = 'copy';\r\n      let length;\r\n      if (event.dataTransfer.items) {\r\n        length = event.dataTransfer.items.length;\r\n      } else {\r\n        length = event.dataTransfer.files.length;\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        let entry: FileSystemEntry;\r\n        if (event.dataTransfer.items) {\r\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\r\n          }\r\n        } else {\r\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\r\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\r\n          }\r\n        }\r\n        if (!entry) {\r\n          const file: File = event.dataTransfer.files[i];\r\n          if (file) {\r\n            const fakeFileEntry: FileSystemFileEntry = {\r\n              name: file.name,\r\n              isDirectory: false,\r\n              isFile: true,\r\n              file: (callback: (filea: File) => void): void => {\r\n                callback(file)\r\n              }\r\n            }\r\n            const toUpload: UploadFile = new UploadFile(fakeFileEntry.name, fakeFileEntry);\r\n            this.addToQueue(toUpload);\r\n          }\r\n        } else {\r\n          if (entry.isFile) {\r\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\r\n            this.addToQueue(toUpload);\r\n          } else if (entry.isDirectory) {\r\n            this.traverseFileTree(entry, entry.name);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.preventAndStop(event);\r\n\r\n      const timerObservable = timer(200, 200);\r\n      this.subscription = timerObservable.subscribe(t => {\r\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\r\n          this.onFileDrop.emit(new UploadEvent(this.files));\r\n          this.files = [];\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private traverseFileTree(item: FileSystemEntry, path: string) {\r\n\r\n    if (item.isFile) {\r\n      const toUpload: UploadFile = new UploadFile(path, item);\r\n      this.files.push(toUpload);\r\n      this.zone.run(() => {\r\n        this.popToStack();\r\n      });\r\n    } else {\r\n      this.pushToStack(path);\r\n      path = path + '/';\r\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\r\n      let entries = [];\r\n      const thisObj = this;\r\n\r\n      const readEntries = function () {\r\n        thisObj.numOfActiveReadEntries++\r\n        dirReader.readEntries(function (res) {\r\n          if (!res.length) {\r\n            // add empty folders\r\n            if (entries.length === 0) {\r\n              const toUpload: UploadFile = new UploadFile(path, item);\r\n              thisObj.zone.run(() => {\r\n                thisObj.addToQueue(toUpload);\r\n              });\r\n            } else {\r\n              for (let i = 0; i < entries.length; i++) {\r\n                thisObj.zone.run(() => {\r\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\r\n                });\r\n              }\r\n            }\r\n            thisObj.zone.run(() => {\r\n              thisObj.popToStack();\r\n            });\r\n          } else {\r\n            // continue with the reading\r\n            entries = entries.concat(res);\r\n            readEntries();\r\n          }\r\n          thisObj.numOfActiveReadEntries--\r\n        });\r\n      };\r\n\r\n      readEntries();\r\n    }\r\n  }\r\n\r\n  private addToQueue(item: UploadFile) {\r\n    this.files.push(item);\r\n  }\r\n\r\n  pushToStack(str) {\r\n    this.stack.push(str);\r\n  }\r\n\r\n  popToStack() {\r\n    const value = this.stack.pop();\r\n  }\r\n\r\n  private clearQueue() {\r\n    this.files = [];\r\n  }\r\n\r\n  private preventAndStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.globalStart();\r\n    this.globalEnd();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cloud-icon',\r\n  templateUrl: './cloud-icon.component.html',\r\n  styleUrls: ['./cloud-icon.component.scss']\r\n})\r\nexport class CloudIconComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {FileComponent} from './file-drop.component';\r\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileComponent,\r\n    CloudIconComponent\r\n  ],\r\n  exports: [FileComponent],\r\n  imports: [CommonModule],\r\n  providers: [],\r\n  bootstrap: [FileComponent],\r\n})\r\nexport class FileDropModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FilePreviewModel } from '../../file-preview.model';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'preview-lightbox',\r\n  templateUrl: './preview-lightbox.component.html',\r\n  styleUrls: ['./preview-lightbox.component.scss']\r\n})\r\nexport class PreviewLightboxComponent implements OnInit {\r\n  @Input() file: FilePreviewModel;\r\n  @Output() close = new EventEmitter<void>();\r\n  loaded: boolean;\r\n  safeUrl: SafeResourceUrl;\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    this.getSafeUrl(this.file.file);\r\n  }\r\n  getSafeUrl(file: File | Blob): void {\r\n    const url = window.URL.createObjectURL(file);\r\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n  onClose(event): void {\r\n   this.close.next();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'refresh-icon',\r\n  templateUrl: './refresh-icon.component.html',\r\n  styleUrls: ['./refresh-icon.component.scss']\r\n})\r\nexport class RefreshIconComponent implements OnInit {\r\n   @Output() public retry  = new EventEmitter<void>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\r\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\r\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilePickerComponent } from './file-picker.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilePickerService } from './file-picker.service';\r\nimport { FileDropModule } from './file-drop/file-drop.module';\r\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\r\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FileDropModule,\r\n  ],\r\n  declarations: [\r\n    FilePickerComponent,\r\n    FilePreviewContainerComponent,\r\n    FilePreviewItemComponent,\r\n    PreviewLightboxComponent,\r\n    RefreshIconComponent,\r\n    CloseIconComponent\r\n  ],\r\n  exports: [FilePickerComponent],\r\n  providers: [FilePickerService]\r\n})\r\nexport class FilePickerModule {}\r\n"],"names":[],"mappings":"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"}