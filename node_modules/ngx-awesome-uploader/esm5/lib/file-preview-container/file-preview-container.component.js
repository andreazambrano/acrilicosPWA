/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';
import { FilePickerAdapter } from '../file-picker.adapter';
var FilePreviewContainerComponent = /** @class */ (function () {
    function FilePreviewContainerComponent() {
        this.removeFile = new EventEmitter();
        this.uploadSuccess = new EventEmitter();
    }
    /**
     * @return {?}
     */
    FilePreviewContainerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} file
     * @return {?}
     */
    FilePreviewContainerComponent.prototype.openLightbox = /**
     * @param {?} file
     * @return {?}
     */
    function (file) {
        this.lightboxFile = file;
    };
    /**
     * @return {?}
     */
    FilePreviewContainerComponent.prototype.closeLightbox = /**
     * @return {?}
     */
    function () {
        this.lightboxFile = undefined;
    };
    FilePreviewContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'file-preview-container',
                    template: "<preview-lightbox *ngIf=\"lightboxFile\" [file]=\"lightboxFile\" (close)=\"closeLightbox()\"></preview-lightbox>\r\n<file-preview-item\r\n*ngFor=\"let file of previewFiles\"\r\n[fileItem]=\"file\"\r\n(removeFile)=\"removeFile.next($event)\"\r\n(uploadSuccess)=\"uploadSuccess.next($event)\"\r\n(imageClicked)=\"openLightbox($event)\"\r\n[itemTemplate]=\"itemTemplate\"\r\n[adapter]=\"adapter\"\r\n[captions]=\"captions\"\r\n></file-preview-item>\r\n",
                    styles: [":host{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:start;justify-content:flex-start;width:100%;background:#fafbfd}"]
                }] }
    ];
    /** @nocollapse */
    FilePreviewContainerComponent.ctorParameters = function () { return []; };
    FilePreviewContainerComponent.propDecorators = {
        previewFiles: [{ type: Input }],
        itemTemplate: [{ type: Input }],
        removeFile: [{ type: Output }],
        uploadSuccess: [{ type: Output }],
        adapter: [{ type: Input }],
        captions: [{ type: Input }]
    };
    return FilePreviewContainerComponent;
}());
export { FilePreviewContainerComponent };
if (false) {
    /** @type {?} */
    FilePreviewContainerComponent.prototype.previewFiles;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.itemTemplate;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.removeFile;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.uploadSuccess;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.lightboxFile;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.adapter;
    /** @type {?} */
    FilePreviewContainerComponent.prototype.captions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1wcmV2aWV3LWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYXdlc29tZS11cGxvYWRlci8iLCJzb3VyY2VzIjpbImxpYi9maWxlLXByZXZpZXctY29udGFpbmVyL2ZpbGUtcHJldmlldy1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUczRDtJQWFFO1FBTGlCLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztRQUNsRCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFvQixDQUFDO0lBSXRELENBQUM7Ozs7SUFFakIsZ0RBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Ozs7SUFDRCxvREFBWTs7OztJQUFaLFVBQWEsSUFBc0I7UUFDbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7SUFDMUIsQ0FBQzs7OztJQUNELHFEQUFhOzs7SUFBYjtRQUNFLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO0lBQ2hDLENBQUM7O2dCQXRCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsNmNBQXNEOztpQkFFdkQ7Ozs7OytCQUVFLEtBQUs7K0JBQ0wsS0FBSzs2QkFDTCxNQUFNO2dDQUNOLE1BQU07MEJBRU4sS0FBSzsyQkFDTCxLQUFLOztJQVlSLG9DQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FuQlksNkJBQTZCOzs7SUFDeEMscURBQTBDOztJQUMxQyxxREFBd0M7O0lBQ3hDLG1EQUFtRTs7SUFDbkUsc0RBQXNFOztJQUN0RSxxREFBK0I7O0lBQy9CLGdEQUFvQzs7SUFDcEMsaURBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmlsZVByZXZpZXdNb2RlbCB9IGZyb20gJy4uL2ZpbGUtcHJldmlldy5tb2RlbCc7XHJcbmltcG9ydCB7IEZpbGVQaWNrZXJBZGFwdGVyIH0gZnJvbSAnLi4vZmlsZS1waWNrZXIuYWRhcHRlcic7XHJcbmltcG9ydCB7IFVwbG9hZGVyQ2FwdGlvbnMgfSBmcm9tICcuLi91cGxvYWRlci1jYXB0aW9ucyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2ZpbGUtcHJldmlldy1jb250YWluZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9maWxlLXByZXZpZXctY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9maWxlLXByZXZpZXctY29udGFpbmVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEZpbGVQcmV2aWV3Q29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSBwcmV2aWV3RmlsZXM6IEZpbGVQcmV2aWV3TW9kZWxbXTtcclxuICBASW5wdXQoKSBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgQE91dHB1dCgpIHB1YmxpYyByZW1vdmVGaWxlID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlUHJldmlld01vZGVsPigpO1xyXG4gIEBPdXRwdXQoKSBwdWJsaWMgdXBsb2FkU3VjY2VzcyA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZVByZXZpZXdNb2RlbD4oKTtcclxuICBsaWdodGJveEZpbGU6IEZpbGVQcmV2aWV3TW9kZWw7XHJcbiAgQElucHV0KCkgYWRhcHRlcjogRmlsZVBpY2tlckFkYXB0ZXI7XHJcbiAgQElucHV0KCkgY2FwdGlvbnM6IFVwbG9hZGVyQ2FwdGlvbnM7XHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG4gIG9wZW5MaWdodGJveChmaWxlOiBGaWxlUHJldmlld01vZGVsKSB7XHJcbiAgIHRoaXMubGlnaHRib3hGaWxlID0gZmlsZTtcclxuICB9XHJcbiAgY2xvc2VMaWdodGJveCgpIHtcclxuICAgIHRoaXMubGlnaHRib3hGaWxlID0gdW5kZWZpbmVkO1xyXG4gIH1cclxuXHJcbn1cclxuIl19