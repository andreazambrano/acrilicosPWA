{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://@wkoza/ngx-upload/services/fileItem.model.ts","ng://@wkoza/ngx-upload/utils/logger.model.ts","ng://@wkoza/ngx-upload/services/httpClientUpload.service.ts","ng://@wkoza/ngx-upload/utils/configuration.model.ts","ng://@wkoza/ngx-upload/directives/dropzone.directive.ts","ng://@wkoza/ngx-upload/directives/thumbnail.directive.ts","ng://@wkoza/ngx-upload/components/inputfile.component.ts","ng://@wkoza/ngx-upload/directives/inputfile.directive.ts","ng://@wkoza/ngx-upload/ngx-upload.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","__spread","concat","FileItem","file","uploadService","logger","disableMultipart","this","isReady","progress","formData","FormData","alias","prototype","upload","endpoint","options","uploadFileItem","cancel","debug","uploadInProgress","ɵonCancel","cancelFileItem","remove","removeFromQueue","ɵonBeforeUploadItem","isSuccess","isCancel","isError","ɵonProgress","ɵonSuccess","ɵonError","sub","unsubscribe","NgxUploadLogger","noop","ConsoleLogger","_console","_debugEnabled","log","args","_i","_invokeConsoleMethod","info","warn","type","logFn","apply","Function","bind","NoOpLogger","HttpClientUploadService","httpClient","progressTotal","onCancel$","Subject","onError$","onDropError$","onSuccess$","onBeforeUploadItem$","onProgress$","onAddToQueue$","queue","Array","headers","Map","addToQueue","files","formGroup","multiple","errorAccept","errorMultiple","fileItem","item","this_1","accept","some","indexOf","split","keys","controls","forEach","append","get","_this","method","url","index","onBeforeUploadItem","sendable","name","req","HttpRequest","assign","reportProgress","request","subscribe","event","HttpEventType","UploadProgress","percentDone","Math","round","loaded","total","onProgressItem","HttpResponse","onSuccess","body","status","err","HttpErrorResponse","message","Error","onError","computeTotalProgress","uploadAll","items","filter","items_1","tslib_1.__values","items_1_1","cancelAll","items_2","items_2_1","removeAllFromQueue","items_3","items_3_1","splice","totalCurrent","_b","_c","size","Injectable","providedIn","HttpClient","NGX_DROP_TARGET_OPTIONS","InjectionToken","NGX_LOGGER_OPTIONS","ngxDropTargetOptions","color","colorDrag","colorDrop","ngxloggerOptions","enabled","ngxInputFileOptions","NgxDragAndDropDirective","el","renderer","injector","uploader","dropOptions","ngForm","formGroupDirective","platformId","form","isPlatformBrowser","listen","nativeElement","$event","onDragLeave","dropEvent","onDragOver","JSON","stringify","ngOnInit","addClass","removeClass","stopAndPrevent","transfer","getTransfer","dropEffect","haveFiles","types","stopPropagation","preventDefault","dataTransfer","originalEvent","contains","tslib_1.__decorate","Input","Directive","selector","exportAs","tslib_1.__param","Inject","Optional","PLATFORM_ID","ElementRef","Renderer2","Injector","NgForm","FormGroupDirective","NgxThumbnailDirective","imgEl_1","createElement","appendChild","setStyle","_getOrientation","srcOrientation","img","Image","reader","FileReader","onload","evt","width","height","canvas","document","ctx","getContext","transform","drawImage","setProperty","toDataURL","src","readAsDataURL","callback","view","DataView","getUint16","byteLength","offset","marker","getUint32","little","tags","readAsArrayBuffer","slice","InputfileComponent","Set","onFilesAdded","ngAfterViewInit","join","capture","ViewChild","static","Component","template","NgxInputFileDirective","resolver","vcRef","templateRef","_contentViewRef","createEmbeddedView","factory","resolveComponentFactory","createComponent","rootNodes","instance","ngxInputFile","detectChanges","ComponentFactoryResolver","ViewContainerRef","TemplateRef","ngxDeclarations","_loggerFactory","isDevMode","console","NGX_UPLOAD_ROOT_GUARD","createNgxUploadRootGuard","TypeError","NgxUploadModule","forRoot","dropTargetOptions","loggerOptions","ngModule","NgxUploadModule_1","providers","provide","useValue","useFactory","deps","SkipSelf","NgModule","declarations","exports","imports","HttpClientModule","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgxUploadLogger } from '../utils/logger.model';\nimport { Subscription } from 'rxjs';\nimport { UploadEndPoint } from '../utils/configuration.model';\nimport { HttpClientUploadService } from './httpClientUpload.service';\n\nexport class FileItem {\n\n    uploadInProgress: boolean;\n    isReady = true;\n    isSuccess: boolean;\n    isCancel: boolean;\n    isError: boolean;\n    progress = 0;\n\n    formData: FormData = new FormData();\n\n    alias = 'file';\n\n    sub: Subscription;\n\n    constructor(public file: File, private uploadService: HttpClientUploadService, protected logger: NgxUploadLogger,\n                public disableMultipart) { }\n\n    upload(endpoint: UploadEndPoint, options?: any) {\n        if (endpoint) {\n            this.uploadService.uploadFileItem(this, endpoint, options);\n        } else {\n            this.logger.error('You must define a UploadEndPoint object.');\n        }\n    }\n\n    cancel() {\n        this.logger.debug('upload cancel');\n        if (this.uploadInProgress) {\n            this.ÉµonCancel();\n            this.uploadService.cancelFileItem(this);\n        }\n    }\n\n    remove() {\n        this.logger.debug('upload remove');\n        this.uploadService.removeFromQueue(this);\n    }\n\n    ÉµonBeforeUploadItem() {\n        this.isReady = true;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n    }\n\n    ÉµonProgress(progress: number) {\n        this.isReady = false;\n        this.progress = progress;\n    }\n\n    ÉµonSuccess() {\n        this.isReady = false;\n        this.uploadInProgress = false;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n    }\n\n    ÉµonError() {\n        this.isReady = false;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n    }\n\n    ÉµonCancel() {\n        this.isReady = true;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.sub.unsubscribe();\n    }\n\n\n}\n","\n/**\n * Simple service for logging the module.\n */\nexport abstract class NgxUploadLogger {\n    /** Write a log message. */\n    abstract log(...args: any[]): void;\n\n    /** Write an information message. */\n    abstract info(...args: any[]): void;\n\n    /** Write a warning message. */\n    abstract warn(...args: any[]): void;\n\n    /** Write an error message. */\n    abstract error(...args: any[]): void;\n\n    /** Write a debug message. */\n    abstract debug(...args: any[]): void;\n\n}\n\nconst noop = (): any => undefined;\n\n/**\n * Default implementation of Logger that safely writes the message into the console.\n *\n */\nexport class ConsoleLogger implements NgxUploadLogger {\n    constructor(private _console: Console, private _debugEnabled = true) {}\n\n    log(...args: any[]): void { this._invokeConsoleMethod('log', args); }\n\n    info(...args: any[]): void { this._invokeConsoleMethod('info', args); }\n\n    warn(...args: any[]): void { this._invokeConsoleMethod('warn', args); }\n\n    error(...args: any[]): void { this._invokeConsoleMethod('error', args); }\n\n    debug(...args: any[]): void {\n        if (this._debugEnabled) { this._invokeConsoleMethod('debug', args); }\n    }\n\n    private _invokeConsoleMethod(type: string, args?: any[]): void {\n        let logFn: Function = (<any>this._console)[type] || this._console.log || noop;\n\n        // console methods in IE9 don't have 'apply' method, polyfill it\n        if (!logFn.apply) {\n            logFn = Function.prototype.bind.call(logFn, this._console);\n        }\n\n        logFn.apply(this._console, args);\n    }\n}\n\n/**\n * No op implementation of Logger.\n *\n */\nexport class NoOpLogger implements NgxUploadLogger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n\n}\n","import { FormGroup } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpEventType,\n  HttpHeaders,\n  HttpParams,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { FileItem } from './fileItem.model';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { DropTargetOptions, InputFileOptions, UploadEndPoint } from '../utils/configuration.model';\n\n\n// send an event for each upload event. These events can be catched by the user for call a callback\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientUploadService {\n\n  queue: FileItem[];\n  progressTotal = 0;\n  withCredentials: boolean;\n\n  sub: Subscription;\n\n  /**\n   * Internal map of lowercase header names to values.\n   */\n  protected headers: Map<string, string[]>;\n\n  public onCancel$ = new Subject<FileItem>();\n  public onError$ = new Subject<{ item: FileItem, body: any, status: number, headers: any }>();\n  public onDropError$ = new Subject<{ item?: File, errorAccept: boolean, errorMultiple: boolean }>();\n  public onSuccess$ = new Subject<{ item: FileItem, body: any, status: number, headers: any }>(); // TODO headers isn't `any` but `Array`\n  public onBeforeUploadItem$ = new Subject<FileItem>();\n  public onProgress$ = new Subject<{ item: FileItem, progress: number }>();\n  public onAddToQueue$ = new Subject<FileItem>();\n\n  constructor(protected logger: NgxUploadLogger, private httpClient: HttpClient) {\n    this.queue = new Array<FileItem>();\n    this.headers = new Map();\n  }\n\n  /**\n   * Adds files to the queue\n   */\n  addToQueue(files: FileList, formGroup: FormGroup | null, options: DropTargetOptions | InputFileOptions) {\n\n    this.logger.info('add to queue');\n\n    if (options && !options.multiple) {\n      if (files.length > 1) {\n        this.logger.error('there is more than one file.');\n        this.onDropError$.next({errorAccept: false, errorMultiple: true});\n        return;\n      }\n    }\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files.item(i)!;\n      this.logger.debug(files.item(i));\n\n      if (options && options.accept) {\n        const accepted = options.accept.some((type: string) => {\n          if (type.indexOf('/*') > -1) {\n            return type.split('/')[0] === file.type.split('/')[0]\n          } else {\n            return (type === '*' || type === file.type)\n          }\n        });\n        if (!accepted) {\n          this.logger.error('this file is not accepted because of its type', file);\n          this.onDropError$.next({item: file, errorAccept: true, errorMultiple: false});\n          continue\n        }\n      }\n\n      let fileItem;\n      if (options && options.disableMultipart) {\n        fileItem = new FileItem(file, this, this.logger, true);\n      } else {\n        fileItem = new FileItem(file, this, this.logger, false);\n        if (formGroup) {\n          Object.keys(formGroup.controls).forEach((key) => {\n            fileItem.formData.append(key, formGroup.get(key) !.value);\n          });\n        }\n      }\n      this.queue.push(fileItem);\n      this.onAddToQueue$.next(fileItem);\n    }\n  }\n\n  uploadFileItem(fileItem: FileItem, endpoint: UploadEndPoint, options: {\n    headers?: HttpHeaders;\n    reportProgress?: boolean;\n    params?: HttpParams;\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n    withCredentials?: boolean;\n  } = {}): void {\n    this.logger.info('enter uploadService.uploadFileItem()');\n\n    const method = endpoint.method as string;\n    const url = endpoint.url as string;\n\n    const index = this.queue.indexOf(fileItem);\n    const item = this.queue[index];\n\n    this.onBeforeUploadItem(item);\n\n    if (item.isCancel) {\n      return\n    }\n\n    item.uploadInProgress = true;\n\n    let sendable;\n\n    if (!fileItem.disableMultipart) {\n      sendable = item.formData;\n      sendable.append(item.alias, item.file, item.file.name);\n    } else {\n      sendable = item.file;\n    }\n\n    const req = new HttpRequest(method, url, sendable, Object.assign(options, {reportProgress: true}));\n\n    fileItem.sub = this.httpClient.request(req).subscribe(\n      (event) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          // This is an upload progress event. Compute and show the % done:\n          const percentDone = Math.round(event.loaded * 100 / (event.total ? event.total : event.loaded));\n          this.logger.debug(`File is ${percentDone}% uploaded.`);\n          fileItem.ÉµonProgress(percentDone);\n          this.onProgressItem(item, percentDone);\n\n        } else if (event instanceof HttpResponse) {\n          // A successful response is delivered on the event stream.\n          fileItem.ÉµonSuccess();\n          this.onSuccess(item, event.body, event.status, event.headers);\n        }\n      },\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (url === 'ngx_upload_mock') {\n            item.ÉµonSuccess();\n            this.onSuccess(item, err.message, err.status, err.headers);\n          } else if (err.error instanceof Error) {\n            // A client-side or network error occurred. Handle it accordingly.\n            item.ÉµonError();\n            this.onError(item, err.error.message, err.status, err.headers);\n          } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            item.ÉµonError();\n            this.onError(item, err.error, err.status, err.headers);\n          }\n        }\n      }\n    );\n  }\n\n  cancelFileItem(fileItem: FileItem) {\n    this.progressTotal = this.computeTotalProgress();\n    this.onCancel$.next(fileItem)\n  }\n\n  /**\n   * Uploads all not uploaded items of queue\n   */\n  uploadAll(endpoint: UploadEndPoint, options?: any) {\n    const items = this.queue.filter(item => (item.isReady));\n    if (!items.length) {\n      return;\n    }\n\n    for (const item of items) {\n      item.upload(endpoint, options);\n    }\n  }\n\n  /**\n   * Uploads all not uploaded items of queue\n   */\n  cancelAll() {\n    const items: FileItem[] = this.queue.filter(item => (item.uploadInProgress));\n    if (!items.length) {\n      return;\n    }\n\n    for (const item of items) {\n      item.cancel();\n    }\n    this.progressTotal = this.computeTotalProgress();\n  }\n\n  /**\n   * Uploads all not uploaded items of queue\n   */\n  removeAllFromQueue() {\n    const items: FileItem[] = this.queue.filter(item => (!item.uploadInProgress && !item.isSuccess));\n    if (!items.length) {\n      return;\n    }\n\n    for (const item of items) {\n      this.removeFromQueue(item);\n    }\n  }\n\n  removeFromQueue(fileItem: FileItem) {\n    const index = this.queue.indexOf(fileItem);\n    const item = this.queue[index];\n    if (item.uploadInProgress) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progressTotal = this.computeTotalProgress();\n  }\n\n\n  /**\n   * Returns the total progress\n   * @param {Number} [value]\n   * @returns {Number}\n   * @private\n   */\n  computeTotalProgress(): number {\n    let totalCurrent = 0;\n    let total = 0;\n    for (const item of this.queue) {\n      if (item.uploadInProgress || item.isSuccess) {\n        totalCurrent += (item.file.size / 100) * item.progress || 0;\n        total += item.file.size;\n        this.logger.debug(totalCurrent + ' / ' + total);\n      }\n    }\n    return Math.round((totalCurrent * 100) / total);\n  }\n\n  /**\n   * Prepares file status before upload\n   * @param item\n   */\n  protected onBeforeUploadItem(item: FileItem) {\n    this.logger.info('enter uploadService.ÉµonBeforeUploadItem()');\n    item.ÉµonBeforeUploadItem();\n    this.onBeforeUploadItem$.next(item);\n  }\n\n  /**\n   * Update status during upload progress\n   * @param item\n   * @param progress\n   */\n  protected onProgressItem(item: FileItem, progress: number): void {\n    this.logger.info(`call onProgressItem ${item} ${progress}`);\n    this.progressTotal = this.computeTotalProgress();\n    item.ÉµonProgress(progress);\n    this.onProgress$.next({item, progress});\n  }\n\n  /**\n   * Callback called when an upload error occurs\n   * @param item\n   * @param xhr\n   */\n  protected onError(item: FileItem, body: any, status: number, headers: any) {\n    this.logger.info(`call onError ${item} ${body} ${status} ${headers}`);\n    item.ÉµonError();\n    this.onError$.next({item, body, status, headers});\n  }\n\n  /**\n   * Callback called when an upload success occurs\n   * @param item\n   * @param xhr\n   */\n  protected onSuccess(item: FileItem, body: any, status: number, headers: any) { // TODO headers is not any\n    this.logger.info(`call onSuccess ${item} ${body} ${status} ${headers}`);\n    this.progressTotal = this.computeTotalProgress();\n    item.ÉµonSuccess();\n    this.onSuccess$.next({item, body, status, headers});\n  }\n\n\n}\n\n","import { InjectionToken } from '@angular/core';\nimport { MineTypeEnum } from './mimetype.model';\n\nexport type Method = 'POST' | 'GET';\n\nexport interface DropTargetOptions {\n  color: string;\n  colorDrag: string;\n  colorDrop: string;\n  accept?: MineTypeEnum[];\n  capture?: 'user' | 'environment';\n  multiple?: boolean;\n  disableMultipart?: boolean;\n}\n\nexport interface LoggerOptions {\n  enabled?: boolean;\n  debug?: boolean;\n}\n\nexport interface UploadEndPoint {\n  method?: Method;\n  url?: string;\n}\n\nexport interface InputFileOptions {\n  accept?: MineTypeEnum[];\n  capture?: 'user' | 'environment';\n  multiple?: boolean;\n  disableMultipart?: boolean;\n}\n\nexport const NGX_DROP_TARGET_OPTIONS = new InjectionToken<DropTargetOptions>('Ngx drop Zone Options');\nexport const NGX_LOGGER_OPTIONS = new InjectionToken<LoggerOptions>('Ngx Logger Options');\n\n\nexport const ngxDropTargetOptions: DropTargetOptions = {\n  color: '',\n  colorDrag: '',\n  colorDrop: '',\n  multiple: true,\n  disableMultipart: false\n};\n\nexport const ngxloggerOptions: LoggerOptions = {\n  enabled: false,\n  debug: true\n};\n\nexport const ngxInputFileOptions: InputFileOptions = {\n  multiple: true,\n  disableMultipart: false\n};\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n    OnInit,\n    Renderer2,\n    Inject, Injector, Optional, PLATFORM_ID\n} from '@angular/core';\nimport { FormGroup, FormGroupDirective, NgForm } from '@angular/forms';\nimport {\n    DropTargetOptions, NGX_DROP_TARGET_OPTIONS\n} from '../utils/configuration.model';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { HttpClientUploadService } from '../services/httpClientUpload.service';\nimport {isPlatformBrowser} from '@angular/common';\n\n\n/**\n * Transforms a node into a drag and drop zone.\n */\n@Directive({\n    selector: '[ngxDragAndDrop]',\n    exportAs: 'ngxDragAndDrop'\n})\nexport class NgxDragAndDropDirective implements OnInit {\n\n    @Input()\n    set ngxDragAndDrop(dropOptions: DropTargetOptions) {\n        if (dropOptions) {\n            this.logger.debug(JSON.stringify(dropOptions));\n            this.dropOptions = dropOptions;\n        }\n    }\n\n    private readonly formGroup: FormGroup | null;\n\n    constructor(private el: ElementRef,\n                private renderer: Renderer2,\n                private injector: Injector,\n                private logger: NgxUploadLogger,\n                public uploader: HttpClientUploadService,\n                @Inject(NGX_DROP_TARGET_OPTIONS) private dropOptions: DropTargetOptions,\n                @Optional() private ngForm: NgForm, @Optional() private formGroupDirective: FormGroupDirective,\n                @Inject(PLATFORM_ID) platformId: Object) {\n        if (this.ngForm) {\n            this.formGroup = ngForm.form;\n        } else if (this.formGroupDirective) {\n            this.formGroup = formGroupDirective.form;\n        } else {\n            this.formGroup = null;\n        }\n        if (isPlatformBrowser(platformId)) {\n            this.renderer.listen(el.nativeElement, 'dragleave', ($event) => this.onDragLeave($event));\n            this.renderer.listen(el.nativeElement, 'drop', ($event) => this.dropEvent($event));\n            this.renderer.listen(el.nativeElement, 'dragover', ($event) => this.onDragOver($event));\n        }\n    }\n\n    ngOnInit(): void {\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.color);\n    }\n\n    onDragLeave(event) {\n        this.logger.debug('dragleave event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.color);\n        this.stopAndPrevent(event);\n    }\n\n    dropEvent(event) {\n        this.logger.debug('drop event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.color);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        const transfer = this.getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this.stopAndPrevent(event);\n        this.uploader.addToQueue(transfer.files, this.formGroup, this.dropOptions);\n    }\n\n\n    onDragOver(event) {\n        this.logger.debug('dragover event');\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.color);\n        this.renderer.removeClass(this.el.nativeElement, this.dropOptions.colorDrop);\n        this.renderer.addClass(this.el.nativeElement, this.dropOptions.colorDrag);\n        const transfer = this.getTransfer(event);\n        if (!this.haveFiles(transfer.types)) {\n            return;\n        }\n        this.stopAndPrevent(event);\n    }\n\n    private stopAndPrevent(event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    private getTransfer(event): DataTransfer {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n\n    private haveFiles(types: any): boolean {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        } else if (types.contains) {\n            return types.contains('Files');\n        } else {\n            return false;\n        }\n    }\n\n}\n","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport { FileItem } from '../services/fileItem.model';\n\n/**\n * Transforms a node into a thumbnail zone.\n */\n@Directive({\n    selector: '[ngxThumbnail]',\n    exportAs: 'ngxThumbnail'\n})\nexport class NgxThumbnailDirective implements OnInit {\n\n    @Input('ngxThumbnail') fileItem: FileItem;\n\n    constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n    ngOnInit() {\n        // must be used only with image file\n        if (this.fileItem.file.type.indexOf('image/jpeg') !== 0 &&\n            this.fileItem.file.type.indexOf('image/png') !== 0) {\n            return\n        } else {\n\n            const imgEl = this.renderer.createElement('img');\n            this.renderer.appendChild(this.el.nativeElement, imgEl);\n            this.renderer.setStyle(imgEl, 'width', '100%');\n            this.renderer.setStyle(imgEl, 'height', '100%');\n\n            this._getOrientation(this.fileItem.file, (srcOrientation) => {\n\n                const img = new Image();\n                const reader = new FileReader();\n\n                reader.onload = (evt) => {\n\n                    img.onload = () => {\n                        const width = img.width,\n                            height = img.height,\n                            canvas = document.createElement('canvas'),\n                            ctx = canvas.getContext('2d')!;\n\n                        // set proper canvas dimensions before transform & export\n                        if (4 < srcOrientation && srcOrientation < 9) {\n                            canvas.width = height;\n                            canvas.height = width;\n                        } else {\n                            canvas.width = width;\n                            canvas.height = height;\n                        }\n\n                        // transform context before drawing image\n                        switch (srcOrientation) {\n                            case 2:\n                                ctx.transform(-1, 0, 0, 1, width, 0);\n                                break;\n                            case 3:\n                                ctx.transform(-1, 0, 0, -1, width, height);\n                                break;\n                            case 4:\n                                ctx.transform(1, 0, 0, -1, 0, height);\n                                break;\n                            case 5:\n                                ctx.transform(0, 1, 1, 0, 0, 0);\n                                break;\n                            case 6:\n                                ctx.transform(0, 1, -1, 0, height, 0);\n                                break;\n                            case 7:\n                                ctx.transform(0, -1, -1, 0, height, width);\n                                break;\n                            case 8:\n                                ctx.transform(0, -1, 1, 0, 0, width);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        // draw image\n                        ctx.drawImage(img, 0, 0);\n\n                        this.renderer.setProperty(imgEl, 'src', canvas.toDataURL());\n                    };\n\n                    img.src = evt.target!['result'];\n                };\n                reader.readAsDataURL(this.fileItem.file);\n\n            });\n        }\n    }\n\n    /*\n    * getOrientation computes the real orientation of the image\n    *\n    */\n    _getOrientation(file, callback) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n\n            const view = new DataView(event.target!['result']);\n\n            if (view.getUint16(0, false) !== 0xFFD8) return callback(-2);\n\n            const length = view.byteLength;\n            let offset = 2;\n\n            while (offset < length) {\n                const marker = view.getUint16(offset, false);\n                offset += 2;\n\n                if (marker === 0xFFE1) {\n                    if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                        return callback(-1);\n                    }\n                    const little = view.getUint16(offset += 6, false) === 0x4949;\n                    offset += view.getUint32(offset + 4, little);\n                    const tags = view.getUint16(offset, little);\n                    offset += 2;\n\n                    for (let i = 0; i < tags; i++)\n                        if (view.getUint16(offset + (i * 12), little) === 0x0112)\n                            return callback(view.getUint16(offset + (i * 12) + 8, little));\n                } else if ((marker & 0xFF00) !== 0xFF00) break;\n                else offset += view.getUint16(offset, false);\n            }\n            return callback(-1);\n        };\n        reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n    };\n\n\n}\n","import { AfterViewInit, Component, Injector, Optional, Renderer2, ViewChild } from '@angular/core';\nimport { FormGroup, FormGroupDirective, NgForm } from '@angular/forms';\n\nimport { InputFileOptions } from '../utils/configuration.model';\nimport { HttpClientUploadService } from '../services/httpClientUpload.service';\n\n\n@Component({\n  selector: 'ngx-upload-inputfile',\n  template: `\n      <label class=\"input-file\">\n          <input type=\"file\" #file (change)=\"onFilesAdded()\">\n          <ng-content></ng-content>\n      </label>`,\n  styles: ['input[type=\"file\"] { display: none; } .input-file { width: 100%; }']\n})\nexport class InputfileComponent implements AfterViewInit {\n\n  @ViewChild('file', {static: true}) file;\n\n  files: Set<File> = new Set();\n\n  options: InputFileOptions;\n\n  private formGroup: FormGroup | null;\n\n\n  constructor(private injector: Injector, private uploader: HttpClientUploadService, private renderer: Renderer2,\n              @Optional() private ngForm: NgForm, @Optional() private formGroupDirective: FormGroupDirective) {\n    if (this.ngForm) {\n      this.formGroup = ngForm.form;\n    } else if (this.formGroupDirective) {\n      this.formGroup = formGroupDirective.form;\n    } else {\n      this.formGroup = null;\n    }\n  }\n\n  onFilesAdded() {\n    this.uploader.addToQueue(this.file.nativeElement.files, this.formGroup, this.options);\n    // Clear the previous input value\n    this.file.nativeElement.value = '';\n  }\n\n  ngAfterViewInit() {\n    if (this.options.multiple !== false) this.renderer.setProperty(this.file.nativeElement, 'multiple', 'multiple');\n    if (this.options.accept) this.renderer.setProperty(this.file.nativeElement, 'accept', this.options.accept.join());\n    if (this.options.capture) this.renderer.setProperty(this.file.nativeElement, 'capture', this.options.capture);\n  }\n}\n","import {\n  ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, OnInit, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { InputfileComponent } from '../components/inputfile.component';\nimport { InputFileOptions, ngxInputFileOptions } from '../utils/configuration.model';\n\n\n@Directive({\n  selector: '[ngxInputFile]'\n})\nexport class NgxInputFileDirective implements OnInit {\n\n  @Input()\n  ngxInputFile: InputFileOptions;\n\n  constructor(private resolver: ComponentFactoryResolver, private injector: Injector,\n              private vcRef: ViewContainerRef, private templateRef: TemplateRef<any>) {\n  }\n\n  ngOnInit() {\n    const _contentViewRef = this.templateRef.createEmbeddedView(null);\n    const factory = this.resolver.resolveComponentFactory(InputfileComponent);\n    const component: ComponentRef<InputfileComponent> = this.vcRef.createComponent(factory, 0, this.injector, [_contentViewRef.rootNodes]);\n    component.instance.options = (this.ngxInputFile) ? this.ngxInputFile : ngxInputFileOptions;\n    _contentViewRef.detectChanges();\n  }\n}\n","import { InjectionToken, isDevMode, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxDragAndDropDirective } from './directives/dropzone.directive';\nimport { NgxThumbnailDirective } from './directives/thumbnail.directive';\nimport { NgxInputFileDirective } from './directives/inputfile.directive';\nimport {\n  DropTargetOptions,\n  LoggerOptions, NGX_DROP_TARGET_OPTIONS,\n  NGX_LOGGER_OPTIONS,\n  ngxDropTargetOptions,\n  ngxloggerOptions\n} from './utils/configuration.model';\nimport { ConsoleLogger, NgxUploadLogger, NoOpLogger } from './utils/logger.model';\nimport { InputfileComponent } from './components/inputfile.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst ngxDeclarations = [\n  NgxDragAndDropDirective, NgxThumbnailDirective, InputfileComponent, NgxInputFileDirective\n];\n\n/**\n * Factory associated with internal logger\n * @param options\n * @returns {any}\n * @private\n */\nexport function _loggerFactory(options: LoggerOptions): NgxUploadLogger {\n  const enabled = options.enabled ? options.enabled : isDevMode();\n  if (enabled) {\n    const _console: Console = typeof console === 'object' ? console : <any>{};\n    const debug = options.debug ? options.debug : true;\n    return new ConsoleLogger(_console, debug);\n  }\n  return new NoOpLogger();\n}\n\nexport const NGX_UPLOAD_ROOT_GUARD = new InjectionToken<void>('Internal forRoot Guard');\n\nexport function createNgxUploadRootGuard(options: LoggerOptions) {\n  if (options) {\n    throw new TypeError('NgxUploadModule.forRoot() is called twice.')\n  }\n  return 'guarded';\n}\n\n@NgModule({\n  declarations: [\n    ...ngxDeclarations\n  ],\n  exports: [\n    ...ngxDeclarations\n  ],\n  imports: [ HttpClientModule ],\n  entryComponents: [InputfileComponent]\n})\n\nexport class NgxUploadModule {\n\n  static forRoot(dropTargetOptions?: DropTargetOptions,\n                 loggerOptions?: LoggerOptions): ModuleWithProviders {\n\n    return {\n      ngModule: NgxUploadModule,\n      providers: [\n        { provide: NGX_LOGGER_OPTIONS, useValue: (loggerOptions) ? loggerOptions : ngxloggerOptions },\n        {\n          provide: NGX_DROP_TARGET_OPTIONS,\n          useValue: (dropTargetOptions) ? dropTargetOptions : ngxDropTargetOptions\n        },\n        {\n          provide: NgxUploadLogger,\n          useFactory: _loggerFactory,\n          deps: [NGX_LOGGER_OPTIONS]\n        },\n        {\n          provide: NGX_UPLOAD_ROOT_GUARD,\n          useFactory: createNgxUploadRootGuard,\n          deps: [[NGX_LOGGER_OPTIONS, new Optional(), new SkipSelf()]]\n        }\n      ]\n    }\n  };\n}\n\n"]}