import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output, ViewEncapsulation, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
var RADIO_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(function () { return RadioButtonComponent; }),
    multi: true
};
var nextId = 0;
var RadioButtonComponent = /** @class */ (function () {
    function RadioButtonComponent(cdr) {
        this.cdr = cdr;
        this.UNIQUE_ID = "ngx-radio-" + ++nextId;
        this.id = this.UNIQUE_ID;
        this.name = this.UNIQUE_ID;
        this.change = new EventEmitter();
        this.blur = new EventEmitter();
        this.focus = new EventEmitter();
        this.groupDisabled = false;
        this._checked = false;
        this._value = false;
        this._disabled = false;
        this._tabindex = 0;
    }
    Object.defineProperty(RadioButtonComponent.prototype, "tabindex", {
        get: function () {
            return this._tabindex;
        },
        set: function (tabindex) {
            this._tabindex = coerceNumberProperty(tabindex);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonComponent.prototype, "checked", {
        get: function () {
            return this._checked;
        },
        set: function (checked) {
            checked = coerceBooleanProperty(checked);
            if (this._checked !== checked) {
                this._checked = checked;
                this.onChangeCallback(this._value);
            }
            this.cdr.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (this._value !== value) {
                this._value = value;
                this.onChangeCallback(this._value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonComponent.prototype, "disabled", {
        get: function () {
            return this._disabled || this.groupDisabled;
        },
        set: function (disabled) {
            this._disabled = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    RadioButtonComponent.prototype._onInputChange = function (event) {
        event.stopPropagation();
        this.checked = true;
    };
    RadioButtonComponent.prototype.writeValue = function (value) {
        this.value = value;
    };
    RadioButtonComponent.prototype.onFocus = function (e) {
        this.focus.emit(e);
        this.onTouchedCallback();
    };
    RadioButtonComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    RadioButtonComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    RadioButtonComponent.prototype.onChangeCallback = function (value) {
        if (this.checked) {
            this.change.emit(value);
        }
    };
    RadioButtonComponent.prototype.onTouchedCallback = function () {
        // placeholder
    };
    RadioButtonComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], RadioButtonComponent.prototype, "id", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], RadioButtonComponent.prototype, "name", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RadioButtonComponent.prototype, "tabindex", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RadioButtonComponent.prototype, "checked", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RadioButtonComponent.prototype, "value", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RadioButtonComponent.prototype, "disabled", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], RadioButtonComponent.prototype, "change", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], RadioButtonComponent.prototype, "blur", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], RadioButtonComponent.prototype, "focus", void 0);
    RadioButtonComponent = __decorate([
        Component({
            exportAs: 'ngxRadiobutton',
            selector: 'ngx-radiobutton',
            template: "<label class=\"radio-label\">\n  <input\n    type=\"radio\"\n    class=\"radio-input\"\n    [id]=\"id\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [name]=\"name\"\n    [tabIndex]=\"tabindex\"\n    (focus)=\"onFocus($event)\"\n    (blur)=\"blur.emit($event)\"\n    (change)=\"_onInputChange($event)\"\n  />\n  <span class=\"checkmark\"></span>\n  <ng-content></ng-content>\n</label>\n",
            host: {
                class: 'ngx-radiobutton',
                '[class.disabled]': 'disabled'
            },
            providers: [RADIO_VALUE_ACCESSOR],
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".ngx-radiobutton{display:block}.ngx-radiobutton .radio-label{display:block;position:relative;padding-left:1.5em;margin:0 .8rem 0 0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-radiobutton .radio-label input{position:absolute;opacity:0}.ngx-radiobutton .checkmark{position:absolute;top:.25em;left:0;height:1em;width:1em;background-color:transparent;border-radius:50%;border:1px solid #6f809e;opacity:1;-webkit-transition:background-color .3s,opacity .3s;transition:background-color .3s,opacity .3s}.ngx-radiobutton .radio-label:hover input~.checkmark{background-color:#2196f3;border:1px solid #2196f3;opacity:.3}.ngx-radiobutton .radio-label .checkmark:after,.ngx-radiobutton .radio-label:hover .checkmark:after{content:'';position:absolute;display:block;opacity:0;top:0;left:0;width:.25em;height:.25em;-webkit-transform:translate3d(.32em,.32em,0);transform:translate3d(.32em,.32em,0);border-radius:50%;background:#fff;box-shadow:0 1px 0 rgba(0,0,0,.25);-webkit-transition:opacity .5s;transition:opacity .5s}.ngx-radiobutton.disabled .radio-input:after,.ngx-radiobutton.disabled .radio-input:before,.ngx-radiobutton.disabled .radio-label{cursor:not-allowed}.ngx-radiobutton.disabled .radio-label:hover input~.checkmark{background-color:transparent;border:1px solid #6f809e;opacity:1}.ngx-radiobutton.disabled .radio-label:hover .checkmark:after{opacity:0}.ngx-radiobutton .radio-label input:checked~.checkmark,.ngx-radiobutton.disabled .radio-label input:checked~.checkmark{background-color:#2196f3;border:1px solid #2196f3;opacity:1}.ngx-radiobutton .radio-label input:checked~.checkmark:after,.ngx-radiobutton .radio-label:hover .checkmark:after,.ngx-radiobutton.disabled .radio-label input:checked~.checkmark:after{opacity:1}"]
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], RadioButtonComponent);
    return RadioButtonComponent;
}());
export { RadioButtonComponent };
//# sourceMappingURL=data:application/json;base64,