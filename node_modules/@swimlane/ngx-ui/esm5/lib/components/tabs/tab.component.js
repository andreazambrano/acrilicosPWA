import { __decorate, __metadata } from "tslib";
import { Component, Input, TemplateRef, ContentChild, ElementRef, Renderer2, OnInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { IfTabActiveDirective } from './if-tab-active.directive';
/**
 * TODO: Remove hidden when https://github.com/angular/angular/issues/18310 is resolved
 */
var TabComponent = /** @class */ (function () {
    function TabComponent(cdr, renderer, elRef) {
        this.cdr = cdr;
        this.renderer = renderer;
        this.elRef = elRef;
        this.title = '';
        this.label = '';
        this.active = false;
        this.disabled = false;
    }
    TabComponent.prototype.ngOnInit = function () {
        // backwards compatibility
        if (this.title) {
            this.label = this.title;
            this.renderer.removeAttribute(this.elRef.nativeElement, 'title');
        }
        this.labelTemplate = typeof this.label === 'string' ? this.labelStringTemplate : this.label;
    };
    TabComponent.prototype.detectChanges = function () {
        this.cdr.detectChanges();
    };
    TabComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TabComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "label", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "active", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "disabled", void 0);
    __decorate([
        ViewChild('labelIsStringTmpl', { static: true }),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "labelStringTemplate", void 0);
    __decorate([
        ContentChild(IfTabActiveDirective),
        __metadata("design:type", IfTabActiveDirective)
    ], TabComponent.prototype, "template", void 0);
    TabComponent = __decorate([
        Component({
            selector: 'ngx-tab',
            template: "<div *ngIf=\"template; then template_container; else content_container\"></div>\n<ng-template #template_container>\n  <div *ngIf=\"active\">\n    <ng-container [ngTemplateOutlet]=\"template.templateRef\"></ng-container>\n  </div>\n</ng-template>\n<ng-template #content_container>\n  <div [hidden]=\"!active\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n<ng-template #labelIsStringTmpl>{{ label }}</ng-template>\n",
            host: {
                class: 'ngx-tab'
            },
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, Renderer2, ElementRef])
    ], TabComponent);
    return TabComponent;
}());
export { TabComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJzL3RhYi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFdBQVcsRUFDWCxZQUFZLEVBQ1osVUFBVSxFQUNWLFNBQVMsRUFDVCxNQUFNLEVBQ04sU0FBUyxFQUNULHVCQUF1QixFQUN2QixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFakU7O0dBRUc7QUFTSDtJQVNFLHNCQUFvQixHQUFzQixFQUFVLFFBQW1CLEVBQVUsS0FBaUI7UUFBOUUsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQVJ6RixVQUFLLEdBQVcsRUFBRSxDQUFDO1FBQ25CLFVBQUssR0FBOEIsRUFBRSxDQUFDO1FBQ3RDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixhQUFRLEdBQUcsS0FBSyxDQUFDO0lBSzJFLENBQUM7SUFFdEcsK0JBQVEsR0FBUjtRQUNFLDBCQUEwQjtRQUMxQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDbEU7UUFFRCxJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUM5RixDQUFDO0lBRUQsb0NBQWEsR0FBYjtRQUNFLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7Z0JBZHdCLGlCQUFpQjtnQkFBb0IsU0FBUztnQkFBaUIsVUFBVTs7SUFSekY7UUFBUixLQUFLLEVBQUU7OytDQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7K0NBQXVDO0lBQ3RDO1FBQVIsS0FBSyxFQUFFOztnREFBZ0I7SUFDZjtRQUFSLEtBQUssRUFBRTs7a0RBQWtCO0lBQ3dCO1FBQWpELFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs7NkRBQXFCO0lBQ2xDO1FBQW5DLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQztrQ0FBVyxvQkFBb0I7a0RBQUM7SUFOeEQsWUFBWTtRQVJ4QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsU0FBUztZQUNuQix1YkFBbUM7WUFDbkMsSUFBSSxFQUFFO2dCQUNKLEtBQUssRUFBRSxTQUFTO2FBQ2pCO1lBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQzt5Q0FVeUIsaUJBQWlCLEVBQW9CLFNBQVMsRUFBaUIsVUFBVTtPQVR2RixZQUFZLENBd0J4QjtJQUFELG1CQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0F4QlksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIFRlbXBsYXRlUmVmLFxuICBDb250ZW50Q2hpbGQsXG4gIEVsZW1lbnRSZWYsXG4gIFJlbmRlcmVyMixcbiAgT25Jbml0LFxuICBWaWV3Q2hpbGQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElmVGFiQWN0aXZlRGlyZWN0aXZlIH0gZnJvbSAnLi9pZi10YWItYWN0aXZlLmRpcmVjdGl2ZSc7XG5cbi8qKlxuICogVE9ETzogUmVtb3ZlIGhpZGRlbiB3aGVuIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvaXNzdWVzLzE4MzEwIGlzIHJlc29sdmVkXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC10YWInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFiLmNvbXBvbmVudC5odG1sJyxcbiAgaG9zdDoge1xuICAgIGNsYXNzOiAnbmd4LXRhYidcbiAgfSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgVGFiQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiA9ICcnO1xuICBASW5wdXQoKSBhY3RpdmUgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQFZpZXdDaGlsZCgnbGFiZWxJc1N0cmluZ1RtcGwnLCB7IHN0YXRpYzogdHJ1ZSB9KSBsYWJlbFN0cmluZ1RlbXBsYXRlO1xuICBAQ29udGVudENoaWxkKElmVGFiQWN0aXZlRGlyZWN0aXZlKSB0ZW1wbGF0ZTogSWZUYWJBY3RpdmVEaXJlY3RpdmU7XG4gIGxhYmVsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHByaXZhdGUgZWxSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICBpZiAodGhpcy50aXRsZSkge1xuICAgICAgdGhpcy5sYWJlbCA9IHRoaXMudGl0bGU7XG4gICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUF0dHJpYnV0ZSh0aGlzLmVsUmVmLm5hdGl2ZUVsZW1lbnQsICd0aXRsZScpO1xuICAgIH1cblxuICAgIHRoaXMubGFiZWxUZW1wbGF0ZSA9IHR5cGVvZiB0aGlzLmxhYmVsID09PSAnc3RyaW5nJyA/IHRoaXMubGFiZWxTdHJpbmdUZW1wbGF0ZSA6IHRoaXMubGFiZWw7XG4gIH1cblxuICBkZXRlY3RDaGFuZ2VzKCkge1xuICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcbiAgfVxufVxuIl19