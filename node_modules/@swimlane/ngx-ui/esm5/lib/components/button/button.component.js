import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, HostListener, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { BehaviorSubject } from 'rxjs';
import { ButtonState } from './button-state.enum';
var ButtonComponent = /** @class */ (function () {
    function ButtonComponent() {
        this.inProgress$ = new BehaviorSubject(false);
        this.active$ = new BehaviorSubject(false);
        this.success$ = new BehaviorSubject(false);
        this.fail$ = new BehaviorSubject(false);
        this._state = ButtonState.Active;
        this._disabled = false;
    }
    Object.defineProperty(ButtonComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (v) {
            this._disabled = coerceBooleanProperty(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonComponent.prototype, "state", {
        get: function () {
            return this._state;
        },
        set: function (v) {
            this._state = v;
            this.inProgress$.next(v === ButtonState.InProgress);
            this.active$.next(v === ButtonState.Active);
            this.success$.next(v === ButtonState.Success);
            this.fail$.next(v === ButtonState.Fail);
        },
        enumerable: true,
        configurable: true
    });
    ButtonComponent.prototype.ngOnInit = function () {
        this.updateState();
    };
    ButtonComponent.prototype.ngOnChanges = function () {
        this.updateState();
        this.updatePromise();
    };
    ButtonComponent.prototype.updatePromise = function () {
        var _this = this;
        if (this.promise) {
            this.state = ButtonState.InProgress;
            this.updateState();
            return this.promise
                .then(function () {
                _this.state = ButtonState.Success;
                _this.updateState();
            })
                .catch(function () {
                _this.state = ButtonState.Fail;
                _this.updateState();
            });
        }
    };
    ButtonComponent.prototype.updateState = function () {
        var _this = this;
        if (!this.state) {
            this.state = ButtonState.Active;
        }
        if (this.state === ButtonState.Success ||
            this.state === ButtonState.Fail ||
            this.state === ButtonState.InProgress) {
            clearTimeout(this._timer);
            this._timer = setTimeout(function () {
                _this.state = ButtonState.Active;
                _this.updateState();
            }, 3000);
        }
    };
    ButtonComponent.prototype.onClick = function (event) {
        if (this.disabled) {
            event.stopPropagation();
            event.preventDefault();
            return false;
        }
        return true;
    };
    __decorate([
        Input(),
        __metadata("design:type", Promise)
    ], ButtonComponent.prototype, "promise", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], ButtonComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], ButtonComponent.prototype, "state", null);
    __decorate([
        HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], ButtonComponent.prototype, "onClick", null);
    ButtonComponent = __decorate([
        Component({
            selector: 'ngx-button',
            exportAs: 'ngxButton',
            template: "<button [disabled]=\"disabled\">\n  <span class=\"content\"><ng-content></ng-content></span>\n  <span class=\"state-icon\">\n    <span *ngIf=\"inProgress$ | async\" class=\"icon icon-loading\"></span>\n    <span *ngIf=\"success$ | async\" class=\"icon icon-check\"></span>\n    <span *ngIf=\"fail$ | async\" class=\"icon icon-x\"></span>\n  </span>\n</button>\n",
            host: {
                class: 'ngx-button',
                '[class.in-progress]': 'inProgress$.value',
                '[class.active]': 'active$.value',
                '[class.success]': 'success$.value',
                '[class.fail]': 'fail$.value',
                '[class.disabled-button]': 'disabled'
            },
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["button{box-sizing:border-box;color:inherit;cursor:pointer;display:inline-block;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font:inherit;background:0 0;border:none;text-shadow:1px 1px rgba(0,0,0,.07)}button:active,button:focus{outline:0}.btn{box-sizing:border-box;color:#fff;display:inline-block;padding:.35em .55em;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font:inherit;font-size:.9em;font-weight:700;outline:0;line-height:1em;background:#455066;border:1px solid transparent;border-radius:2px;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-transition:background-color .2s,box-shadow .2s;transition:background-color .2s,box-shadow .2s}.btn .icon,.btn .ngx-icon{font-weight:400;vertical-align:middle;line-height:1em;font-size:.9em}.btn .icon:before,.btn .ngx-icon:before{font-weight:inherit}.btn .icon.has-text,.btn .icon.has-text-right,.btn .ngx-icon.has-text,.btn .ngx-icon.has-text-right{margin-right:.2em}.btn .icon.has-text-left,.btn .ngx-icon.has-text-left{margin-left:.2em}.btn::-moz-focus-inner{border:0;padding:0}.btn:focus{outline:0;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12)}.btn:active:hover:focus:not(.disabled),.btn:active:hover:focus:not([disabled]){cursor:pointer;background:#313847}.btn:active:hover:focus:not(.disabled).btn-primary,.btn:active:hover:focus:not([disabled]).btn-primary{background-color:#1483ff}.btn:active:hover:focus:not(.disabled).btn-warning,.btn:active:hover:focus:not([disabled]).btn-warning{background-color:#ffa814}.btn:active:hover:focus:not(.disabled).btn-danger,.btn:active:hover:focus:not([disabled]).btn-danger{background-color:#ff4514}.btn:active:hover:focus:not(.disabled).btn-link,.btn:active:hover:focus:not([disabled]).btn-link{background-color:transparent}.btn:active:hover:focus:not(.disabled).btn-bordered,.btn:active:hover:focus:not([disabled]).btn-bordered{border-color:#94c6ff;color:#94c6ff}.btn:active,.btn:focus,.btn:hover{text-decoration:none}.btn.small{font-size:.6em}.btn.large{font-size:1.3em}.btn.btn-primary{background-color:#479eff}.btn.btn-primary.btn-primary-gradient{background:linear-gradient(125.43deg,#54cdfc 10.86%,#479eff 49.11%)}.btn.btn-warning{background-color:#ffbb47;color:#07080b}.btn.btn-danger{background-color:#ff6d47}.btn.btn-link{background-color:transparent;box-shadow:none}.btn.btn-bordered,.btn.btn-primary.btn-bordered{border:1px solid #479eff;color:#479eff;background-color:transparent;box-shadow:none}.btn.btn-bordered.disabled-button,.btn.btn-primary.btn-bordered.disabled-button{opacity:.5}.btn.btn-bordered.disabled-button .button,.btn.btn-primary.btn-bordered.disabled-button .button{opacity:1}.btn.btn-default.btn-bordered{border:1px solid #fff;color:#fff;background-color:transparent;box-shadow:none}.btn.btn-default.btn-bordered:hover{border-color:#1483ff!important;color:#1483ff!important}.btn.btn-default.btn-bordered.disabled-button{opacity:.5}.btn.btn-default.btn-bordered.disabled-button .button{opacity:1}.btn.btn-file{cursor:pointer;padding:0}.btn.btn-file label{display:block;cursor:pointer;padding:.35em .75em}.btn.btn-file[disabled] label{cursor:not-allowed}.btn.btn-file input[type=file]{pointer-events:none;position:absolute;left:-9999px}.ngx-button{-webkit-transition:background-color .25s ease-out!important;transition:background-color .25s ease-out!important}.ngx-button button{padding:0;width:100%}.ngx-button.disabled-button{pointer-events:none}.ngx-button.success{background-color:#1ddeb6!important}.ngx-button.fail{background-color:#ff4514!important}.ngx-button:focus{outline:0;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12)}.ngx-button.fail,.ngx-button.in-progress,.ngx-button.success{pointer-events:auto;cursor:wait!important;color:#fff;position:relative;opacity:1!important}.ngx-button.fail button,.ngx-button.in-progress button,.ngx-button.success button{opacity:1}.ngx-button.fail *,.ngx-button.fail:active,.ngx-button.in-progress *,.ngx-button.in-progress:active,.ngx-button.success *,.ngx-button.success:active{pointer-events:none}.ngx-button.fail .content,.ngx-button.in-progress .content,.ngx-button.success .content{opacity:0;-webkit-transition:opacity .25s ease-out;transition:opacity .25s ease-out}.ngx-button.fail.active .content,.ngx-button.in-progress.active .content,.ngx-button.success.active .content{opacity:1}.ngx-button.fail .state-icon,.ngx-button.in-progress .state-icon,.ngx-button.success .state-icon{position:absolute;display:inline-block;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ngx-button.fail .state-icon .icon,.ngx-button.in-progress .state-icon .icon,.ngx-button.success .state-icon .icon{height:1em;width:1em;font-weight:700;color:#fff;overflow:hidden;font-size:1em}"]
        })
    ], ButtonComponent);
    return ButtonComponent;
}());
export { ButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsaUJBQWlCLEVBR2pCLFlBQVksRUFDWix1QkFBdUIsRUFDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFrQmxEO0lBQUE7UUF3QlcsZ0JBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxZQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckMsYUFBUSxHQUFHLElBQUksZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLFVBQUssR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVwQyxXQUFNLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUM1QixjQUFTLEdBQUcsS0FBSyxDQUFDO0lBeUQ1QixDQUFDO0lBbkZDLHNCQUFJLHFDQUFRO2FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzthQUNELFVBQWEsQ0FBVTtZQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVDLENBQUM7OztPQUhBO0lBTUQsc0JBQUksa0NBQUs7YUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDO2FBQ0QsVUFBVSxDQUFjO1lBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcs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QUFFLGVBQWU7Z0JBQ2pDLGlCQUFpQixFQUFFLGdCQUFnQjtnQkFDbkMsY0FBYyxFQUFFLGFBQWE7Z0JBQzdCLHlCQUF5QixFQUFFLFVBQVU7YUFDdEM7WUFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtZQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDaEQsQ0FBQztPQUNXLGVBQWUsQ0F1RjNCO0lBQUQsc0JBQUM7Q0FBQSxBQXZGRCxJQXVGQztTQXZGWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIE9uSW5pdCxcbiAgT25DaGFuZ2VzLFxuICBIb3N0TGlzdGVuZXIsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBCdXR0b25TdGF0ZSB9IGZyb20gJy4vYnV0dG9uLXN0YXRlLmVudW0nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtYnV0dG9uJyxcbiAgZXhwb3J0QXM6ICduZ3hCdXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vYnV0dG9uLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25neC1idXR0b24nLFxuICAgICdbY2xhc3MuaW4tcHJvZ3Jlc3NdJzogJ2luUHJvZ3Jlc3MkLnZhbHVlJyxcbiAgICAnW2NsYXNzLmFjdGl2ZV0nOiAnYWN0aXZlJC52YWx1ZScsXG4gICAgJ1tjbGFzcy5zdWNjZXNzXSc6ICdzdWNjZXNzJC52YWx1ZScsXG4gICAgJ1tjbGFzcy5mYWlsXSc6ICdmYWlsJC52YWx1ZScsXG4gICAgJ1tjbGFzcy5kaXNhYmxlZC1idXR0b25dJzogJ2Rpc2FibGVkJ1xuICB9LFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBCdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHByb21pc2U/OiBQcm9taXNlPGFueT47XG5cbiAgQElucHV0KClcbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuICBzZXQgZGlzYWJsZWQodjogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHYpO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IHN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLl9zdGF0ZTtcbiAgfVxuICBzZXQgc3RhdGUodjogQnV0dG9uU3RhdGUpIHtcbiAgICB0aGlzLl9zdGF0ZSA9IHY7XG5cbiAgICB0aGlzLmluUHJvZ3Jlc3MkLm5leHQodiA9PT0gQnV0dG9uU3RhdGUuSW5Qcm9ncmVzcyk7XG4gICAgdGhpcy5hY3RpdmUkLm5leHQodiA9PT0gQnV0dG9uU3RhdGUuQWN0aXZlKTtcbiAgICB0aGlzLnN1Y2Nlc3MkLm5leHQodiA9PT0gQnV0dG9uU3RhdGUuU3VjY2Vzcyk7XG4gICAgdGhpcy5mYWlsJC5uZXh0KHYgPT09IEJ1dHRvblN0YXRlLkZhaWwpO1xuICB9XG5cbiAgcmVhZG9ubHkgaW5Qcm9ncmVzcyQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcbiAgcmVhZG9ubHkgYWN0aXZlJCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xuICByZWFkb25seSBzdWNjZXNzJCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xuICByZWFkb25seSBmYWlsJCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xuXG4gIHByaXZhdGUgX3N0YXRlID0gQnV0dG9uU3RhdGUuQWN0aXZlO1xuICBwcml2YXRlIF9kaXNhYmxlZCA9IGZhbHNlO1xuICBwcml2YXRlIF90aW1lcjogYW55O1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMudXBkYXRlU3RhdGUoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMudXBkYXRlU3RhdGUoKTtcbiAgICB0aGlzLnVwZGF0ZVByb21pc2UoKTtcbiAgfVxuXG4gIHVwZGF0ZVByb21pc2UoKSB7XG4gICAgaWYgKHRoaXMucHJvbWlzZSkge1xuICAgICAgdGhpcy5zdGF0ZSA9IEJ1dHRvblN0YXRlLkluUHJvZ3Jlc3M7XG4gICAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gICAgICByZXR1cm4gdGhpcy5wcm9taXNlXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnN0YXRlID0gQnV0dG9uU3RhdGUuU3VjY2VzcztcbiAgICAgICAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZSA9IEJ1dHRvblN0YXRlLkZhaWw7XG4gICAgICAgICAgdGhpcy51cGRhdGVTdGF0ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVTdGF0ZSgpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSBCdXR0b25TdGF0ZS5BY3RpdmU7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgdGhpcy5zdGF0ZSA9PT0gQnV0dG9uU3RhdGUuU3VjY2VzcyB8fFxuICAgICAgdGhpcy5zdGF0ZSA9PT0gQnV0dG9uU3RhdGUuRmFpbCB8fFxuICAgICAgdGhpcy5zdGF0ZSA9PT0gQnV0dG9uU3RhdGUuSW5Qcm9ncmVzc1xuICAgICkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTtcbiAgICAgIHRoaXMuX3RpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBCdXR0b25TdGF0ZS5BY3RpdmU7XG4gICAgICAgIHRoaXMudXBkYXRlU3RhdGUoKTtcbiAgICAgIH0sIDMwMDApO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgb25DbGljayhldmVudDogRXZlbnQpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn1cbiJdfQ==