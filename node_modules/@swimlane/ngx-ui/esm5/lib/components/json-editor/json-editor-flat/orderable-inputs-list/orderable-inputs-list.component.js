import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import { debounceable } from '../../../../utils';
var OrderableInputsListComponent = /** @class */ (function () {
    function OrderableInputsListComponent() {
        this.onUpdate = new EventEmitter();
    }
    OrderableInputsListComponent.prototype.ngOnInit = function () {
        this.data = this.data || [];
    };
    OrderableInputsListComponent.prototype.addExample = function () {
        this.data.push('');
    };
    OrderableInputsListComponent.prototype.removeItem = function (index) {
        this.data.splice(index, 1);
        this.update();
    };
    OrderableInputsListComponent.prototype.drop = function (event) {
        moveItemInArray(this.data, event.previousIndex, event.currentIndex);
        this.update();
    };
    OrderableInputsListComponent.prototype.update = function () {
        this.onUpdate.emit(this.data);
    };
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], OrderableInputsListComponent.prototype, "data", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], OrderableInputsListComponent.prototype, "onUpdate", void 0);
    __decorate([
        debounceable(500),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], OrderableInputsListComponent.prototype, "update", null);
    OrderableInputsListComponent = __decorate([
        Component({
            selector: 'ngx-orderable-inputs-list',
            template: "<div class=\"orderable-inputs-list\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\n  <div class=\"input-item\" *ngFor=\"let item of data; let index = index\" cdkDrag cdkDragLockAxis=\"y\">\n    <div class=\"drag-drop-handle\" cdkDragHandle>\n      <i class=\"ngx-icon ngx-handle\"></i>\n    </div>\n    <ngx-input type=\"text\" (change)=\"data[index] = $event\" [ngModel]=\"item\" (keyup)=\"update()\"> </ngx-input>\n    <button type=\"button\" class=\"remove-item\" (click)=\"removeItem(index)\">\n      <i class=\"ngx-icon ngx-x\"></i>\n    </button>\n  </div>\n  <div class=\"add-examples\" (click)=\"addExample()\">\n    Add Example\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".add-examples,.input-item{height:45px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.input-item{background:#3b4457;box-shadow:0 2px 7px rgba(0,0,0,.2);border-radius:2px;margin-bottom:13px}.input-item .drag-drop-handle,.input-item .remove-item{color:#818fa9}.input-item .drag-drop-handle{margin:0 9px;height:17px;font-size:14.5px;cursor:-webkit-grab;cursor:grab}.input-item .ngx-input{-webkit-box-flex:1;flex:1;margin:0}.input-item .remove-item{font-size:8px;margin:0 5px;height:8px}.add-examples{cursor:pointer;height:45px;border:1px dashed #479eff;color:#479eff;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating,.orderable-inputs-list.cdk-drop-list-dragging .input-item:not(.cdk-drag-placeholder){-webkit-transition:-webkit-transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1),-webkit-transform 250ms cubic-bezier(0,0,.2,1)}"]
        })
    ], OrderableInputsListComponent);
    return OrderableInputsListComponent;
}());
export { OrderableInputsListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJhYmxlLWlucHV0cy1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9qc29uLWVkaXRvci9qc29uLWVkaXRvci1mbGF0L29yZGVyYWJsZS1pbnB1dHMtbGlzdC9vcmRlcmFibGUtaW5wdXRzLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsRUFFakIsTUFBTSxFQUNOLFlBQVksRUFDWix1QkFBdUIsRUFDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGVBQWUsRUFBZSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVNqRDtJQUFBO1FBRVksYUFBUSxHQUFHLElBQUksWUFBWSxFQUFZLENBQUM7SUF3QnBELENBQUM7SUF0QkMsK0NBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELGlEQUFVLEdBQVY7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRUQsaURBQVUsR0FBVixVQUFXLEtBQWE7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQsMkNBQUksR0FBSixVQUFLLEtBQTRCO1FBQy9CLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBR0QsNkNBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBeEJRO1FBQVIsS0FBSyxFQUFFOzs4REFBZ0I7SUFDZDtRQUFULE1BQU0sRUFBRTs7a0VBQXlDO0lBcUJsRDtRQURDLFlBQVksQ0FBQyxHQUFHLENBQUM7Ozs7OERBR2pCO0lBekJVLDRCQUE0QjtRQVB4QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLGtxQkFBcUQ7WUFFckQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7WUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2hELENBQUM7T0FDVyw0QkFBNEIsQ0EwQnhDO0lBQUQsbUNBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQTFCWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3lcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBtb3ZlSXRlbUluQXJyYXksIENka0RyYWdEcm9wIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RyYWctZHJvcCc7XG5pbXBvcnQgeyBkZWJvdW5jZWFibGUgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC1vcmRlcmFibGUtaW5wdXRzLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vb3JkZXJhYmxlLWlucHV0cy1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vb3JkZXJhYmxlLWlucHV0cy1saXN0LmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE9yZGVyYWJsZUlucHV0c0xpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBkYXRhOiBzdHJpbmdbXTtcbiAgQE91dHB1dCgpIG9uVXBkYXRlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmdbXT4oKTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmRhdGEgPSB0aGlzLmRhdGEgfHwgW107XG4gIH1cblxuICBhZGRFeGFtcGxlKCk6IHZvaWQge1xuICAgIHRoaXMuZGF0YS5wdXNoKCcnKTtcbiAgfVxuXG4gIHJlbW92ZUl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuZGF0YS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBkcm9wKGV2ZW50OiBDZGtEcmFnRHJvcDxzdHJpbmdbXT4pOiB2b2lkIHtcbiAgICBtb3ZlSXRlbUluQXJyYXkodGhpcy5kYXRhLCBldmVudC5wcmV2aW91c0luZGV4LCBldmVudC5jdXJyZW50SW5kZXgpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBAZGVib3VuY2VhYmxlKDUwMClcbiAgdXBkYXRlKCk6IHZvaWQge1xuICAgIHRoaXMub25VcGRhdGUuZW1pdCh0aGlzLmRhdGEpO1xuICB9XG59XG4iXX0=