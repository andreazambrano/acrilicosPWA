import { __decorate, __extends, __metadata, __read, __spread } from "tslib";
import { Component, ViewEncapsulation, Input, ViewChild, TemplateRef, ChangeDetectionStrategy } from '@angular/core';
import { ArrayNode } from '../../../../node-types/array-node.component';
import { jsonSchemaDataTypes } from '../../../../json-editor.helper';
import { DialogService } from '../../../../../dialog/dialog.service';
var ArrayNodeFlatComponent = /** @class */ (function (_super) {
    __extends(ArrayNodeFlatComponent, _super);
    function ArrayNodeFlatComponent(dialogService) {
        var _this = _super.call(this) || this;
        _this.dialogService = dialogService;
        _this.indentationArray = [];
        return _this;
    }
    ArrayNodeFlatComponent.prototype.ngOnInit = function () {
        if (this.schemaBuilderMode) {
            this.dataTypes = __spread(jsonSchemaDataTypes, this.formats);
        }
        if (this.schemaBuilderMode && !this.model.length && this.schemaRef.items && this.schemaRef.items.type) {
            this.model.push(this.schemaRef.items);
        }
        if (this.level > 0) {
            this.indentationArray = Array(this.level).fill(this.level);
        }
    };
    ArrayNodeFlatComponent.prototype.onPropertyConfig = function (item, index) {
        this.dialogService.create({
            template: this.propertyConfigTmpl,
            context: {
                property: item,
                index: index,
                schema: this.schema,
                formats: this.formats
            },
            class: 'property-config-dialog'
        });
    };
    ArrayNodeFlatComponent.prototype.updateSchema = function (options) {
        this.schema.items = options.newProperty;
        this.schemaRef.items = options.newProperty;
        this.schemaChange.emit();
    };
    ArrayNodeFlatComponent.prototype.addArrayItem = function (dataType) {
        if (this.schemaBuilderMode && dataType) {
            this.addDefaultItemForSchemaBuilder(dataType);
        }
        else {
            _super.prototype.addArrayItem.call(this, dataType);
        }
    };
    ArrayNodeFlatComponent.prototype.deleteArrayItem = function (index) {
        if (this.schemaBuilderMode) {
            this.removeDefaultItemForSchemaBuilder();
        }
        else {
            _super.prototype.deleteArrayItem.call(this, index);
        }
    };
    ArrayNodeFlatComponent.prototype.addDefaultItemForSchemaBuilder = function (dataType) {
        this.schema.items = dataType.schema;
        this.schemaRef.items = dataType.schema;
        this.model.push(this.schemaRef.items);
        this.schemaChange.emit();
    };
    ArrayNodeFlatComponent.prototype.removeDefaultItemForSchemaBuilder = function () {
        delete this.schema.items;
        delete this.schemaRef.items;
        this.model = [];
        this.schemaChange.emit();
    };
    ArrayNodeFlatComponent.ctorParameters = function () { return [
        { type: DialogService }
    ]; };
    __decorate([
        ViewChild('propertyConfigTmpl', { static: false }),
        __metadata("design:type", TemplateRef)
    ], ArrayNodeFlatComponent.prototype, "propertyConfigTmpl", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], ArrayNodeFlatComponent.prototype, "level", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ArrayNodeFlatComponent.prototype, "schemaBuilderMode", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], ArrayNodeFlatComponent.prototype, "formats", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ArrayNodeFlatComponent.prototype, "compressed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ArrayNodeFlatComponent.prototype, "hideRoot", void 0);
    ArrayNodeFlatComponent = __decorate([
        Component({
            selector: 'ngx-json-array-node-flat',
            template: "<div class=\"array-node-flat\" [hidden]=\"!expanded\">\n  <div\n    class=\"array-node-content\"\n    [class.no-margin]=\"schemaBuilderMode\"\n    *ngFor=\"let value of model; let i = index; trackBy: arrayTrackBy\"\n  >\n    <ngx-json-editor-node-flat\n      [model]=\"value\"\n      (modelChange)=\"updateArrayItem(i, $event)\"\n      [schema]=\"schemaBuilderMode ? schemaRef.items : schemas[i]\"\n      [path]=\"path + '[' + i + ']'\"\n      [errors]=\"errors\"\n      [typeCheckOverrides]=\"typeCheckOverrides\"\n      [level]=\"level\"\n      [hideRoot]=\"hideRoot\"\n      [compressed]=\"compressed\"\n      [schemaRef]=\"schemaRef?.items || null\"\n      [schemaBuilderMode]=\"schemaBuilderMode\"\n      [arrayItem]=\"schemaBuilderMode\"\n      [arrayName]=\"(schema.title ? schema.title : schema.propertyName) + '[' + (schemaBuilderMode ? '' : i) + ']'\"\n      [indentationArray]=\"indentationArray\"\n    >\n      <div class=\"node-options\" node-options>\n        <button\n          *ngIf=\"schemaBuilderMode\"\n          type=\"button\"\n          class=\"node-options-btn\"\n          (click)=\"onPropertyConfig(schemaRef.items, i)\"\n        >\n          <i class=\"ngx-icon ngx-cog\"></i>\n        </button>\n        <ngx-dropdown [showCaret]=\"true\">\n          <ngx-dropdown-toggle>\n            <button type=\"button\" class=\"node-options-btn\">\n              <i class=\"ngx-icon ngx-dots-vert-round\"></i>\n            </button>\n          </ngx-dropdown-toggle>\n          <ngx-dropdown-menu class=\"ngx-dropdown-dark-outline align-right\">\n            <ul class=\"vertical-list\">\n              <li><button type=\"button\" (click)=\"deleteArrayItem(i)\">Delete</button></li>\n\n              <ng-container *ngIf=\"schemas[i]?.$meta?.type\">\n                <li *ngFor=\"let type of schemas[i]?.$meta?.type\">\n                  <button type=\"button\" (click)=\"changeItemType(i, type)\" [disabled]=\"schemas[i].currentType === type\">\n                    Change type to {{ dataTypeMap[type].name }}\n                  </button>\n                </li>\n              </ng-container>\n            </ul>\n          </ngx-dropdown-menu>\n        </ngx-dropdown>\n      </div>\n    </ngx-json-editor-node-flat>\n  </div>\n\n  <div\n    *ngIf=\"!schemaBuilderMode || !model.length\"\n    class=\"add-button\"\n    [class.compressed]=\"compressed\"\n    [class.background]=\"hideRoot ? level > -1 : level\"\n  >\n    <span class=\"separator\" *ngFor=\"let separator of indentationArray\"></span>\n    <div class=\"indented-content\" [style.marginLeft]=\"hideRoot && level === 0 ? '20px' : '0'\">\n      <ngx-dropdown [showCaret]=\"true\">\n        <ngx-dropdown-toggle>\n          <button type=\"button\">\n            <i class=\"ngx-icon ngx-tree-expand\"></i>\n            <span>Add an item</span>\n          </button>\n        </ngx-dropdown-toggle>\n        <ngx-dropdown-menu class=\"ngx-dropdown-dark-outline\">\n          <ul class=\"vertical-list\">\n            <ng-template [ngIf]=\"!schema || !schema.items || !schema.items.type\">\n              <li *ngFor=\"let dataType of dataTypes\" (click)=\"addArrayItem(dataType)\">\n                <button type=\"button\">{{ dataType.name }}</button>\n              </li>\n            </ng-template>\n            <ng-container *ngIf=\"schema?.items?.type\">\n              <li *ngIf=\"!_array.isArray(schema.items.type)\">\n                <button type=\"button\" (click)=\"addArrayItem()\">Add</button>\n              </li>\n              <ng-container *ngIf=\"_array.isArray(schema.items.type)\">\n                <li *ngFor=\"let type of schema.items.type\">\n                  <button type=\"button\" (click)=\"addArrayItem(dataTypeMap[type])\">\n                    Add {{ dataTypeMap[type].name }}\n                  </button>\n                </li>\n              </ng-container>\n            </ng-container>\n          </ul>\n        </ngx-dropdown-menu>\n      </ngx-dropdown>\n    </div>\n  </div>\n</div>\n\n<!-- Property Config Dialog -->\n<ng-template #propertyConfigTmpl let-context=\"context\">\n  <ngx-property-config\n    [property]=\"context.property\"\n    [index]=\"context.index\"\n    [schema]=\"context.schema\"\n    [formats]=\"context.formats\"\n    [arrayItem]=\"true\"\n    (updateSchema)=\"updateSchema($event)\"\n  >\n  </ngx-property-config>\n</ng-template>\n",
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".array-node-flat .add-button .indented-content .ngx-dropdown-menu{white-space:nowrap;margin-top:10px}.array-node-flat .add-button .indented-content .ngx-dropdown-menu .dropdown-column{vertical-align:top;display:inline-block;min-width:150px}.array-node-flat .add-button .indented-content .ngx-dropdown-menu .dropdown-column:nth-child(2){border-left:1px solid #505c75}.separator{background-color:#3b4457;opacity:.5;border-radius:2px;width:1px;height:calc(100% - 4px);margin-right:20px}.separator:first-child{margin-left:20px}.array-node-flat .array-node-content{display:-webkit-box;display:flex;margin-bottom:5px;position:relative}.array-node-flat .array-node-content ngx-json-editor-node-flat{-webkit-box-flex:1;flex:1}.array-node-flat .add-button{height:100px;position:relative;display:-webkit-box;display:flex}.array-node-flat .add-button ngx-dropdown{padding-bottom:0}.array-node-flat .compressed.add-button{max-height:80px}.array-node-flat .background.add-button{background-color:rgba(49,56,71,.4);padding:7px 7px 7px 0;height:120px}.array-node-flat .add-button .indented-content{border:2px dotted rgba(59,68,87,.5);width:100%;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;color:#909cb4}.array-node-flat .add-button .indented-content button{display:-webkit-box;display:flex}.array-node-flat .add-button .indented-content button i{font-size:18px}.array-node-flat .add-button .indented-content button span{font-size:14px;margin-left:10px}.array-node-flat{margin-top:5px}.array-node-flat .array-node-content.no-margin{margin-bottom:0}"]
        }),
        __metadata("design:paramtypes", [DialogService])
    ], ArrayNodeFlatComponent);
    return ArrayNodeFlatComponent;
}(ArrayNode));
export { ArrayNodeFlatComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXktbm9kZS1mbGF0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9qc29uLWVkaXRvci9qc29uLWVkaXRvci1mbGF0L2pzb24tZWRpdG9yLW5vZGUtZmxhdC9ub2RlLXR5cGVzL2FycmF5LW5vZGUtZmxhdC9hcnJheS1ub2RlLWZsYXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULGlCQUFpQixFQUNqQixLQUFLLEVBQ0wsU0FBUyxFQUNULFdBQVcsRUFFWCx1QkFBdUIsRUFDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3hFLE9BQU8sRUFBd0MsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFVckU7SUFBNEMsMENBQVM7SUFlbkQsZ0NBQW9CLGFBQTRCO1FBQWhELFlBQ0UsaUJBQU8sU0FDUjtRQUZtQixtQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUZoRCxzQkFBZ0IsR0FBYSxFQUFFLENBQUM7O0lBSWhDLENBQUM7SUFFRCx5Q0FBUSxHQUFSO1FBQ0UsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsSUFBSSxDQUFDLFNBQVMsWUFBTyxtQkFBbUIsRUFBSyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDNUQ7UUFFRCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtZQUNyRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENB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dUIsQ0FBQyxNQUFNOztTQUNoRCxDQUFDO3lDQWdCbUMsYUFBYTtPQWZyQyxzQkFBc0IsQ0FxRmxDO0lBQUQsNkJBQUM7Q0FBQSxBQXJGRCxDQUE0QyxTQUFTLEdBcUZwRDtTQXJGWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBJbnB1dCxcbiAgVmlld0NoaWxkLFxuICBUZW1wbGF0ZVJlZixcbiAgT25Jbml0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFycmF5Tm9kZSB9IGZyb20gJy4uLy4uLy4uLy4uL25vZGUtdHlwZXMvYXJyYXktbm9kZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSlNPTkVkaXRvclNjaGVtYSwgSnNvblNjaGVtYURhdGFUeXBlLCBqc29uU2NoZW1hRGF0YVR5cGVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vanNvbi1lZGl0b3IuaGVscGVyJztcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9kaWFsb2cvZGlhbG9nLnNlcnZpY2UnO1xuaW1wb3J0IHsgUHJvcGVydHlDb25maWdPcHRpb25zLCBQcm9wZXJ0eUNvbmZpZ0NvbXBvbmVudCB9IGZyb20gJy4uL3Byb3BlcnR5LWNvbmZpZy9wcm9wZXJ0eS1jb25maWcuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWpzb24tYXJyYXktbm9kZS1mbGF0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FycmF5LW5vZGUtZmxhdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FycmF5LW5vZGUtZmxhdC5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBBcnJheU5vZGVGbGF0Q29tcG9uZW50IGV4dGVuZHMgQXJyYXlOb2RlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgncHJvcGVydHlDb25maWdUbXBsJywgeyBzdGF0aWM6IGZhbHNlIH0pIHByb3BlcnR5Q29uZmlnVG1wbDogVGVtcGxhdGVSZWY8UHJvcGVydHlDb25maWdDb21wb25lbnQ+O1xuXG4gIEBJbnB1dCgpIGxldmVsOiBudW1iZXI7XG5cbiAgQElucHV0KCkgc2NoZW1hQnVpbGRlck1vZGU6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgZm9ybWF0czogSnNvblNjaGVtYURhdGFUeXBlW107XG5cbiAgQElucHV0KCkgY29tcHJlc3NlZDogYm9vbGVhbjtcblxuICBASW5wdXQoKSBoaWRlUm9vdDtcblxuICBpbmRlbnRhdGlvbkFycmF5OiBudW1iZXJbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGlhbG9nU2VydmljZTogRGlhbG9nU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5zY2hlbWFCdWlsZGVyTW9kZSkge1xuICAgICAgdGhpcy5kYXRhVHlwZXMgPSBbLi4uanNvblNjaGVtYURhdGFUeXBlcywgLi4udGhpcy5mb3JtYXRzXTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zY2hlbWFCdWlsZGVyTW9kZSAmJiAhdGhpcy5tb2RlbC5sZW5ndGggJiYgdGhpcy5zY2hlbWFSZWYuaXRlbXMgJiYgdGhpcy5zY2hlbWFSZWYuaXRlbXMudHlwZSkge1xuICAgICAgdGhpcy5tb2RlbC5wdXNoKHRoaXMuc2NoZW1hUmVmLml0ZW1zKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5sZXZlbCA+IDApIHtcbiAgICAgIHRoaXMuaW5kZW50YXRpb25BcnJheSA9IEFycmF5KHRoaXMubGV2ZWwpLmZpbGwodGhpcy5sZXZlbCk7XG4gICAgfVxuICB9XG5cbiAgb25Qcm9wZXJ0eUNvbmZpZyhpdGVtOiBKU09ORWRpdG9yU2NoZW1hLCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5kaWFsb2dTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgICB0ZW1wbGF0ZTogdGhpcy5wcm9wZXJ0eUNvbmZpZ1RtcGwsXG4gICAgICBjb250ZXh0OiB7XG4gICAgICAgIHByb3BlcnR5OiBpdGVtLFxuICAgICAgICBpbmRleCxcbiAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcbiAgICAgICAgZm9ybWF0czogdGhpcy5mb3JtYXRzXG4gICAgICB9LFxuICAgICAgY2xhc3M6ICdwcm9wZXJ0eS1jb25maWctZGlhbG9nJ1xuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlU2NoZW1hKG9wdGlvbnM6IFByb3BlcnR5Q29uZmlnT3B0aW9ucyk6IHZvaWQge1xuICAgIHRoaXMuc2NoZW1hLml0ZW1zID0gb3B0aW9ucy5uZXdQcm9wZXJ0eTtcbiAgICB0aGlzLnNjaGVtYVJlZi5pdGVtcyA9IG9wdGlvbnMubmV3UHJvcGVydHk7XG4gICAgdGhpcy5zY2hlbWFDaGFuZ2UuZW1pdCgpO1xuICB9XG5cbiAgYWRkQXJyYXlJdGVtKGRhdGFUeXBlPzogSnNvblNjaGVtYURhdGFUeXBlKSB7XG4gICAgaWYgKHRoaXMuc2NoZW1hQnVpbGRlck1vZGUgJiYgZGF0YVR5cGUpIHtcbiAgICAgIHRoaXMuYWRkRGVmYXVsdEl0ZW1Gb3JTY2hlbWFCdWlsZGVyKGRhdGFUeXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VwZXIuYWRkQXJyYXlJdGVtKGRhdGFUeXBlKTtcbiAgICB9XG4gIH1cblxuICBkZWxldGVBcnJheUl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgIGlmICh0aGlzLnNjaGVtYUJ1aWxkZXJNb2RlKSB7XG4gICAgICB0aGlzLnJlbW92ZURlZmF1bHRJdGVtRm9yU2NoZW1hQnVpbGRlcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdXBlci5kZWxldGVBcnJheUl0ZW0oaW5kZXgpO1xuICAgIH1cbiAgfVxuXG4gIGFkZERlZmF1bHRJdGVtRm9yU2NoZW1hQnVpbGRlcihkYXRhVHlwZTogSnNvblNjaGVtYURhdGFUeXBlKTogdm9pZCB7XG4gICAgdGhpcy5zY2hlbWEuaXRlbXMgPSBkYXRhVHlwZS5zY2hlbWEgYXMgb2JqZWN0O1xuICAgIHRoaXMuc2NoZW1hUmVmLml0ZW1zID0gZGF0YVR5cGUuc2NoZW1hIGFzIG9iamVjdDtcblxuICAgIHRoaXMubW9kZWwucHVzaCh0aGlzLnNjaGVtYVJlZi5pdGVtcyk7XG5cbiAgICB0aGlzLnNjaGVtYUNoYW5nZS5lbWl0KCk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZURlZmF1bHRJdGVtRm9yU2NoZW1hQnVpbGRlcigpOiB2b2lkIHtcbiAgICBkZWxldGUgdGhpcy5zY2hlbWEuaXRlbXM7XG4gICAgZGVsZXRlIHRoaXMuc2NoZW1hUmVmLml0ZW1zO1xuXG4gICAgdGhpcy5tb2RlbCA9IFtdO1xuXG4gICAgdGhpcy5zY2hlbWFDaGFuZ2UuZW1pdCgpO1xuICB9XG59XG4iXX0=