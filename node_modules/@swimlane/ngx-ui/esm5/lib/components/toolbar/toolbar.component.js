import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, Renderer2, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { ToolbarTitleDirective } from './toolbar-title.directive';
import { ToolbarContentDirective } from './toolbar-content.directive';
var ToolbarComponent = /** @class */ (function () {
    function ToolbarComponent(renderer, elRef) {
        this.renderer = renderer;
        this.elRef = elRef;
        this.menu = [];
        this.menuClick = new EventEmitter();
    }
    Object.defineProperty(ToolbarComponent.prototype, "toolbarItems", {
        get: function () {
            return this.menu.filter(function (m) {
                return !m.dropdown;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolbarComponent.prototype, "dropdownItems", {
        get: function () {
            return this.menu.filter(function (m) {
                return m.dropdown;
            });
        },
        enumerable: true,
        configurable: true
    });
    ToolbarComponent.prototype.onMenuClicked = function (item, $event) {
        if (item.click) {
            item.click($event);
        }
    };
    ToolbarComponent.prototype.ngOnInit = function () {
        // backwards compatibility
        if (this.title) {
            this.mainTitle = this.title;
            this.renderer.removeAttribute(this.elRef.nativeElement, 'title');
        }
    };
    ToolbarComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ToolbarComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ToolbarComponent.prototype, "mainTitle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ToolbarComponent.prototype, "subtitle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], ToolbarComponent.prototype, "menu", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], ToolbarComponent.prototype, "menuClick", void 0);
    __decorate([
        ViewChild(ToolbarTitleDirective),
        __metadata("design:type", ToolbarTitleDirective)
    ], ToolbarComponent.prototype, "toolbarTitle", void 0);
    __decorate([
        ViewChild(ToolbarContentDirective),
        __metadata("design:type", ToolbarContentDirective)
    ], ToolbarComponent.prototype, "toolbarContent", void 0);
    ToolbarComponent = __decorate([
        Component({
            selector: 'ngx-toolbar',
            template: "<header class=\"flex-container\" fxLayout=\"row\" fxLayoutWrap=\"nowrap\" fxFill fxLayoutGap=\"5px\">\n  <div class=\"ngx-toolbar-title-col\" fxFlex>\n    <ng-content *ngIf=\"!mainTitle\" select=\"ngx-toolbar-title\"></ng-content>\n    <h2 class=\"ngx-toolbar-title\" *ngIf=\"mainTitle\">\n      {{ mainTitle }}\n      <small *ngIf=\"subtitle\">{{ subtitle }}</small>\n    </h2>\n  </div>\n  <div class=\"ngx-toolbar-content-col\" fxFlex>\n    <ng-content *ngIf=\"!menu.length\" select=\"ngx-toolbar-content\"></ng-content>\n    <ul class=\"horizontal-list ngx-toolbar-menu\" *ngIf=\"menu.length\">\n      <li *ngFor=\"let item of toolbarItems\">\n        <button type=\"button\" [disabled]=\"item.disabled\" (click)=\"onMenuClicked(item, $event)\">\n          {{ item.label }}\n        </button>\n      </li>\n      <li *ngIf=\"dropdownItems.length\">\n        <ngx-dropdown>\n          <ngx-dropdown-toggle>\n            <button type=\"button\">\n              ...\n            </button>\n          </ngx-dropdown-toggle>\n          <ngx-dropdown-menu class=\"align-right\">\n            <ul class=\"vertical-list\">\n              <li *ngFor=\"let item of dropdownItems\">\n                <button type=\"button\" (click)=\"onMenuClicked(item, $event)\">\n                  {{ item.label }}\n                </button>\n              </li>\n            </ul>\n          </ngx-dropdown-menu>\n        </ngx-dropdown>\n      </li>\n    </ul>\n  </div>\n</header>\n",
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            host: {
                class: 'ngx-toolbar'
            },
            styles: [".ngx-toolbar{display:block;height:50px;line-height:50px;color:#a0aabe;background:#1c2029;width:100%;font-size:.8rem;padding:0 20px!important}.ngx-toolbar a{color:#a0aabe}.ngx-toolbar .ngx-toolbar-title-col{overflow:hidden}.ngx-toolbar .ngx-toolbar-title{margin:0;font-weight:500;text-overflow:ellipsis;overflow:hidden;width:100%;white-space:nowrap}.ngx-toolbar .ngx-toolbar-title small{color:#5a6884;font-size:.9rem;line-height:50px;vertical-align:top}.ngx-toolbar .ngx-toolbar-menu button{color:#a0aabe}.ngx-toolbar .ngx-toolbar-content-col{text-align:right}.ngx-toolbar.page-toolbar{box-shadow:0 1px 5px 0 rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12)}"]
        }),
        __metadata("design:paramtypes", [Renderer2, ElementRef])
    ], ToolbarComponent);
    return ToolbarComponent;
}());
export { ToolbarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsdUJBQXVCLEVBQ3hCLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBYXRFO0lBdUJFLDBCQUFvQixRQUFtQixFQUFVLEtBQWlCO1FBQTlDLGFBQVEsR0FBUixRQUFRLENBQVc7UUFBVSxVQUFLLEdBQUwsS0FBSyxDQUFZO1FBbkJ6RCxTQUFJLEdBQXNCLEVBQUUsQ0FBQztRQUU1QixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWlCNEIsQ0FBQztJQVp0RSxzQkFBSSwwQ0FBWTthQUFoQjtZQUNFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDO2dCQUN2QixPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztZQUNyQixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7OztPQUFBO0lBRUQsc0JBQUksMkNBQWE7YUFBakI7WUFDRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQztnQkFDdkIsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDO1lBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQzs7O09BQUE7SUFJRCx3Q0FBYSxHQUFiLFVBQWMsSUFBcUIsRUFBRSxNQUFhO1FBQ2hELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRUQsbUNBQVEsR0FBUjtRQUNFLDBCQUEwQjtRQUMxQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDbEU7SUFDSCxDQUFDOztnQkFkNkIsU0FBUztnQkFBaUIsVUFBVTs7SUF0QnpEO1FBQVIsS0FBSyxFQUFFOzttREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzt1REFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7O3NEQUFrQjtJQUNqQjtRQUFSLEtBQUssRUFBRTs7a0RBQThCO0lBRTVCO1FBQVQsTUFBTSxFQUFFOzt1REFBZ0M7SUFFUDtRQUFqQyxTQUFTLENBQUMscUJBQXFCLENBQUM7a0NBQWUscUJBQXFCOzBEQUFDO0lBQ2xDO1FBQW5DLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQztrQ0FBaUIsdUJBQXVCOzREQUFDO0lBVGpFLGdCQUFnQjtRQVY1QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsYUFBYTtZQUN2QixvOENBQXVDO1lBQ3ZDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO1lBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBRS9DLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsYUFBYTthQUNyQjs7U0FDRixDQUFDO3lDQXdCOEIsU0FBUyxFQUFpQixVQUFVO09BdkJ2RCxnQkFBZ0IsQ0FzQzVCO0lBQUQsdUJBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQXRDWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgVmlld0NoaWxkLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgUmVuZGVyZXIyLFxuICBFbGVtZW50UmVmLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVG9vbGJhclRpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi90b29sYmFyLXRpdGxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUb29sYmFyQ29udGVudERpcmVjdGl2ZSB9IGZyb20gJy4vdG9vbGJhci1jb250ZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUb29sYmFyTWVudUl0ZW0gfSBmcm9tICcuL3Rvb2xiYXItbWVudS1pdGVtLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC10b29sYmFyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Rvb2xiYXIuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJy4vdG9vbGJhci5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICduZ3gtdG9vbGJhcidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBUb29sYmFyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgbWFpblRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHN1YnRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG1lbnU6IFRvb2xiYXJNZW51SXRlbVtdID0gW107XG5cbiAgQE91dHB1dCgpIG1lbnVDbGljayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAVmlld0NoaWxkKFRvb2xiYXJUaXRsZURpcmVjdGl2ZSkgdG9vbGJhclRpdGxlOiBUb29sYmFyVGl0bGVEaXJlY3RpdmU7XG4gIEBWaWV3Q2hpbGQoVG9vbGJhckNvbnRlbnREaXJlY3RpdmUpIHRvb2xiYXJDb250ZW50OiBUb29sYmFyQ29udGVudERpcmVjdGl2ZTtcblxuICBnZXQgdG9vbGJhckl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLm1lbnUuZmlsdGVyKG0gPT4ge1xuICAgICAgcmV0dXJuICFtLmRyb3Bkb3duO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IGRyb3Bkb3duSXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMubWVudS5maWx0ZXIobSA9PiB7XG4gICAgICByZXR1cm4gbS5kcm9wZG93bjtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbFJlZjogRWxlbWVudFJlZikge31cblxuICBvbk1lbnVDbGlja2VkKGl0ZW06IFRvb2xiYXJNZW51SXRlbSwgJGV2ZW50OiBFdmVudCkge1xuICAgIGlmIChpdGVtLmNsaWNrKSB7XG4gICAgICBpdGVtLmNsaWNrKCRldmVudCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICBpZiAodGhpcy50aXRsZSkge1xuICAgICAgdGhpcy5tYWluVGl0bGUgPSB0aGlzLnRpdGxlO1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVBdHRyaWJ1dGUodGhpcy5lbFJlZi5uYXRpdmVFbGVtZW50LCAndGl0bGUnKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==