import { animate, state, style, transition, trigger } from '@angular/animations';
import { StepperAnimationStates } from './stepper-animation-states.enum';
import { StepperBarAnimationStates } from './stepper-bar-animation-states.enum';
var BAR_SIZE = 40;
var BAR_THICKNESS = 2;
var STEP_SIZE = 28;
export var stepperAnimations = {
    horizontalStepTransition: trigger('stepHorizontalTransition', [
        state(StepperAnimationStates.Left, style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),
        state(StepperAnimationStates.Right, style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),
        state(StepperAnimationStates.Current, style({ transform: 'none', visibility: 'visible' })),
        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))
    ]),
    verticalStepTransition: trigger('stepVerticalTransition', [
        state(StepperAnimationStates.Up, style({ transform: 'translate3d(0, -100%, 0)', visibility: 'hidden' })),
        state(StepperAnimationStates.Down, style({ transform: 'translate3d(0, 100%, 0)', visibility: 'hidden' })),
        state(StepperAnimationStates.Current, style({ transform: 'none', visibility: 'visible' })),
        transition("* <=> " + StepperAnimationStates.Current, animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))
    ]),
    horizontalBarTransition: trigger('stepperBarHorizontalTransition', [
        state(StepperBarAnimationStates.Stay, style({
            transition: '500ms cubic-bezier(0.35, 0, 0.25, 1)',
            transform: 'translateX({{ width }}px)',
            height: BAR_THICKNESS + "px",
            width: BAR_SIZE + "px",
            margin: "0 0 0 -" + (BAR_SIZE - STEP_SIZE) / 2 + "px"
        }), { params: { width: 0 } }),
        state(StepperBarAnimationStates.Move, style({
            transition: '500ms cubic-bezier(0.35, 0, 0.25, 1)',
            transform: 'translateX({{ width }}px)',
            height: BAR_THICKNESS + "px",
            width: BAR_SIZE / 2 + "px",
            margin: "0 " + BAR_SIZE / 4 + "px 0 " + (BAR_SIZE / 4 - (BAR_SIZE - STEP_SIZE) / 2) + "px"
        }), { params: { width: 0 } })
    ]),
    verticalBarTransition: trigger('stepperBarVerticalTransition', [
        state(StepperBarAnimationStates.Stay, style({
            transition: '500ms cubic-bezier(0.35, 0, 0.25, 1)',
            transform: 'translateY({{ height }}px)',
            width: BAR_THICKNESS + "px",
            height: BAR_SIZE + "px",
            margin: "-" + (BAR_SIZE - STEP_SIZE) / 2 + "px 0 0 0"
        }), { params: { height: 0 } }),
        state(StepperBarAnimationStates.Move, style({
            transition: '500ms cubic-bezier(0.35, 0, 0.25, 1)',
            transform: 'translateY({{ height }}px)',
            width: BAR_THICKNESS + "px",
            height: BAR_SIZE / 2 + "px",
            margin: BAR_SIZE / 4 - (BAR_SIZE - STEP_SIZE) / 2 + "px 0 " + BAR_SIZE / 4 + "px"
        }), { params: { height: 0 } })
    ])
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5hbmltYXRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc3RlcHBlci9zdGVwcGVyLmFuaW1hdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRWhGLElBQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNwQixJQUFNLGFBQWEsR0FBRyxDQUFDLENBQUM7QUFDeEIsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBRXJCLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHO0lBQy9CLHdCQUF3QixFQUFFLE9BQU8sQ0FBQywwQkFBMEIsRUFBRTtRQUM1RCxLQUFLLENBQUMsc0JBQXNCLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSwwQkFBMEIsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMxRyxLQUFLLENBQUMsc0JBQXNCLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSx5QkFBeUIsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMxRyxLQUFLLENBQUMsc0JBQXNCLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7UUFDMUYsVUFBVSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsc0NBQXNDLENBQUMsQ0FBQztLQUN0RSxDQUFDO0lBRUYsc0JBQXNCLEVBQUUsT0FBTyxDQUFDLHdCQUF3QixFQUFFO1FBQ3hELEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ3hHLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLHlCQUF5QixFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ3pHLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUMxRixVQUFVLENBQUMsV0FBUyxzQkFBc0IsQ0FBQyxPQUFTLEVBQUUsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7S0FDdkcsQ0FBQztJQUVGLHVCQUF1QixFQUFFLE9BQU8sQ0FBQyxnQ0FBZ0MsRUFBRTtRQUNqRSxLQUFLLENBQ0gseUJBQXlCLENBQUMsSUFBSSxFQUM5QixLQUFLLENBQUM7WUFDSixVQUFVLEVBQUUsc0NBQXNDO1lBQ2xELFNBQVMsRUFBRSwyQkFBMkI7WUFDdEMsTUFBTSxFQUFLLGFBQWEsT0FBSTtZQUM1QixLQUFLLEVBQUssUUFBUSxPQUFJO1lBQ3RCLE1BQU0sRUFBRSxZQUFVLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBSTtTQUNqRCxDQUFDLEVBQ0YsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDekI7UUFDRCxLQUFLLENBQ0gseUJBQXlCLENBQUMsSUFBSSxFQUM5QixLQUFLLENBQUM7WUFDSixVQUFVLEVBQUUsc0NBQXNDO1lBQ2xELFNBQVMsRUFBRSwyQkFBMkI7WUFDdEMsTUFBTSxFQUFLLGFBQWEsT0FBSTtZQUM1QixLQUFLLEVBQUssUUFBUSxHQUFHLENBQUMsT0FBSTtZQUMxQixNQUFNLEVBQUUsT0FBSyxRQUFRLEdBQUcsQ0FBQyxjQUFRLFFBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFJO1NBQy9FLENBQUMsRUFDRixFQUFFLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUN6QjtLQUNGLENBQUM7SUFFRixxQkFBcUIsRUFBRSxPQUFPLENBQUMsOEJBQThCLEVBQUU7UUFDN0QsS0FBSyxDQUNILHlCQUF5QixDQUFDLElBQUksRUFDOUIsS0FBSyxDQUFDO1lBQ0osVUFBVSxFQUFFLHNDQUFzQztZQUNsRCxTQUFTLEVBQUUsNEJBQTRCO1lBQ3ZDLEtBQUssRUFBSyxhQUFhLE9BQUk7WUFDM0IsTUFBTSxFQUFLLFFBQVEsT0FBSTtZQUN2QixNQUFNLEVBQUUsTUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQVU7U0FDakQsQ0FBQyxFQUNGLEVBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQzFCO1FBQ0QsS0FBSyxDQUNILHlCQUF5QixDQUFDLElBQUksRUFDOUIsS0FBSyxDQUFDO1lBQ0osVUFBVSxFQUFFLHNDQUFzQztZQUNsRCxTQUFTLEVBQUUsNEJBQTRCO1lBQ3ZDLEtBQUssRUFBSyxhQUFhLE9BQUk7WUFDM0IsTUFBTSxFQUFLLFFBQVEsR0FBRyxDQUFDLE9BQUk7WUFDM0IsTUFBTSxFQUFLLFFBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFRLFFBQVEsR0FBRyxDQUFDLE9BQUk7U0FDN0UsQ0FBQyxFQUNGLEVBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQzFCO0tBQ0YsQ0FBQztDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcblxuaW1wb3J0IHsgU3RlcHBlckFuaW1hdGlvblN0YXRlcyB9IGZyb20gJy4vc3RlcHBlci1hbmltYXRpb24tc3RhdGVzLmVudW0nO1xuaW1wb3J0IHsgU3RlcHBlckJhckFuaW1hdGlvblN0YXRlcyB9IGZyb20gJy4vc3RlcHBlci1iYXItYW5pbWF0aW9uLXN0YXRlcy5lbnVtJztcblxuY29uc3QgQkFSX1NJWkUgPSA0MDtcbmNvbnN0IEJBUl9USElDS05FU1MgPSAyO1xuY29uc3QgU1RFUF9TSVpFID0gMjg7XG5cbmV4cG9ydCBjb25zdCBzdGVwcGVyQW5pbWF0aW9ucyA9IHtcbiAgaG9yaXpvbnRhbFN0ZXBUcmFuc2l0aW9uOiB0cmlnZ2VyKCdzdGVwSG9yaXpvbnRhbFRyYW5zaXRpb24nLCBbXG4gICAgc3RhdGUoU3RlcHBlckFuaW1hdGlvblN0YXRlcy5MZWZ0LCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKScsIHZpc2liaWxpdHk6ICdoaWRkZW4nIH0pKSxcbiAgICBzdGF0ZShTdGVwcGVyQW5pbWF0aW9uU3RhdGVzLlJpZ2h0LCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJywgdmlzaWJpbGl0eTogJ2hpZGRlbicgfSkpLFxuICAgIHN0YXRlKFN0ZXBwZXJBbmltYXRpb25TdGF0ZXMuQ3VycmVudCwgc3R5bGUoeyB0cmFuc2Zvcm06ICdub25lJywgdmlzaWJpbGl0eTogJ3Zpc2libGUnIH0pKSxcbiAgICB0cmFuc2l0aW9uKCcqID0+IConLCBhbmltYXRlKCc1MDBtcyBjdWJpYy1iZXppZXIoMC4zNSwgMCwgMC4yNSwgMSknKSlcbiAgXSksXG5cbiAgdmVydGljYWxTdGVwVHJhbnNpdGlvbjogdHJpZ2dlcignc3RlcFZlcnRpY2FsVHJhbnNpdGlvbicsIFtcbiAgICBzdGF0ZShTdGVwcGVyQW5pbWF0aW9uU3RhdGVzLlVwLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIC0xMDAlLCAwKScsIHZpc2liaWxpdHk6ICdoaWRkZW4nIH0pKSxcbiAgICBzdGF0ZShTdGVwcGVyQW5pbWF0aW9uU3RhdGVzLkRvd24sIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMTAwJSwgMCknLCB2aXNpYmlsaXR5OiAnaGlkZGVuJyB9KSksXG4gICAgc3RhdGUoU3RlcHBlckFuaW1hdGlvblN0YXRlcy5DdXJyZW50LCBzdHlsZSh7IHRyYW5zZm9ybTogJ25vbmUnLCB2aXNpYmlsaXR5OiAndmlzaWJsZScgfSkpLFxuICAgIHRyYW5zaXRpb24oYCogPD0+ICR7U3RlcHBlckFuaW1hdGlvblN0YXRlcy5DdXJyZW50fWAsIGFuaW1hdGUoJzIyNW1zIGN1YmljLWJlemllcigwLjQsIDAuMCwgMC4yLCAxKScpKVxuICBdKSxcblxuICBob3Jpem9udGFsQmFyVHJhbnNpdGlvbjogdHJpZ2dlcignc3RlcHBlckJhckhvcml6b250YWxUcmFuc2l0aW9uJywgW1xuICAgIHN0YXRlKFxuICAgICAgU3RlcHBlckJhckFuaW1hdGlvblN0YXRlcy5TdGF5LFxuICAgICAgc3R5bGUoe1xuICAgICAgICB0cmFuc2l0aW9uOiAnNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzUsIDAsIDAuMjUsIDEpJyxcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCh7eyB3aWR0aCB9fXB4KScsXG4gICAgICAgIGhlaWdodDogYCR7QkFSX1RISUNLTkVTU31weGAsXG4gICAgICAgIHdpZHRoOiBgJHtCQVJfU0laRX1weGAsXG4gICAgICAgIG1hcmdpbjogYDAgMCAwIC0keyhCQVJfU0laRSAtIFNURVBfU0laRSkgLyAyfXB4YFxuICAgICAgfSksXG4gICAgICB7IHBhcmFtczogeyB3aWR0aDogMCB9IH1cbiAgICApLFxuICAgIHN0YXRlKFxuICAgICAgU3RlcHBlckJhckFuaW1hdGlvblN0YXRlcy5Nb3ZlLFxuICAgICAgc3R5bGUoe1xuICAgICAgICB0cmFuc2l0aW9uOiAnNTAwbXMgY3ViaWMtYmV6aWVyKDAuMzUsIDAsIDAuMjUsIDEpJyxcbiAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCh7eyB3aWR0aCB9fXB4KScsXG4gICAgICAgIGhlaWdodDogYCR7QkFSX1RISUNLTkVTU31weGAsXG4gICAgICAgIHdpZHRoOiBgJHtCQVJfU0laRSAvIDJ9cHhgLFxuICAgICAgICBtYXJnaW46IGAwICR7QkFSX1NJWkUgLyA0fXB4IDAgJHtCQVJfU0laRSAvIDQgLSAoQkFSX1NJWkUgLSBTVEVQX1NJWkUpIC8gMn1weGBcbiAgICAgIH0pLFxuICAgICAgeyBwYXJhbXM6IHsgd2lkdGg6IDAgfSB9XG4gICAgKVxuICBdKSxcblxuICB2ZXJ0aWNhbEJhclRyYW5zaXRpb246IHRyaWdnZXIoJ3N0ZXBwZXJCYXJWZXJ0aWNhbFRyYW5zaXRpb24nLCBbXG4gICAgc3RhdGUoXG4gICAgICBTdGVwcGVyQmFyQW5pbWF0aW9uU3RhdGVzLlN0YXksXG4gICAgICBzdHlsZSh7XG4gICAgICAgIHRyYW5zaXRpb246ICc1MDBtcyBjdWJpYy1iZXppZXIoMC4zNSwgMCwgMC4yNSwgMSknLFxuICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKHt7IGhlaWdodCB9fXB4KScsXG4gICAgICAgIHdpZHRoOiBgJHtCQVJfVEhJQ0tORVNTfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtCQVJfU0laRX1weGAsXG4gICAgICAgIG1hcmdpbjogYC0keyhCQVJfU0laRSAtIFNURVBfU0laRSkgLyAyfXB4IDAgMCAwYFxuICAgICAgfSksXG4gICAgICB7IHBhcmFtczogeyBoZWlnaHQ6IDAgfSB9XG4gICAgKSxcbiAgICBzdGF0ZShcbiAgICAgIFN0ZXBwZXJCYXJBbmltYXRpb25TdGF0ZXMuTW92ZSxcbiAgICAgIHN0eWxlKHtcbiAgICAgICAgdHJhbnNpdGlvbjogJzUwMG1zIGN1YmljLWJlemllcigwLjM1LCAwLCAwLjI1LCAxKScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoe3sgaGVpZ2h0IH19cHgpJyxcbiAgICAgICAgd2lkdGg6IGAke0JBUl9USElDS05FU1N9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke0JBUl9TSVpFIC8gMn1weGAsXG4gICAgICAgIG1hcmdpbjogYCR7QkFSX1NJWkUgLyA0IC0gKEJBUl9TSVpFIC0gU1RFUF9TSVpFKSAvIDJ9cHggMCAke0JBUl9TSVpFIC8gNH1weGBcbiAgICAgIH0pLFxuICAgICAgeyBwYXJhbXM6IHsgaGVpZ2h0OiAwIH0gfVxuICAgIClcbiAgXSlcbn07XG4iXX0=