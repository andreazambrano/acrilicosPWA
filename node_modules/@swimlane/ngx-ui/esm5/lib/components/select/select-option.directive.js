import { __decorate, __metadata } from "tslib";
import { Directive, Input, TemplateRef, ContentChild } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { SelectOptionTemplateDirective } from './select-option-template.directive';
import { SelectOptionInputTemplateDirective } from './select-option-input-template.directive';
var SelectOptionDirective = /** @class */ (function () {
    function SelectOptionDirective() {
        this.name = '';
        this._disabled = false;
        this._hidden = false;
    }
    Object.defineProperty(SelectOptionDirective.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (disabled) {
            this._disabled = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectOptionDirective.prototype, "hidden", {
        get: function () {
            return this._hidden;
        },
        set: function (hidden) {
            this._hidden = coerceBooleanProperty(hidden);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectOptionDirective.prototype, "optionTemplate", {
        get: function () {
            return this._optionTemplateInput || this._optionTemplateQuery;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SelectOptionDirective.prototype, "inputTemplate", {
        get: function () {
            return this._inputTemplateInput || this._inputTemplateQuery;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SelectOptionDirective.prototype, "name", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SelectOptionDirective.prototype, "value", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SelectOptionDirective.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SelectOptionDirective.prototype, "hidden", null);
    __decorate([
        Input('optionTemplate'),
        __metadata("design:type", TemplateRef)
    ], SelectOptionDirective.prototype, "_optionTemplateInput", void 0);
    __decorate([
        ContentChild(SelectOptionTemplateDirective, { read: TemplateRef, static: true }),
        __metadata("design:type", TemplateRef)
    ], SelectOptionDirective.prototype, "_optionTemplateQuery", void 0);
    __decorate([
        Input('inputTemplate'),
        __metadata("design:type", TemplateRef)
    ], SelectOptionDirective.prototype, "_inputTemplateInput", void 0);
    __decorate([
        ContentChild(SelectOptionInputTemplateDirective, { read: TemplateRef, static: true }),
        __metadata("design:type", TemplateRef)
    ], SelectOptionDirective.prototype, "_inputTemplateQuery", void 0);
    SelectOptionDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            exportAs: 'ngxSelectOption',
            selector: 'ngx-select-option'
        })
    ], SelectOptionDirective);
    return SelectOptionDirective;
}());
export { SelectOptionDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9wdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc2VsZWN0L3NlbGVjdC1vcHRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTlELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBUTlGO0lBQUE7UUFDVyxTQUFJLEdBQVcsRUFBRSxDQUFDO1FBdUNuQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBQzNCLFlBQU8sR0FBWSxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQXJDQyxzQkFBSSwyQ0FBUTthQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7YUFDRCxVQUFhLFFBQVE7WUFDbkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7T0FIQTtJQU1ELHNCQUFJLHlDQUFNO2FBQVY7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQzthQUNELFVBQVcsTUFBTTtZQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcscUJBQXFCLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0MsQ0FBQzs7O09BSEE7SUFXRCxzQkFBSSxpREFBYzthQUFsQjtZQUNFLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixJQUFJLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztRQUNoRSxDQUFDOzs7T0FBQTtJQVFELHNCQUFJLGdEQUFhO2FBQWpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsbUJBQW1CLElBQUksSUFBSSxDQUFDLG1CQUFtQixDQUFDO1FBQzlELENBQUM7OztPQUFBO0lBckNRO1FBQVIsS0FBSyxFQUFFOzt1REFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7O3dEQUFZO0lBR3BCO1FBREMsS0FBSyxFQUFFOzs7eURBR1A7SUFNRDtRQURDLEtBQUssRUFBRTs7O3VEQUdQO0lBTUQ7UUFEQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7a0NBQ0YsV0FBVzt1RUFBTTtJQUd2QztRQURDLFlBQVksQ0FBQyw2QkFBNkIsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO2tDQUMzRCxXQUFXO3VFQUFNO0lBT3ZDO1FBREMsS0FBSyxDQUFDLGVBQWUsQ0FBQztrQ0FDRixXQUFXO3NFQUFNO0lBR3RDO1FBREMsWUFBWSxDQUFDLGtDQUFrQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7a0NBQ2pFLFdBQVc7c0VBQU07SUFsQzNCLHFCQUFxQjtRQUxqQyxTQUFTLENBQUM7WUFDVCw4Q0FBOEM7WUFDOUMsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixRQUFRLEVBQUUsbUJBQW1CO1NBQzlCLENBQUM7T0FDVyxxQkFBcUIsQ0EwQ2pDO0lBQUQsNEJBQUM7Q0FBQSxBQTFDRCxJQTBDQztTQTFDWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiwgQ29udGVudENoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb2VyY2VCb29sZWFuUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuXG5pbXBvcnQgeyBTZWxlY3RPcHRpb25UZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2VsZWN0T3B0aW9uSW5wdXRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vc2VsZWN0LW9wdGlvbi1pbnB1dC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2VsZWN0RHJvcGRvd25PcHRpb24gfSBmcm9tICcuL3NlbGVjdC1kcm9wZG93bi1vcHRpb24uaW50ZXJmYWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgZXhwb3J0QXM6ICduZ3hTZWxlY3RPcHRpb24nLFxuICBzZWxlY3RvcjogJ25neC1zZWxlY3Qtb3B0aW9uJ1xufSlcbmV4cG9ydCBjbGFzcyBTZWxlY3RPcHRpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBTZWxlY3REcm9wZG93bk9wdGlvbiB7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKSB2YWx1ZTogYW55O1xuXG4gIEBJbnB1dCgpXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQ7XG4gIH1cbiAgc2V0IGRpc2FibGVkKGRpc2FibGVkKSB7XG4gICAgdGhpcy5fZGlzYWJsZWQgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkoZGlzYWJsZWQpO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IGhpZGRlbigpIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZGVuO1xuICB9XG4gIHNldCBoaWRkZW4oaGlkZGVuKSB7XG4gICAgdGhpcy5faGlkZGVuID0gY29lcmNlQm9vbGVhblByb3BlcnR5KGhpZGRlbik7XG4gIH1cblxuICBASW5wdXQoJ29wdGlvblRlbXBsYXRlJylcbiAgX29wdGlvblRlbXBsYXRlSW5wdXQ6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQENvbnRlbnRDaGlsZChTZWxlY3RPcHRpb25UZW1wbGF0ZURpcmVjdGl2ZSwgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiB0cnVlIH0pXG4gIF9vcHRpb25UZW1wbGF0ZVF1ZXJ5OiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIGdldCBvcHRpb25UZW1wbGF0ZSgpOiBUZW1wbGF0ZVJlZjxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9uVGVtcGxhdGVJbnB1dCB8fCB0aGlzLl9vcHRpb25UZW1wbGF0ZVF1ZXJ5O1xuICB9XG5cbiAgQElucHV0KCdpbnB1dFRlbXBsYXRlJylcbiAgX2lucHV0VGVtcGxhdGVJbnB1dDogVGVtcGxhdGVSZWY8YW55PjtcblxuICBAQ29udGVudENoaWxkKFNlbGVjdE9wdGlvbklucHV0VGVtcGxhdGVEaXJlY3RpdmUsIHsgcmVhZDogVGVtcGxhdGVSZWYsIHN0YXRpYzogdHJ1ZSB9KVxuICBfaW5wdXRUZW1wbGF0ZVF1ZXJ5OiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIGdldCBpbnB1dFRlbXBsYXRlKCk6IFRlbXBsYXRlUmVmPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dFRlbXBsYXRlSW5wdXQgfHwgdGhpcy5faW5wdXRUZW1wbGF0ZVF1ZXJ5O1xuICB9XG5cbiAgcHJpdmF0ZSBfZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfaGlkZGVuOiBib29sZWFuID0gZmFsc2U7XG59XG4iXX0=