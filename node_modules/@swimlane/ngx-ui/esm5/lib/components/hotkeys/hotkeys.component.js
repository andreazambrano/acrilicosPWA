import { __decorate, __metadata, __values } from "tslib";
import { trigger } from '@angular/animations';
import { Component, ChangeDetectionStrategy } from '@angular/core';
import { Subject, BehaviorSubject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { fadeInAnimation, slideDownFadeOutAnimation } from '../../animations';
import { HotkeysService } from './hotkeys.service';
import { HotkeyStatus } from './hotkey-status.enum';
var HotkeysComponent = /** @class */ (function () {
    function HotkeysComponent(_hotkeysService) {
        this._hotkeysService = _hotkeysService;
        this.hotkeys$ = new BehaviorSubject([]);
        this.visible = false;
        this._destroy = new Subject();
    }
    HotkeysComponent.prototype.ngOnInit = function () {
        this._hotkeysService.changeEvent.pipe(takeUntil(this._destroy)).subscribe(this.updateHotkeys.bind(this));
        this.updateHotkeys(this._hotkeysService.hotkeys);
    };
    HotkeysComponent.prototype.ngOnDestroy = function () {
        this._destroy.next();
        this._destroy.complete();
    };
    HotkeysComponent.prototype.updateHotkeys = function (hotkeys) {
        var e_1, _a;
        var hks = [];
        for (var comb in hotkeys) {
            try {
                for (var _b = (e_1 = void 0, __values(hotkeys[comb])), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var hotkey = _c.value;
                    if (hotkey.status === HotkeyStatus.Active && hotkey.visible) {
                        hks.push(hotkey);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        this.hotkeys$.next(hks);
    };
    HotkeysComponent.prototype.show = function () {
        this.visible = true;
    };
    HotkeysComponent.prototype.hide = function () {
        this.visible = false;
    };
    HotkeysComponent.ctorParameters = function () { return [
        { type: HotkeysService }
    ]; };
    HotkeysComponent = __decorate([
        Component({
            exportAs: 'ngxHotkeys',
            selector: 'ngx-hotkeys',
            template: "<div class=\"hotkeys-container\" *ngIf=\"(hotkeys$ | async).length > 0\">\n  <div class=\"hotkeys\" *ngIf=\"visible\" [@containerAnimationState]=\"'active'\">\n    <div *ngFor=\"let hotkey of hotkeys$ | async\" class=\"hotkey-row\">\n      {{ hotkey.description }}\n      <div class=\"combination\">\n        <span *ngFor=\"let key of hotkey.keys; let i = index\">\n          <span class=\"key\">{{ key }}</span> <span *ngIf=\"i < hotkey.keys.length - 1\"> + </span>\n        </span>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"close-icon icon icon-x-filled\"\n    *ngIf=\"visible\"\n    (click)=\"hide()\"\n    [@iconAnimationState]=\"'active'\"\n  ></div>\n  <div\n    class=\"hotkeys-icon icon icon-keyboard\"\n    *ngIf=\"!visible\"\n    (click)=\"show()\"\n    [@iconAnimationState]=\"'active'\"\n  ></div>\n</div>\n",
            animations: [
                trigger('containerAnimationState', slideDownFadeOutAnimation()),
                trigger('iconAnimationState', fadeInAnimation())
            ],
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".hotkeys-container{position:fixed;bottom:20px;right:20px;z-index:2000}.hotkeys-container .icon{cursor:pointer;width:40px;height:40px;line-height:43px;text-align:center;border-radius:20px;position:absolute;bottom:0;right:0}.hotkeys-container .close-icon{font-size:40px;color:#909cb4;float:right;line-height:1em}.hotkeys-container .hotkeys-icon{color:#909cb4;font-size:14px;background-color:#000}.hotkeys-container .icon:hover{color:#cdd2dd}.hotkeys{background:#12141a;border:1px solid #5a6884;padding:15px;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);color:#909cb4;font-size:14px;border-radius:2px;margin-bottom:45px}.hotkeys .hotkey-row{padding:10px 0;border-bottom:1px solid #455066}.hotkeys .hotkey-row:first-child{padding-top:0}.hotkeys .hotkey-row:last-child{border-bottom:none;padding-bottom:0}.hotkeys .hotkey-row .combination{float:right;margin-left:30px}.hotkeys .hotkey-row .combination .key{background:#5a6884;color:#12141a;padding:2px 7px;border-radius:2px}"]
        }),
        __metadata("design:paramtypes", [HotkeysService])
    ], HotkeysComponent);
    return HotkeysComponent;
}());
export { HotkeysComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG90a2V5cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvaG90a2V5cy9ob3RrZXlzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxTQUFTLEVBQXFCLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWFwRDtJQU1FLDBCQUE2QixlQUErQjtRQUEvQixvQkFBZSxHQUFmLGVBQWUsQ0FBZ0I7UUFMbkQsYUFBUSxHQUFHLElBQUksZUFBZSxDQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ3RELFlBQU8sR0FBWSxLQUFLLENBQUM7UUFFUixhQUFRLEdBQUcsSUFBSSxPQUFPLEVBQVEsQ0FBQztJQUVlLENBQUM7SUFFaEUsbUNBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDekcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxzQ0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCx3Q0FBYSxHQUFiLFVBQWMsT0FBc0M7O1FBQ2xELElBQU0sR0FBRyxHQUFhLEVBQUUsQ0FBQztRQUV6QixLQUFLLElBQU0sSUFBSSxJQUFJLE9BQU8sRUFBRTs7Z0JBQzFCLEtBQXFCLElBQUEsb0JBQUEsU0FBQSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUEsQ0FBQSxnQkFBQSw0QkFBRTtvQkFBL0IsSUFBTSxNQUFNLFdBQUE7b0JBQ2YsSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLFlBQVksQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE9BQU8sRUFBRTt3QkFDM0QsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztxQkFDbEI7aUJBQ0Y7Ozs7Ozs7OztTQUNGO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELCtCQUFJLEdBQUo7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDO0lBRUQsK0JBQUksR0FBSjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7O2dCQWhDNkMsY0FBYzs7SUFOakQsZ0JBQWdCO1FBWDVCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLDgwQkFBdUM7WUFFdkMsVUFBVSxFQUFFO2dCQUNWLE9BQU8sQ0FBQyx5QkFBeUIsRUFBRSx5QkFBeUIsRUFBRSxDQUFDO2dCQUMvRCxPQUFPLENBQUMsb0JBQW9CLEVBQUUsZUFBZSxFQUFFLENBQUM7YUFDakQ7WUFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDaEQsQ0FBQzt5Q0FPOEMsY0FBYztPQU5qRCxnQkFBZ0IsQ0F1QzVCO0lBQUQsdUJBQUM7Q0FBQSxBQXZDRCxJQXVDQztTQXZDWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0cmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCwgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IGZhZGVJbkFuaW1hdGlvbiwgc2xpZGVEb3duRmFkZU91dEFuaW1hdGlvbiB9IGZyb20gJy4uLy4uL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgSG90a2V5c1NlcnZpY2UgfSBmcm9tICcuL2hvdGtleXMuc2VydmljZSc7XG5pbXBvcnQgeyBIb3RrZXkgfSBmcm9tICcuL2hvdGtleS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgSG90a2V5U3RhdHVzIH0gZnJvbSAnLi9ob3RrZXktc3RhdHVzLmVudW0nO1xuXG5AQ29tcG9uZW50KHtcbiAgZXhwb3J0QXM6ICduZ3hIb3RrZXlzJyxcbiAgc2VsZWN0b3I6ICduZ3gtaG90a2V5cycsXG4gIHRlbXBsYXRlVXJsOiAnLi9ob3RrZXlzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaG90a2V5cy5jb21wb25lbnQuc2NzcyddLFxuICBhbmltYXRpb25zOiBbXG4gICAgdHJpZ2dlcignY29udGFpbmVyQW5pbWF0aW9uU3RhdGUnLCBzbGlkZURvd25GYWRlT3V0QW5pbWF0aW9uKCkpLFxuICAgIHRyaWdnZXIoJ2ljb25BbmltYXRpb25TdGF0ZScsIGZhZGVJbkFuaW1hdGlvbigpKVxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBIb3RrZXlzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICByZWFkb25seSBob3RrZXlzJCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8SG90a2V5W10+KFtdKTtcbiAgdmlzaWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgX2Rlc3Ryb3kgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgX2hvdGtleXNTZXJ2aWNlOiBIb3RrZXlzU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLl9ob3RrZXlzU2VydmljZS5jaGFuZ2VFdmVudC5waXBlKHRha2VVbnRpbCh0aGlzLl9kZXN0cm95KSkuc3Vic2NyaWJlKHRoaXMudXBkYXRlSG90a2V5cy5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLnVwZGF0ZUhvdGtleXModGhpcy5faG90a2V5c1NlcnZpY2UuaG90a2V5cyk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLl9kZXN0cm95Lm5leHQoKTtcbiAgICB0aGlzLl9kZXN0cm95LmNvbXBsZXRlKCk7XG4gIH1cblxuICB1cGRhdGVIb3RrZXlzKGhvdGtleXM6IHsgW2NvbWJvOiBzdHJpbmddOiBIb3RrZXlbXSB9KSB7XG4gICAgY29uc3QgaGtzOiBIb3RrZXlbXSA9IFtdO1xuXG4gICAgZm9yIChjb25zdCBjb21iIGluIGhvdGtleXMpIHtcbiAgICAgIGZvciAoY29uc3QgaG90a2V5IG9mIGhvdGtleXNbY29tYl0pIHtcbiAgICAgICAgaWYgKGhvdGtleS5zdGF0dXMgPT09IEhvdGtleVN0YXR1cy5BY3RpdmUgJiYgaG90a2V5LnZpc2libGUpIHtcbiAgICAgICAgICBoa3MucHVzaChob3RrZXkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5ob3RrZXlzJC5uZXh0KGhrcyk7XG4gIH1cblxuICBzaG93KCkge1xuICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gIH1cblxuICBoaWRlKCkge1xuICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICB9XG59XG4iXX0=