import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';
import { fromEvent } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { SplitDirection } from './split-direction.enum';
var SplitHandleComponent = /** @class */ (function () {
    function SplitHandleComponent() {
        this.drag = new EventEmitter();
        this.dragStart = new EventEmitter();
        this.dragEnd = new EventEmitter();
        this.dblclick = new EventEmitter();
        this.direction = SplitDirection.Row;
    }
    Object.defineProperty(SplitHandleComponent.prototype, "isRow", {
        get: function () {
            return this.direction === SplitDirection.Row;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SplitHandleComponent.prototype, "isColumn", {
        get: function () {
            return this.direction === SplitDirection.Column;
        },
        enumerable: true,
        configurable: true
    });
    SplitHandleComponent.prototype.onMousedown = function (ev) {
        var _this = this;
        var mouseup$ = fromEvent(document, 'mouseup');
        this.subscription = mouseup$.subscribe(/* istanbul ignore next */ function (e) { return _this.onMouseup(e); });
        var mousemove$ = fromEvent(document, 'mousemove')
            .pipe(takeUntil(mouseup$))
            .subscribe(/* istanbul ignore next */ function (e) { return _this.onMouseMove(e); });
        this.subscription.add(mousemove$);
        this.dragStart.emit(ev);
    };
    SplitHandleComponent.prototype.onMouseMove = function (ev) {
        this.drag.emit(ev);
    };
    SplitHandleComponent.prototype.onMouseup = function (ev) {
        if (this.subscription) {
            this.dragEnd.emit(ev);
            this.subscription.unsubscribe();
            this.subscription = undefined;
        }
    };
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SplitHandleComponent.prototype, "drag", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SplitHandleComponent.prototype, "dragStart", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SplitHandleComponent.prototype, "dragEnd", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SplitHandleComponent.prototype, "dblclick", void 0);
    SplitHandleComponent = __decorate([
        Component({
            exportAs: 'ngxSplitHandle',
            // tslint:disable-next-line:component-selector
            selector: '[ngxSplitHandle]',
            template: "<button\n  #splitHandle\n  class=\"icon-split-handle ngx-split-button\"\n  (mousedown)=\"onMousedown($event)\"\n  (dblclick)=\"dblclick.emit($event)\"\n></button>\n",
            host: {
                class: 'ngx-split-handle',
                '[class.direction-row]': 'isRow',
                '[class.direction-column]': 'isColumn'
            },
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".ngx-split-handle{position:relative}.ngx-split-handle .ngx-split-button{line-height:0;font-size:32px;position:absolute;display:block;padding:0}.ngx-split-handle.direction-row .ngx-split-button{top:50%;left:50%;cursor:col-resize;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ngx-split-handle.direction-column .ngx-split-button{left:50%;cursor:row-resize;top:-3px;-webkit-transform:translateX(-50%) rotate(270deg);transform:translateX(-50%) rotate(270deg)}"]
        })
    ], SplitHandleComponent);
    return SplitHandleComponent;
}());
export { SplitHandleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtaGFuZGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zcGxpdC9zcGxpdC1oYW5kbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUcsT0FBTyxFQUFnQixTQUFTLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQWdCeEQ7SUFBQTtRQUNZLFNBQUksR0FBRyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQUNwRCxjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQWMsQ0FBQztRQUMzQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQWMsQ0FBQztRQUN6QyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQWMsQ0FBQztRQUdwRCxjQUFTLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQztJQWlDakMsQ0FBQztJQS9CQyxzQkFBSSx1Q0FBSzthQUFUO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLGNBQWMsQ0FBQyxHQUFHLENBQUM7UUFDL0MsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSwwQ0FBUTthQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLGNBQWMsQ0FBQyxNQUFNLENBQUM7UUFDbEQsQ0FBQzs7O09BQUE7SUFFRCwwQ0FBVyxHQUFYLFVBQVksRUFBYztRQUExQixpQkFVQztRQVRDLElBQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLDBCQUEwQixDQUFDLFVBQUMsQ0FBYSxJQUFLLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDO1FBRXhHLElBQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDO2FBQ2hELElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDekIsU0FBUyxDQUFDLDBCQUEwQixDQUFDLFVBQUMsQ0FBYSxJQUFLLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDO1FBRWhGLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCwwQ0FBVyxHQUFYLFVBQVksRUFBYztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBRUQsd0NBQVMsR0FBVCxVQUFVLEVBQWM7UUFDdEIsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDaEMsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUM7U0FDL0I7SUFDSCxDQUFDO0lBdENTO1FBQVQsTUFBTSxFQUFFOztzREFBcUQ7SUFDcEQ7UUFBVCxNQUFNLEVBQUU7OzJEQUE0QztJQUMzQztRQUFULE1BQU0sRUFBRTs7eURBQTBDO0lBQ3pDO1FBQVQsTUFBTSxFQUFFOzswREFBMkM7SUFKekMsb0JBQW9CO1FBZGhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsOENBQThDO1lBQzlDLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsZ0xBQTRDO1lBRTVDLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsa0JBQWtCO2dCQUN6Qix1QkFBdUIsRUFBRSxPQUFPO2dCQUNoQywwQkFBMEIsRUFBRSxVQUFVO2FBQ3ZDO1lBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7WUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2hELENBQUM7T0FDVyxvQkFBb0IsQ0F3Q2hDO0lBQUQsMkJBQUM7Q0FBQSxBQXhDRCxJQXdDQztTQXhDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiwgZnJvbUV2ZW50IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IFNwbGl0RGlyZWN0aW9uIH0gZnJvbSAnLi9zcGxpdC1kaXJlY3Rpb24uZW51bSc7XG5cbkBDb21wb25lbnQoe1xuICBleHBvcnRBczogJ25neFNwbGl0SGFuZGxlJyxcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ1tuZ3hTcGxpdEhhbmRsZV0nLFxuICB0ZW1wbGF0ZVVybDogJy4vc3BsaXQtaGFuZGxlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3BsaXQtaGFuZGxlLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25neC1zcGxpdC1oYW5kbGUnLFxuICAgICdbY2xhc3MuZGlyZWN0aW9uLXJvd10nOiAnaXNSb3cnLFxuICAgICdbY2xhc3MuZGlyZWN0aW9uLWNvbHVtbl0nOiAnaXNDb2x1bW4nXG4gIH0sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFNwbGl0SGFuZGxlQ29tcG9uZW50IHtcbiAgQE91dHB1dCgpIGRyYWcgPSBuZXcgRXZlbnRFbWl0dGVyPHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfT4oKTtcbiAgQE91dHB1dCgpIGRyYWdTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcbiAgQE91dHB1dCgpIGRyYWdFbmQgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG4gIEBPdXRwdXQoKSBkYmxjbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcblxuICBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgZGlyZWN0aW9uID0gU3BsaXREaXJlY3Rpb24uUm93O1xuXG4gIGdldCBpc1JvdygpIHtcbiAgICByZXR1cm4gdGhpcy5kaXJlY3Rpb24gPT09IFNwbGl0RGlyZWN0aW9uLlJvdztcbiAgfVxuXG4gIGdldCBpc0NvbHVtbigpIHtcbiAgICByZXR1cm4gdGhpcy5kaXJlY3Rpb24gPT09IFNwbGl0RGlyZWN0aW9uLkNvbHVtbjtcbiAgfVxuXG4gIG9uTW91c2Vkb3duKGV2OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgY29uc3QgbW91c2V1cCQgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdtb3VzZXVwJyk7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24gPSBtb3VzZXVwJC5zdWJzY3JpYmUoLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gKGU6IE1vdXNlRXZlbnQpID0+IHRoaXMub25Nb3VzZXVwKGUpKTtcblxuICAgIGNvbnN0IG1vdXNlbW92ZSQgPSBmcm9tRXZlbnQoZG9jdW1lbnQsICdtb3VzZW1vdmUnKVxuICAgICAgLnBpcGUodGFrZVVudGlsKG1vdXNldXAkKSlcbiAgICAgIC5zdWJzY3JpYmUoLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gKGU6IE1vdXNlRXZlbnQpID0+IHRoaXMub25Nb3VzZU1vdmUoZSkpO1xuXG4gICAgdGhpcy5zdWJzY3JpcHRpb24uYWRkKG1vdXNlbW92ZSQpO1xuICAgIHRoaXMuZHJhZ1N0YXJ0LmVtaXQoZXYpO1xuICB9XG5cbiAgb25Nb3VzZU1vdmUoZXY6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICB0aGlzLmRyYWcuZW1pdChldik7XG4gIH1cblxuICBvbk1vdXNldXAoZXY6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMuZHJhZ0VuZC5lbWl0KGV2KTtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==