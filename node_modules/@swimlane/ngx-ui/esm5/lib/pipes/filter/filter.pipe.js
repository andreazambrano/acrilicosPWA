import { __decorate } from "tslib";
import { Pipe } from '@angular/core';
import { isNumber, filterByString, filterDefault, filterByObject } from '../../utils';
/**
 * Filter Pipe
 * A pipe like the old-school ng1 pipe. Use this with
 * moderation since it has performance issues.
 *
 * References:
 *  - https://github.com/VadimDez/ng2-filter-pipe
 *  - https://angular.io/docs/ts/latest/guide/pipes.html
 *
 * Example:
 *
 *    <input type="text" [(ngModel)]="stringFilter">
 *    <ul>
 *      <li *ngFor="let item of array | filterBy: stringFilter">
 *        {{ item }}
 *      </li>
 *    </ul>
 *
 */
var FilterPipe = /** @class */ (function () {
    function FilterPipe() {
    }
    FilterPipe.prototype.transform = function (array, filter) {
        if (typeof filter === 'string') {
            if (isNumber(filter)) {
                return array.filter(filterDefault(filter));
            }
            return array.filter(filterByString(filter));
        }
        if (typeof filter === 'object') {
            return array.filter(filterByObject(filter));
        }
        return array.filter(filterDefault(filter));
    };
    FilterPipe = __decorate([
        Pipe({
            name: 'filterBy',
            pure: false
        })
    ], FilterPipe);
    return FilterPipe;
}());
export { FilterPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL3BpcGVzL2ZpbHRlci9maWx0ZXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV0Rjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JHO0FBS0g7SUFBQTtJQWdCQSxDQUFDO0lBZkMsOEJBQVMsR0FBVCxVQUFVLEtBQVksRUFBRSxNQUFXO1FBQ2pDLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQzlCLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO2dCQUNwQixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7YUFDNUM7WUFFRCxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDN0M7UUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDN0M7UUFFRCxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQWZVLFVBQVU7UUFKdEIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFVBQVU7WUFDaEIsSUFBSSxFQUFFLEtBQUs7U0FDWixDQUFDO09BQ1csVUFBVSxDQWdCdEI7SUFBRCxpQkFBQztDQUFBLEFBaEJELElBZ0JDO1NBaEJZLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzTnVtYmVyLCBmaWx0ZXJCeVN0cmluZywgZmlsdGVyRGVmYXVsdCwgZmlsdGVyQnlPYmplY3QgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbi8qKlxuICogRmlsdGVyIFBpcGVcbiAqIEEgcGlwZSBsaWtlIHRoZSBvbGQtc2Nob29sIG5nMSBwaXBlLiBVc2UgdGhpcyB3aXRoXG4gKiBtb2RlcmF0aW9uIHNpbmNlIGl0IGhhcyBwZXJmb3JtYW5jZSBpc3N1ZXMuXG4gKlxuICogUmVmZXJlbmNlczpcbiAqICAtIGh0dHBzOi8vZ2l0aHViLmNvbS9WYWRpbURlei9uZzItZmlsdGVyLXBpcGVcbiAqICAtIGh0dHBzOi8vYW5ndWxhci5pby9kb2NzL3RzL2xhdGVzdC9ndWlkZS9waXBlcy5odG1sXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBbKG5nTW9kZWwpXT1cInN0cmluZ0ZpbHRlclwiPlxuICogICAgPHVsPlxuICogICAgICA8bGkgKm5nRm9yPVwibGV0IGl0ZW0gb2YgYXJyYXkgfCBmaWx0ZXJCeTogc3RyaW5nRmlsdGVyXCI+XG4gKiAgICAgICAge3sgaXRlbSB9fVxuICogICAgICA8L2xpPlxuICogICAgPC91bD5cbiAqXG4gKi9cbkBQaXBlKHtcbiAgbmFtZTogJ2ZpbHRlckJ5JyxcbiAgcHVyZTogZmFsc2Vcbn0pXG5leHBvcnQgY2xhc3MgRmlsdGVyUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0oYXJyYXk6IGFueVtdLCBmaWx0ZXI6IGFueSk6IGFueVtdIHtcbiAgICBpZiAodHlwZW9mIGZpbHRlciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmIChpc051bWJlcihmaWx0ZXIpKSB7XG4gICAgICAgIHJldHVybiBhcnJheS5maWx0ZXIoZmlsdGVyRGVmYXVsdChmaWx0ZXIpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFycmF5LmZpbHRlcihmaWx0ZXJCeVN0cmluZyhmaWx0ZXIpKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGZpbHRlciA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBhcnJheS5maWx0ZXIoZmlsdGVyQnlPYmplY3QoZmlsdGVyKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFycmF5LmZpbHRlcihmaWx0ZXJEZWZhdWx0KGZpbHRlcikpO1xuICB9XG59XG4iXX0=