import { ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';
import { PlacementTypes, AlignmentTypes } from '../../utils/position';
import { ShowTypes } from './show-types.enum';
import { StyleTypes } from './style-types.enum';
import { TooltipService } from './tooltip.service';
export declare class TooltipDirective implements OnDestroy {
    private readonly ngZone;
    private readonly tooltipService;
    private readonly viewContainerRef;
    private readonly renderer;
    private readonly element;
    tooltipCssClass: string;
    tooltipTitle: string;
    tooltipPlacement: PlacementTypes;
    tooltipAlignment: AlignmentTypes;
    tooltipType: StyleTypes;
    tooltipTemplate: TemplateRef<any>;
    tooltipShowEvent: ShowTypes;
    tooltipContext: any;
    tooltipSpacing: number;
    tooltipDisabled: boolean;
    tooltipShowCaret: boolean;
    tooltipCloseOnClickOutside: boolean;
    tooltipCloseOnMouseLeave: boolean;
    tooltipHideTimeout: number;
    tooltipShowTimeout: number;
    show: EventEmitter<boolean>;
    hide: EventEmitter<boolean>;
    private _tooltipSpacing;
    private _tooltipDisabled;
    private _tooltipShowCaret;
    private _tooltipCloseOnClickOutside;
    private _tooltipCloseOnMouseLeave;
    private _tooltipHideTimeout;
    private _tooltipShowTimeout;
    private readonly listensForFocus;
    private readonly listensForHover;
    private component;
    private timeout;
    private mouseLeaveContentEvent;
    private mouseEnterContentEvent;
    private documentClickEvent;
    constructor(ngZone: NgZone, tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2, element: ElementRef<HTMLElement>);
    ngOnDestroy(): void;
    onFocus(): void;
    onBlur(): void;
    onMouseEnter(): void;
    onMouseLeave(target: HTMLElement): void;
    onMouseClick(): void;
    showTooltip(immediate?: boolean): void;
    hideTooltip(immediate?: boolean): void;
    addHideListeners(tooltip: HTMLElement): void;
    private createBoundOptions;
}
