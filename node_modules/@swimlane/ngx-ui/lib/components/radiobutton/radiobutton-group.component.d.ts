import { EventEmitter, QueryList, OnDestroy, AfterContentInit, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { RadioButtonComponent } from './radiobutton.component';
export declare class RadioButtonGroupComponent implements ControlValueAccessor, OnDestroy, AfterContentInit {
    private readonly _cdr;
    readonly UNIQUE_ID: string;
    id: string;
    disabled: boolean;
    value: any;
    name: string;
    change: EventEmitter<boolean>;
    blur: EventEmitter<Event>;
    focus: EventEmitter<FocusEvent>;
    readonly _radios: QueryList<RadioButtonComponent>;
    readonly selected: RadioButtonComponent;
    private _name;
    private _value;
    private _selected;
    private _disabled;
    private _destroy$;
    constructor(_cdr: ChangeDetectorRef);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    subscribeToRadios(): void;
    onRadioSelected(value: string): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onChangeCallback(_: any): void;
    onTouchedCallback(): void;
    private _updateRadioButtonNames;
    private _updateSelectedRadioFromValue;
    private _updateRadioDisabledState;
}
