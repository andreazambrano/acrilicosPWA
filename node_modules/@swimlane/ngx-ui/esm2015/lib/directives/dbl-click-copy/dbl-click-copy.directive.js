import { __decorate, __metadata } from "tslib";
import { Directive, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
// tslint:disable-next-line:directive-selector
let DblClickCopyDirective = class DblClickCopyDirective {
    constructor(element) {
        this.element = element;
        this.onCopy = new EventEmitter();
    }
    onDblClick() {
        const selection = getSelection();
        const range = document.createRange();
        range.selectNodeContents(this.element.nativeElement);
        selection.removeAllRanges();
        selection.addRange(range);
        document.execCommand('copy');
        this.onCopy.emit(range);
    }
};
DblClickCopyDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Output(),
    __metadata("design:type", Object)
], DblClickCopyDirective.prototype, "onCopy", void 0);
__decorate([
    HostListener('dblclick'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], DblClickCopyDirective.prototype, "onDblClick", null);
DblClickCopyDirective = __decorate([
    Directive({
        selector: '[dbl-click-copy]',
        host: {
            title: 'Double click to copy to clipboard'
        }
    }),
    __metadata("design:paramtypes", [ElementRef])
], DblClickCopyDirective);
export { DblClickCopyDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJsLWNsaWNrLWNvcHkuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3aW1sYW5lL25neC11aS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2RibC1jbGljay1jb3B5L2RibC1jbGljay1jb3B5LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUYsOENBQThDO0FBTzlDLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0lBR2hDLFlBQTZCLE9BQWdDO1FBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXlCO1FBRm5ELFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBUyxDQUFDO0lBRW1CLENBQUM7SUFHakUsVUFBVTtRQUNSLE1BQU0sU0FBUyxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQ2pDLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUVyQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNyRCxTQUFTLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDNUIsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTdCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUM7Q0FDRixDQUFBOztZQWR1QyxVQUFVOztBQUZ0QztJQUFULE1BQU0sRUFBRTs7cURBQW9DO0FBSzdDO0lBREMsWUFBWSxDQUFDLFVBQVUsQ0FBQzs7Ozt1REFXeEI7QUFoQlUscUJBQXFCO0lBTmpDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxrQkFBa0I7UUFDNUIsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLG1DQUFtQztTQUMzQztLQUNGLENBQUM7cUNBSXNDLFVBQVU7R0FIckMscUJBQXFCLENBaUJqQztTQWpCWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2RibC1jbGljay1jb3B5XScsXG4gIGhvc3Q6IHtcbiAgICB0aXRsZTogJ0RvdWJsZSBjbGljayB0byBjb3B5IHRvIGNsaXBib2FyZCdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBEYmxDbGlja0NvcHlEaXJlY3RpdmUge1xuICBAT3V0cHV0KCkgb25Db3B5ID0gbmV3IEV2ZW50RW1pdHRlcjxSYW5nZT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnQ6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+KSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RibGNsaWNrJylcbiAgb25EYmxDbGljaygpOiB2b2lkIHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBnZXRTZWxlY3Rpb24oKTtcbiAgICBjb25zdCByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG5cbiAgICByYW5nZS5zZWxlY3ROb2RlQ29udGVudHModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICAgIHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICBzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG5cbiAgICB0aGlzLm9uQ29weS5lbWl0KHJhbmdlKTtcbiAgfVxufVxuIl19