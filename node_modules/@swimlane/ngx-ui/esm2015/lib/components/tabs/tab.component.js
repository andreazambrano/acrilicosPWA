import { __decorate, __metadata } from "tslib";
import { Component, Input, TemplateRef, ContentChild, ElementRef, Renderer2, OnInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { IfTabActiveDirective } from './if-tab-active.directive';
/**
 * TODO: Remove hidden when https://github.com/angular/angular/issues/18310 is resolved
 */
let TabComponent = class TabComponent {
    constructor(cdr, renderer, elRef) {
        this.cdr = cdr;
        this.renderer = renderer;
        this.elRef = elRef;
        this.title = '';
        this.label = '';
        this.active = false;
        this.disabled = false;
    }
    ngOnInit() {
        // backwards compatibility
        if (this.title) {
            this.label = this.title;
            this.renderer.removeAttribute(this.elRef.nativeElement, 'title');
        }
        this.labelTemplate = typeof this.label === 'string' ? this.labelStringTemplate : this.label;
    }
    detectChanges() {
        this.cdr.detectChanges();
    }
};
TabComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], TabComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TabComponent.prototype, "label", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TabComponent.prototype, "active", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TabComponent.prototype, "disabled", void 0);
__decorate([
    ViewChild('labelIsStringTmpl', { static: true }),
    __metadata("design:type", Object)
], TabComponent.prototype, "labelStringTemplate", void 0);
__decorate([
    ContentChild(IfTabActiveDirective),
    __metadata("design:type", IfTabActiveDirective)
], TabComponent.prototype, "template", void 0);
TabComponent = __decorate([
    Component({
        selector: 'ngx-tab',
        template: "<div *ngIf=\"template; then template_container; else content_container\"></div>\n<ng-template #template_container>\n  <div *ngIf=\"active\">\n    <ng-container [ngTemplateOutlet]=\"template.templateRef\"></ng-container>\n  </div>\n</ng-template>\n<ng-template #content_container>\n  <div [hidden]=\"!active\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n<ng-template #labelIsStringTmpl>{{ label }}</ng-template>\n",
        host: {
            class: 'ngx-tab'
        },
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    __metadata("design:paramtypes", [ChangeDetectorRef, Renderer2, ElementRef])
], TabComponent);
export { TabComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJzL3RhYi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFdBQVcsRUFDWCxZQUFZLEVBQ1osVUFBVSxFQUNWLFNBQVMsRUFDVCxNQUFNLEVBQ04sU0FBUyxFQUNULHVCQUF1QixFQUN2QixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFakU7O0dBRUc7QUFTSCxJQUFhLFlBQVksR0FBekIsTUFBYSxZQUFZO0lBU3ZCLFlBQW9CLEdBQXNCLEVBQVUsUUFBbUIsRUFBVSxLQUFpQjtRQUE5RSxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFBVSxVQUFLLEdBQUwsS0FBSyxDQUFZO1FBUnpGLFVBQUssR0FBVyxFQUFFLENBQUM7UUFDbkIsVUFBSyxHQUE4QixFQUFFLENBQUM7UUFDdEMsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLGFBQVEsR0FBRyxLQUFLLENBQUM7SUFLMkUsQ0FBQztJQUV0RyxRQUFRO1FBQ04sMEJBQTBCO1FBQzFCLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUNsRTtRQUVELElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzlGLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUMzQixDQUFDO0NBQ0YsQ0FBQTs7WUFmMEIsaUJBQWlCO1lBQW9CLFNBQVM7WUFBaUIsVUFBVTs7QUFSekY7SUFBUixLQUFLLEVBQUU7OzJDQUFvQjtBQUNuQjtJQUFSLEtBQUssRUFBRTs7MkNBQXVDO0FBQ3RDO0lBQVIsS0FBSyxFQUFFOzs0Q0FBZ0I7QUFDZjtJQUFSLEtBQUssRUFBRTs7OENBQWtCO0FBQ3dCO0lBQWpELFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs7eURBQXFCO0FBQ2xDO0lBQW5DLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQzs4QkFBVyxvQkFBb0I7OENBQUM7QUFOeEQsWUFBWTtJQVJ4QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsU0FBUztRQUNuQix1YkFBbUM7UUFDbkMsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFNBQVM7U0FDakI7UUFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO3FDQVV5QixpQkFBaUIsRUFBb0IsU0FBUyxFQUFpQixVQUFVO0dBVHZGLFlBQVksQ0F3QnhCO1NBeEJZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBUZW1wbGF0ZVJlZixcbiAgQ29udGVudENoaWxkLFxuICBFbGVtZW50UmVmLFxuICBSZW5kZXJlcjIsXG4gIE9uSW5pdCxcbiAgVmlld0NoaWxkLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZlRhYkFjdGl2ZURpcmVjdGl2ZSB9IGZyb20gJy4vaWYtdGFiLWFjdGl2ZS5kaXJlY3RpdmUnO1xuXG4vKipcbiAqIFRPRE86IFJlbW92ZSBoaWRkZW4gd2hlbiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xODMxMCBpcyByZXNvbHZlZFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtdGFiJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYi5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25neC10YWInXG4gIH0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFRhYkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmcgPSAnJztcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4gPSAnJztcbiAgQElucHV0KCkgYWN0aXZlID0gZmFsc2U7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIEBWaWV3Q2hpbGQoJ2xhYmVsSXNTdHJpbmdUbXBsJywgeyBzdGF0aWM6IHRydWUgfSkgbGFiZWxTdHJpbmdUZW1wbGF0ZTtcbiAgQENvbnRlbnRDaGlsZChJZlRhYkFjdGl2ZURpcmVjdGl2ZSkgdGVtcGxhdGU6IElmVGFiQWN0aXZlRGlyZWN0aXZlO1xuICBsYWJlbFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLCBwcml2YXRlIGVsUmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgaWYgKHRoaXMudGl0bGUpIHtcbiAgICAgIHRoaXMubGFiZWwgPSB0aGlzLnRpdGxlO1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVBdHRyaWJ1dGUodGhpcy5lbFJlZi5uYXRpdmVFbGVtZW50LCAndGl0bGUnKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhYmVsVGVtcGxhdGUgPSB0eXBlb2YgdGhpcy5sYWJlbCA9PT0gJ3N0cmluZycgPyB0aGlzLmxhYmVsU3RyaW5nVGVtcGxhdGUgOiB0aGlzLmxhYmVsO1xuICB9XG5cbiAgZGV0ZWN0Q2hhbmdlcygpIHtcbiAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn1cbiJdfQ==