import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DragDropModule } from '@angular/cdk/drag-drop';
import { PipesModule } from '../../pipes/pipes.module';
import { InputModule } from '../input/input.module';
import { ButtonModule } from '../button/button.module';
import { TooltipModule } from '../tooltip/tooltip.module';
import { DropdownModule } from '../dropdown/dropdown.module';
import { CodeEditorModule } from '../code-editor/code-editor.module';
import { IconModule } from '../icon/icon.module';
import { TabsModule } from '../tabs/tabs.module';
import { ToggleModule } from '../toggle/toggle.module';
import { CheckboxModule } from '../checkbox/checkbox.module';
import { SelectModule } from '../select/select.module';
import { SchemaValidatorService } from './schema-validator.service';
import { JsonEditorComponent } from './json-editor/json-editor.component';
import { JsonEditorNodeComponent } from './json-editor/json-editor-node/json-editor-node.component';
import { ObjectNodeComponent } from './json-editor/json-editor-node/node-types/object-node/object-node.component';
import { ArrayNodeComponent } from './json-editor/json-editor-node/node-types/array-node/array-node.component';
import { JsonEditorFlatComponent } from './json-editor-flat/json-editor-flat.component';
import { JsonEditorNodeFlatComponent } from './json-editor-flat/json-editor-node-flat/json-editor-node-flat.component';
import { ArrayNodeFlatComponent } from './json-editor-flat/json-editor-node-flat/node-types/array-node-flat/array-node-flat.component';
import { ObjectNodeFlatComponent } from './json-editor-flat/json-editor-node-flat/node-types/object-node-flat/object-node-flat.component';
import { PropertyConfigComponent } from './json-editor-flat/json-editor-node-flat/node-types/property-config/property-config.component';
import { OrderableInputsListComponent } from './json-editor-flat/orderable-inputs-list/orderable-inputs-list.component';
import { ObjectValuesPipe } from './object-values.pipe';
let JsonEditorModule = class JsonEditorModule {
};
JsonEditorModule = __decorate([
    NgModule({
        declarations: [
            JsonEditorComponent,
            JsonEditorNodeComponent,
            ObjectNodeComponent,
            ArrayNodeComponent,
            JsonEditorFlatComponent,
            JsonEditorNodeFlatComponent,
            ArrayNodeFlatComponent,
            ObjectNodeFlatComponent,
            PropertyConfigComponent,
            OrderableInputsListComponent,
            ObjectValuesPipe
        ],
        exports: [
            JsonEditorComponent,
            JsonEditorNodeComponent,
            ObjectNodeComponent,
            ArrayNodeComponent,
            JsonEditorFlatComponent,
            JsonEditorNodeFlatComponent,
            ArrayNodeFlatComponent,
            ObjectNodeFlatComponent,
            PropertyConfigComponent
        ],
        imports: [
            CheckboxModule,
            CommonModule,
            DragDropModule,
            FormsModule,
            PipesModule,
            InputModule,
            ButtonModule,
            CodeEditorModule,
            TooltipModule,
            DropdownModule,
            IconModule,
            ToggleModule,
            SelectModule,
            TabsModule
        ],
        providers: [SchemaValidatorService]
    })
], JsonEditorModule);
export { JsonEditorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi1lZGl0b3IubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3aW1sYW5lL25neC11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2pzb24tZWRpdG9yL2pzb24tZWRpdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFcEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMkRBQTJELENBQUM7QUFDcEcsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNkVBQTZFLENBQUM7QUFDbEgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMkVBQTJFLENBQUM7QUFFL0csT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDeEYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDdkgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sK0ZBQStGLENBQUM7QUFDdkksT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0saUdBQWlHLENBQUM7QUFDMUksT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0ZBQStGLENBQUM7QUFDeEksT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDeEgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUE2Q3hELElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0NBQUcsQ0FBQTtBQUFuQixnQkFBZ0I7SUEzQzVCLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRTtZQUNaLG1CQUFtQjtZQUNuQix1QkFBdUI7WUFDdkIsbUJBQW1CO1lBQ25CLGtCQUFrQjtZQUNsQix1QkFBdUI7WUFDdkIsMkJBQTJCO1lBQzNCLHNCQUFzQjtZQUN0Qix1QkFBdUI7WUFDdkIsdUJBQXVCO1lBQ3ZCLDRCQUE0QjtZQUM1QixnQkFBZ0I7U0FDakI7UUFDRCxPQUFPLEVBQUU7WUFDUCxtQkFBbUI7WUFDbkIsdUJBQXVCO1lBQ3ZCLG1CQUFtQjtZQUNuQixrQkFBa0I7WUFDbEIsdUJBQXVCO1lBQ3ZCLDJCQUEyQjtZQUMzQixzQkFBc0I7WUFDdEIsdUJBQXVCO1lBQ3ZCLHVCQUF1QjtTQUN4QjtRQUNELE9BQU8sRUFBRTtZQUNQLGNBQWM7WUFDZCxZQUFZO1lBQ1osY0FBYztZQUNkLFdBQVc7WUFDWCxXQUFXO1lBQ1gsV0FBVztZQUNYLFlBQVk7WUFDWixnQkFBZ0I7WUFDaEIsYUFBYTtZQUNiLGNBQWM7WUFDZCxVQUFVO1lBQ1YsWUFBWTtZQUNaLFlBQVk7WUFDWixVQUFVO1NBQ1g7UUFDRCxTQUFTLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztLQUNwQyxDQUFDO0dBQ1csZ0JBQWdCLENBQUc7U0FBbkIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERyYWdEcm9wTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RyYWctZHJvcCc7XG5cbmltcG9ydCB7IFBpcGVzTW9kdWxlIH0gZnJvbSAnLi4vLi4vcGlwZXMvcGlwZXMubW9kdWxlJztcbmltcG9ydCB7IElucHV0TW9kdWxlIH0gZnJvbSAnLi4vaW5wdXQvaW5wdXQubW9kdWxlJztcbmltcG9ydCB7IEJ1dHRvbk1vZHVsZSB9IGZyb20gJy4uL2J1dHRvbi9idXR0b24ubW9kdWxlJztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICcuLi90b29sdGlwL3Rvb2x0aXAubW9kdWxlJztcbmltcG9ydCB7IERyb3Bkb3duTW9kdWxlIH0gZnJvbSAnLi4vZHJvcGRvd24vZHJvcGRvd24ubW9kdWxlJztcbmltcG9ydCB7IENvZGVFZGl0b3JNb2R1bGUgfSBmcm9tICcuLi9jb2RlLWVkaXRvci9jb2RlLWVkaXRvci5tb2R1bGUnO1xuaW1wb3J0IHsgSWNvbk1vZHVsZSB9IGZyb20gJy4uL2ljb24vaWNvbi5tb2R1bGUnO1xuaW1wb3J0IHsgVGFic01vZHVsZSB9IGZyb20gJy4uL3RhYnMvdGFicy5tb2R1bGUnO1xuaW1wb3J0IHsgVG9nZ2xlTW9kdWxlIH0gZnJvbSAnLi4vdG9nZ2xlL3RvZ2dsZS5tb2R1bGUnO1xuaW1wb3J0IHsgQ2hlY2tib3hNb2R1bGUgfSBmcm9tICcuLi9jaGVja2JveC9jaGVja2JveC5tb2R1bGUnO1xuaW1wb3J0IHsgU2VsZWN0TW9kdWxlIH0gZnJvbSAnLi4vc2VsZWN0L3NlbGVjdC5tb2R1bGUnO1xuaW1wb3J0IHsgU2NoZW1hVmFsaWRhdG9yU2VydmljZSB9IGZyb20gJy4vc2NoZW1hLXZhbGlkYXRvci5zZXJ2aWNlJztcblxuaW1wb3J0IHsgSnNvbkVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vanNvbi1lZGl0b3IvanNvbi1lZGl0b3IuY29tcG9uZW50JztcbmltcG9ydCB7IEpzb25FZGl0b3JOb2RlQ29tcG9uZW50IH0gZnJvbSAnLi9qc29uLWVkaXRvci9qc29uLWVkaXRvci1ub2RlL2pzb24tZWRpdG9yLW5vZGUuY29tcG9uZW50JztcbmltcG9ydCB7IE9iamVjdE5vZGVDb21wb25lbnQgfSBmcm9tICcuL2pzb24tZWRpdG9yL2pzb24tZWRpdG9yLW5vZGUvbm9kZS10eXBlcy9vYmplY3Qtbm9kZS9vYmplY3Qtbm9kZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXJyYXlOb2RlQ29tcG9uZW50IH0gZnJvbSAnLi9qc29uLWVkaXRvci9qc29uLWVkaXRvci1ub2RlL25vZGUtdHlwZXMvYXJyYXktbm9kZS9hcnJheS1ub2RlLmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IEpzb25FZGl0b3JGbGF0Q29tcG9uZW50IH0gZnJvbSAnLi9qc29uLWVkaXRvci1mbGF0L2pzb24tZWRpdG9yLWZsYXQuY29tcG9uZW50JztcbmltcG9ydCB7IEpzb25FZGl0b3JOb2RlRmxhdENvbXBvbmVudCB9IGZyb20gJy4vanNvbi1lZGl0b3ItZmxhdC9qc29uLWVkaXRvci1ub2RlLWZsYXQvanNvbi1lZGl0b3Itbm9kZS1mbGF0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcnJheU5vZGVGbGF0Q29tcG9uZW50IH0gZnJvbSAnLi9qc29uLWVkaXRvci1mbGF0L2pzb24tZWRpdG9yLW5vZGUtZmxhdC9ub2RlLXR5cGVzL2FycmF5LW5vZGUtZmxhdC9hcnJheS1ub2RlLWZsYXQuY29tcG9uZW50JztcbmltcG9ydCB7IE9iamVjdE5vZGVGbGF0Q29tcG9uZW50IH0gZnJvbSAnLi9qc29uLWVkaXRvci1mbGF0L2pzb24tZWRpdG9yLW5vZGUtZmxhdC9ub2RlLXR5cGVzL29iamVjdC1ub2RlLWZsYXQvb2JqZWN0LW5vZGUtZmxhdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvcGVydHlDb25maWdDb21wb25lbnQgfSBmcm9tICcuL2pzb24tZWRpdG9yLWZsYXQvanNvbi1lZGl0b3Itbm9kZS1mbGF0L25vZGUtdHlwZXMvcHJvcGVydHktY29uZmlnL3Byb3BlcnR5LWNvbmZpZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3JkZXJhYmxlSW5wdXRzTGlzdENvbXBvbmVudCB9IGZyb20gJy4vanNvbi1lZGl0b3ItZmxhdC9vcmRlcmFibGUtaW5wdXRzLWxpc3Qvb3JkZXJhYmxlLWlucHV0cy1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPYmplY3RWYWx1ZXNQaXBlIH0gZnJvbSAnLi9vYmplY3QtdmFsdWVzLnBpcGUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBKc29uRWRpdG9yQ29tcG9uZW50LFxuICAgIEpzb25FZGl0b3JOb2RlQ29tcG9uZW50LFxuICAgIE9iamVjdE5vZGVDb21wb25lbnQsXG4gICAgQXJyYXlOb2RlQ29tcG9uZW50LFxuICAgIEpzb25FZGl0b3JGbGF0Q29tcG9uZW50LFxuICAgIEpzb25FZGl0b3JOb2RlRmxhdENvbXBvbmVudCxcbiAgICBBcnJheU5vZGVGbGF0Q29tcG9uZW50LFxuICAgIE9iamVjdE5vZGVGbGF0Q29tcG9uZW50LFxuICAgIFByb3BlcnR5Q29uZmlnQ29tcG9uZW50LFxuICAgIE9yZGVyYWJsZUlucHV0c0xpc3RDb21wb25lbnQsXG4gICAgT2JqZWN0VmFsdWVzUGlwZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgSnNvbkVkaXRvckNvbXBvbmVudCxcbiAgICBKc29uRWRpdG9yTm9kZUNvbXBvbmVudCxcbiAgICBPYmplY3ROb2RlQ29tcG9uZW50LFxuICAgIEFycmF5Tm9kZUNvbXBvbmVudCxcbiAgICBKc29uRWRpdG9yRmxhdENvbXBvbmVudCxcbiAgICBKc29uRWRpdG9yTm9kZUZsYXRDb21wb25lbnQsXG4gICAgQXJyYXlOb2RlRmxhdENvbXBvbmVudCxcbiAgICBPYmplY3ROb2RlRmxhdENvbXBvbmVudCxcbiAgICBQcm9wZXJ0eUNvbmZpZ0NvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ2hlY2tib3hNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIERyYWdEcm9wTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFBpcGVzTW9kdWxlLFxuICAgIElucHV0TW9kdWxlLFxuICAgIEJ1dHRvbk1vZHVsZSxcbiAgICBDb2RlRWRpdG9yTW9kdWxlLFxuICAgIFRvb2x0aXBNb2R1bGUsXG4gICAgRHJvcGRvd25Nb2R1bGUsXG4gICAgSWNvbk1vZHVsZSxcbiAgICBUb2dnbGVNb2R1bGUsXG4gICAgU2VsZWN0TW9kdWxlLFxuICAgIFRhYnNNb2R1bGVcbiAgXSxcbiAgcHJvdmlkZXJzOiBbU2NoZW1hVmFsaWRhdG9yU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgSnNvbkVkaXRvck1vZHVsZSB7fVxuIl19