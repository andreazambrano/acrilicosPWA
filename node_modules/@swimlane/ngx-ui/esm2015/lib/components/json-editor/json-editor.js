import { __decorate, __metadata } from "tslib";
import { Input, Output, EventEmitter } from '@angular/core';
export class JsonEditor {
    constructor(schemaValidatorService) {
        this.schemaValidatorService = schemaValidatorService;
        this.modelChange = new EventEmitter();
        this.schemaChange = new EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes.schema) {
            this.schema = JSON.parse(JSON.stringify(this.schema));
        }
        if (!this.schema) {
            this.schema = {
                type: 'object'
            };
        }
        if (!this.schema.type) {
            this.schema.type = 'object';
        }
    }
    /**
     * Model change callback. Validates the model and emits a change event
     * @param model
     */
    modelChangedCallback(model) {
        this.validate(this.schema, model);
        this.modelChange.emit(model);
    }
    /**
     * Validates the model based on the schema
     * @param schema
     * @param model
     */
    validate(schema, model) {
        this.errors = this.schemaValidator
            ? this.schemaValidator(schema, model)
            : this.schemaValidatorService.validate(schema, model);
        return this.errors && this.errors.length > 0;
    }
}
__decorate([
    Input(),
    __metadata("design:type", Object)
], JsonEditor.prototype, "model", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], JsonEditor.prototype, "schema", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JsonEditor.prototype, "label", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], JsonEditor.prototype, "typeCheckOverrides", void 0);
__decorate([
    Input(),
    __metadata("design:type", Function)
], JsonEditor.prototype, "schemaValidator", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], JsonEditor.prototype, "modelChange", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], JsonEditor.prototype, "schemaChange", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi1lZGl0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac3dpbWxhbmUvbmd4LXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvanNvbi1lZGl0b3IvanNvbi1lZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFJdEYsTUFBTSxPQUFPLFVBQVU7SUFpQnJCLFlBQXNCLHNCQUE4QztRQUE5QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBTjFELGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFFcEQsaUJBQVksR0FBbUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUlMLENBQUM7SUFFeEUsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUNsQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUN2RDtRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUc7Z0JBQ1osSUFBSSxFQUFFLFFBQVE7YUFDZixDQUFDO1NBQ0g7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1NBQzdCO0lBQ0gsQ0FBQztJQUVEOzs7T0FHRztJQUNILG9CQUFvQixDQUFDLEtBQVU7UUFDN0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsUUFBUSxDQUFDLE1BQVcsRUFBRSxLQUFVO1FBQzlCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWU7WUFDaEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQztZQUNyQyxDQUFDLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEQsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBQ0Y7QUF0RFU7SUFBUixLQUFLLEVBQUU7O3lDQUFZO0FBRVg7SUFBUixLQUFLLEVBQUU7OzBDQUEwQjtBQUV6QjtJQUFSLEtBQUssRUFBRTs7eUNBQWU7QUFFZDtJQUFSLEtBQUssRUFBRTs7c0RBQTBCO0FBRXpCO0lBQVIsS0FBSyxFQUFFOzttREFBMEQ7QUFFeEQ7SUFBVCxNQUFNLEVBQUU7OEJBQWMsWUFBWTsrQ0FBMkI7QUFFcEQ7SUFBVCxNQUFNLEVBQUU7OEJBQWUsWUFBWTtnREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2NoZW1hVmFsaWRhdG9yU2VydmljZSB9IGZyb20gJy4vc2NoZW1hLXZhbGlkYXRvci5zZXJ2aWNlJztcbmltcG9ydCB7IEpTT05FZGl0b3JTY2hlbWEgfSBmcm9tICcuL2pzb24tZWRpdG9yLmhlbHBlcic7XG5cbmV4cG9ydCBjbGFzcyBKc29uRWRpdG9yIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgbW9kZWw6IGFueTtcblxuICBASW5wdXQoKSBzY2hlbWE6IEpTT05FZGl0b3JTY2hlbWE7XG5cbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcblxuICBASW5wdXQoKSB0eXBlQ2hlY2tPdmVycmlkZXM/OiBhbnk7XG5cbiAgQElucHV0KCkgc2NoZW1hVmFsaWRhdG9yPzogKHNjaGVtYTogYW55LCAuLi5hcmdzOiBhbnlbXSkgPT4gYW55W107XG5cbiAgQE91dHB1dCgpIG1vZGVsQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAT3V0cHV0KCkgc2NoZW1hQ2hhbmdlOiBFdmVudEVtaXR0ZXI8SlNPTkVkaXRvclNjaGVtYT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZXJyb3JzOiBhbnlbXTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2NoZW1hVmFsaWRhdG9yU2VydmljZTogU2NoZW1hVmFsaWRhdG9yU2VydmljZSkge31cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMuc2NoZW1hKSB7XG4gICAgICB0aGlzLnNjaGVtYSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zY2hlbWEpKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuc2NoZW1hKSB7XG4gICAgICB0aGlzLnNjaGVtYSA9IHtcbiAgICAgICAgdHlwZTogJ29iamVjdCdcbiAgICAgIH07XG4gICAgfVxuICAgIGlmICghdGhpcy5zY2hlbWEudHlwZSkge1xuICAgICAgdGhpcy5zY2hlbWEudHlwZSA9ICdvYmplY3QnO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBNb2RlbCBjaGFuZ2UgY2FsbGJhY2suIFZhbGlkYXRlcyB0aGUgbW9kZWwgYW5kIGVtaXRzIGEgY2hhbmdlIGV2ZW50XG4gICAqIEBwYXJhbSBtb2RlbFxuICAgKi9cbiAgbW9kZWxDaGFuZ2VkQ2FsbGJhY2sobW9kZWw6IGFueSkge1xuICAgIHRoaXMudmFsaWRhdGUodGhpcy5zY2hlbWEsIG1vZGVsKTtcbiAgICB0aGlzLm1vZGVsQ2hhbmdlLmVtaXQobW9kZWwpO1xuICB9XG5cbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGUgbW9kZWwgYmFzZWQgb24gdGhlIHNjaGVtYVxuICAgKiBAcGFyYW0gc2NoZW1hXG4gICAqIEBwYXJhbSBtb2RlbFxuICAgKi9cbiAgdmFsaWRhdGUoc2NoZW1hOiBhbnksIG1vZGVsOiBhbnkpOiBib29sZWFuIHtcbiAgICB0aGlzLmVycm9ycyA9IHRoaXMuc2NoZW1hVmFsaWRhdG9yXG4gICAgICA/IHRoaXMuc2NoZW1hVmFsaWRhdG9yKHNjaGVtYSwgbW9kZWwpXG4gICAgICA6IHRoaXMuc2NoZW1hVmFsaWRhdG9yU2VydmljZS52YWxpZGF0ZShzY2hlbWEsIG1vZGVsKTtcblxuICAgIHJldHVybiB0aGlzLmVycm9ycyAmJiB0aGlzLmVycm9ycy5sZW5ndGggPiAwO1xuICB9XG59XG4iXX0=