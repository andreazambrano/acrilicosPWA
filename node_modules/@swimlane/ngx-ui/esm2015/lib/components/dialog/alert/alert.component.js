import { __decorate, __metadata } from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { DialogComponent } from '../dialog.component';
import { AlertTypes } from './alert-types.enum';
let AlertComponent = class AlertComponent extends DialogComponent {
    constructor() {
        super(...arguments);
        this.data = '';
        this.ok = new EventEmitter();
        this.cancel = new EventEmitter();
        this.AlertTypes = AlertTypes;
        this.defaults = {
            inputs: {
                zIndex: 991,
                closeOnBlur: false,
                closeOnEscape: false,
                closeButton: false,
                showOverlay: true,
                visible: true,
                class: ''
            }
        };
    }
    get longPress() {
        return this._longPress;
    }
    set longPress(longPress) {
        this._longPress = coerceBooleanProperty(longPress);
    }
    ngOnInit() {
        if (this.longPress) {
            this.closeButton = true;
        }
    }
    ngAfterViewInit() {
        if (this.type !== AlertTypes.Prompt) {
            this.dialogElm.nativeElement.focus();
        }
    }
    onOkClick() {
        this.ok.emit({ data: this.data });
        this.hide();
    }
    onCancelClick() {
        this.cancel.emit({ data: this.data });
        this.hide();
    }
    onKeydown() {
        if (!this.longPress) {
            this.ok.emit({ data: this.data });
            this.hide();
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], AlertComponent.prototype, "type", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], AlertComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], AlertComponent.prototype, "longPress", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], AlertComponent.prototype, "ok", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], AlertComponent.prototype, "cancel", void 0);
__decorate([
    ViewChild('dialogContent', { static: true }),
    __metadata("design:type", ElementRef)
], AlertComponent.prototype, "dialogElm", void 0);
AlertComponent = __decorate([
    Component({
        exportAs: 'ngxAlertDialog',
        selector: 'ngx-alert-dialog',
        template: "<div class=\"ngx-dialog ngx-alert-dialog\" [style.zIndex]=\"zIndex\" [ngClass]=\"type\">\n  <div\n    class=\"ngx-dialog-content\"\n    [ngClass]=\"cssClass\"\n    [@visibilityTransition]=\"visibleState\"\n    [style.zIndex]=\"contentzIndex\"\n    #dialogContent\n    (keydown.escape)=\"onCancelClick()\"\n    (keydown.enter)=\"onKeydown()\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div class=\"ngx-dialog-header\" *ngIf=\"title || closeButton\">\n      <button *ngIf=\"closeButton\" type=\"button\" class=\"close\" (click)=\"hide()\">\n        <span class=\"icon-x\"></span>\n      </button>\n      <button\n        *ngIf=\"type === AlertTypes.Alert\"\n        type=\"button\"\n        class=\"btn close-button\"\n        (click)=\"onOkClick()\"\n      >\n        Ok\n      </button>\n      <h1 *ngIf=\"title\" [innerHTML]=\"title\"></h1>\n    </div>\n    <div *ngIf=\"content\" class=\"ngx-dialog-body\" [innerHTML]=\"content\"></div>\n\n    <div class=\"ngx-dialog-body\" *ngIf=\"type === AlertTypes.Prompt\">\n      <ngx-input type=\"text\" autofocus=\"true\" name=\"confirm_input\" [(ngModel)]=\"data\"> </ngx-input>\n    </div>\n\n    <div class=\"ngx-dialog-footer\" *ngIf=\"type !== AlertTypes.Alert\">\n      <ng-container *ngIf=\"!longPress\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onOkClick()\">\n          Ok\n        </button>\n        <button type=\"button\" class=\"btn\" (click)=\"onCancelClick()\">\n          Cancel\n        </button>\n      </ng-container>\n      <ngx-long-press-button *ngIf=\"longPress\" (longPress)=\"onOkClick()\" duration=\"1000\"></ngx-long-press-button>\n    </div>\n  </div>\n</div>\n",
        animations: [
            trigger('visibilityTransition', [
                state('active', style({
                    opacity: 1,
                    transform: 'scale3d(1, 1, 1)'
                })),
                transition('void => *', [
                    style({
                        opacity: 0,
                        transform: 'scale3d(1.2, 1.2, 1.2)'
                    }),
                    animate('0.2s ease-out')
                ]),
                transition('* => inactive', [
                    style({
                        opacity: 1,
                        transform: 'scale3d(1, 1, 1)'
                    }),
                    animate('0.2s ease-out', style({
                        transform: 'scale3d(0.9, 0.9, 1)',
                        opacity: 0
                    }))
                ])
            ])
        ],
        host: {
            tabindex: '-1'
        },
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [".ngx-dialog{position:fixed;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;top:0;left:0;height:100vh;width:100%;pointer-events:none}.ngx-dialog .ngx-dialog-content{pointer-events:auto;border-radius:2px;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12);background:#1c2029;padding:1.4rem;position:relative;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;min-width:250px;font-size:.9rem;color:#9c9c9c}.ngx-dialog .ngx-dialog-content .close{position:absolute;font-size:20px;color:#cfcfcf;right:-25px;top:-25px}.ngx-dialog .ngx-dialog-content .ngx-dialog-header .ngx-dialog-title,.ngx-dialog .ngx-dialog-content .ngx-dialog-header h1{font-size:1.8rem;font-weight:500;margin:0 0 1.4rem;color:#cfcfcf}.ngx-dialog .ngx-dialog-content .ngx-dialog-footer{text-align:right}.ngx-dialog .ngx-dialog-content .ngx-dialog-footer .btn{margin-left:5px}.ngx-dialog.wizard .ngx-dialog-content{padding:0;background:#2b3240}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-header{padding:1.4rem;background:#262c38}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-header h1{margin:0}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer{padding:1.4rem}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer .wizard-nav{float:left}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer .wizard-nav .btn{margin:0 5px 0 0}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs{margin-bottom:0}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list{padding:0 20px;background:#212631;border-bottom:2px solid #212631}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab{background:#212631}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab button{padding:.6em .75em;text-transform:uppercase}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab.active{background:#313847}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tab-content{padding:1.4rem 1.4rem 0}.ngx-dialog.ngx-dialog-full-screen{width:100vw;height:100%;overflow-y:scroll;position:fixed;top:0;bottom:0;left:0;right:0}.ngx-dialog.ngx-dialog-full-screen .ngx-dialog-content{box-shadow:none;width:100%;min-height:100vh}.ngx-dialog.ngx-dialog-full-screen .ngx-dialog-content button.close{color:#afb7c8;font-size:24px;opacity:1;top:56px;right:56px;text-shadow:none}@-webkit-keyframes anim-open{0%{opacity:0;-webkit-transform:scale3d(1.1,1.1,1);transform:scale3d(1.1,1.1,1)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes anim-open{0%{opacity:0;-webkit-transform:scale3d(1.1,1.1,1);transform:scale3d(1.1,1.1,1)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@-webkit-keyframes anim-close{0%{opacity:1}100%{opacity:0;-webkit-transform:scale3d(.9,.9,1);transform:scale3d(.9,.9,1)}}@keyframes anim-close{0%{opacity:1}100%{opacity:0;-webkit-transform:scale3d(.9,.9,1);transform:scale3d(.9,.9,1)}}", ".ngx-alert-dialog .ngx-dialog-content{padding:0;background:#2b3240}.ngx-alert-dialog .ngx-dialog-content .ngx-dialog-header{padding:1.4rem 2rem 0}.ngx-alert-dialog .ngx-dialog-content .ngx-dialog-header h1{font-size:18px;margin:0;color:#fff;font-weight:600}.ngx-alert-dialog .ngx-dialog-content .ngx-dialog-body{padding:.5rem 2rem;color:#909cb4}.ngx-alert-dialog .ngx-dialog-content .ngx-dialog-footer{padding:1.4rem 2rem}.ngx-alert-dialog.alert .ngx-dialog-content .ngx-dialog-header{padding:1.4rem 2rem;border-left:5px solid #1483ff;background:#262c38}.ngx-alert-dialog.alert .ngx-dialog-content .ngx-dialog-header .close-button{float:right;background:#1483ff;color:#fff}.ngx-alert-dialog.alert .ngx-dialog-content .ngx-dialog-body{padding:1.4rem 2rem}.ngx-alert-dialog.alert .ngx-dialog-content.ngx-alert-danger .ngx-dialog-header{border-left-color:#ff4514}.ngx-alert-dialog.alert .ngx-dialog-content.ngx-alert-danger .ngx-dialog-header .close-button{background:#ff4514;color:#fff}.ngx-alert-dialog.alert .ngx-dialog-content.ngx-alert-warning .ngx-dialog-header{border-left-color:#ffa814}.ngx-alert-dialog.alert .ngx-dialog-content.ngx-alert-warning .ngx-dialog-header .close-button{background:#ffa814;color:#1c2029}.ngx-alert-dialog.confirm,.ngx-alert-dialog.prompt{text-align:center}.ngx-alert-dialog.confirm .ngx-dialog-footer,.ngx-alert-dialog.prompt .ngx-dialog-footer{padding:.5rem 2rem 1.4rem;text-align:center}"]
    })
], AlertComponent);
export { AlertComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3aW1sYW5lL25neC11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2RpYWxvZy9hbGVydC9hbGVydC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakYsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLFVBQVUsRUFDVix1QkFBdUIsRUFFeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQTRDaEQsSUFBYSxjQUFjLEdBQTNCLE1BQWEsY0FBZSxTQUFRLGVBQWU7SUFBbkQ7O1FBRVcsU0FBSSxHQUFRLEVBQUUsQ0FBQztRQVVkLE9BQUUsR0FBRyxJQUFJLFlBQVksRUFBaUIsQ0FBQztRQUN2QyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQWlCLENBQUM7UUFLNUMsZUFBVSxHQUFHLFVBQVUsQ0FBQztRQUN4QixhQUFRLEdBQWtCO1lBQ2pDLE1BQU0sRUFBRTtnQkFDTixNQUFNLEVBQUUsR0FBRztnQkFDWCxXQUFXLEVBQUUsS0FBSztnQkFDbEIsYUFBYSxFQUFFLEtBQUs7Z0JBQ3BCLFdBQVcsRUFBRSxLQUFLO2dCQUNsQixXQUFXLEVBQUUsSUFBSTtnQkFDakIsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsS0FBSyxFQUFFLEVBQUU7YUFDVjtTQUNGLENBQUM7SUFnQ0osQ0FBQztJQXhEQyxJQUFJLFNBQVM7UUFDWCxP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bnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIEVsZW1lbnRSZWYsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBBZnRlclZpZXdJbml0XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcblxuaW1wb3J0IHsgRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vZGlhbG9nLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEaWFsb2dPcHRpb25zIH0gZnJvbSAnLi4vZGlhbG9nLW9wdGlvbnMuaW50ZXJmYWNlJztcbmltcG9ydCB7IEFsZXJ0VHlwZXMgfSBmcm9tICcuL2FsZXJ0LXR5cGVzLmVudW0nO1xuXG5AQ29tcG9uZW50KHtcbiAgZXhwb3J0QXM6ICduZ3hBbGVydERpYWxvZycsXG4gIHNlbGVjdG9yOiAnbmd4LWFsZXJ0LWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hbGVydC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuLi9kaWFsb2cuY29tcG9uZW50LnNjc3MnLCAnLi9hbGVydC5jb21wb25lbnQuc2NzcyddLFxuICBhbmltYXRpb25zOiBbXG4gICAgdHJpZ2dlcigndmlzaWJpbGl0eVRyYW5zaXRpb24nLCBbXG4gICAgICBzdGF0ZShcbiAgICAgICAgJ2FjdGl2ZScsXG4gICAgICAgIHN0eWxlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlM2QoMSwgMSwgMSknXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgdHJhbnNpdGlvbigndm9pZCA9PiAqJywgW1xuICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZTNkKDEuMiwgMS4yLCAxLjIpJ1xuICAgICAgICB9KSxcbiAgICAgICAgYW5pbWF0ZSgnMC4ycyBlYXNlLW91dCcpXG4gICAgICBdKSxcbiAgICAgIHRyYW5zaXRpb24oJyogPT4gaW5hY3RpdmUnLCBbXG4gICAgICAgIHN0eWxlKHtcbiAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlM2QoMSwgMSwgMSknXG4gICAgICAgIH0pLFxuICAgICAgICBhbmltYXRlKFxuICAgICAgICAgICcwLjJzIGVhc2Utb3V0JyxcbiAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZTNkKDAuOSwgMC45LCAxKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdKVxuICBdLFxuICBob3N0OiB7XG4gICAgdGFiaW5kZXg6ICctMSdcbiAgfSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgQWxlcnRDb21wb25lbnQgZXh0ZW5kcyBEaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQElucHV0KCkgdHlwZTogQWxlcnRUeXBlcztcbiAgQElucHV0KCkgZGF0YTogYW55ID0gJyc7XG5cbiAgQElucHV0KClcbiAgZ2V0IGxvbmdQcmVzcygpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9uZ1ByZXNzO1xuICB9XG4gIHNldCBsb25nUHJlc3MobG9uZ1ByZXNzKSB7XG4gICAgdGhpcy5fbG9uZ1ByZXNzID0gY29lcmNlQm9vbGVhblByb3BlcnR5KGxvbmdQcmVzcyk7XG4gIH1cblxuICBAT3V0cHV0KCkgb2sgPSBuZXcgRXZlbnRFbWl0dGVyPHsgZGF0YTogYW55IH0+KCk7XG4gIEBPdXRwdXQoKSBjYW5jZWwgPSBuZXcgRXZlbnRFbWl0dGVyPHsgZGF0YTogYW55IH0+KCk7XG5cbiAgQFZpZXdDaGlsZCgnZGlhbG9nQ29udGVudCcsIHsgc3RhdGljOiB0cnVlIH0pXG4gIHJlYWRvbmx5IGRpYWxvZ0VsbTogRWxlbWVudFJlZjxIVE1MRGl2RWxlbWVudD47XG5cbiAgcmVhZG9ubHkgQWxlcnRUeXBlcyA9IEFsZXJ0VHlwZXM7XG4gIHJlYWRvbmx5IGRlZmF1bHRzOiBEaWFsb2dPcHRpb25zID0ge1xuICAgIGlucHV0czoge1xuICAgICAgekluZGV4OiA5OTEsXG4gICAgICBjbG9zZU9uQmx1cjogZmFsc2UsXG4gICAgICBjbG9zZU9uRXNjYXBlOiBmYWxzZSxcbiAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZSxcbiAgICAgIHNob3dPdmVybGF5OiB0cnVlLFxuICAgICAgdmlzaWJsZTogdHJ1ZSxcbiAgICAgIGNsYXNzOiAnJ1xuICAgIH1cbiAgfTtcblxuICBwcml2YXRlIF9sb25nUHJlc3M/OiBib29sZWFuO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxvbmdQcmVzcykge1xuICAgICAgdGhpcy5jbG9zZUJ1dHRvbiA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnR5cGUgIT09IEFsZXJ0VHlwZXMuUHJvbXB0KSB7XG4gICAgICB0aGlzLmRpYWxvZ0VsbS5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxuICB9XG5cbiAgb25Pa0NsaWNrKCk6IHZvaWQge1xuICAgIHRoaXMub2suZW1pdCh7IGRhdGE6IHRoaXMuZGF0YSB9KTtcbiAgICB0aGlzLmhpZGUoKTtcbiAgfVxuXG4gIG9uQ2FuY2VsQ2xpY2soKTogdm9pZCB7XG4gICAgdGhpcy5jYW5jZWwuZW1pdCh7IGRhdGE6IHRoaXMuZGF0YSB9KTtcbiAgICB0aGlzLmhpZGUoKTtcbiAgfVxuXG4gIG9uS2V5ZG93bigpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubG9uZ1ByZXNzKSB7XG4gICAgICB0aGlzLm9rLmVtaXQoeyBkYXRhOiB0aGlzLmRhdGEgfSk7XG4gICAgICB0aGlzLmhpZGUoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==