import { __decorate, __metadata } from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewEncapsulation, Renderer2, TemplateRef, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
let DialogComponent = class DialogComponent {
    constructor(element, renderer2) {
        this.element = element;
        this.renderer2 = renderer2;
        this.open = new EventEmitter();
        this.close = new EventEmitter();
    }
    get closeOnBlur() {
        return this._closeOnBlur;
    }
    set closeOnBlur(closeOnBlur) {
        this._closeOnBlur = coerceBooleanProperty(closeOnBlur);
    }
    get closeOnEscape() {
        return this._closeOnEscape;
    }
    set closeOnEscape(closeOnEscape) {
        this._closeOnEscape = coerceBooleanProperty(closeOnEscape);
    }
    get closeButton() {
        return this._closeButton;
    }
    set closeButton(closeButton) {
        this._closeButton = coerceBooleanProperty(closeButton);
    }
    get visible() {
        return this._visible;
    }
    set visible(visible) {
        this._visible = coerceBooleanProperty(visible);
    }
    get zIndex() {
        return this._zIndex;
    }
    set zIndex(zIndex) {
        this._zIndex = coerceNumberProperty(zIndex);
    }
    get contentzIndex() {
        return this.zIndex + 1;
    }
    get visibleState() {
        return this.visible ? 'active' : 'inactive';
    }
    ngOnInit() {
        if (this.visible)
            this.show();
        // backwards compatibility
        if (this.title) {
            this.dialogTitle = this.title;
            this.renderer2.removeAttribute(this.element.nativeElement, 'title');
        }
    }
    ngOnDestroy() {
        this.close.emit(true);
    }
    show() {
        this.visible = true;
        this.open.emit();
    }
    hide() {
        this.visible = false;
        this.close.emit();
    }
    containsTarget(target) {
        return this.closeOnBlur && target.classList.contains('dialog');
    }
    onEscapeKeyDown() {
        if (this.closeOnEscape)
            this.hide();
    }
    onDocumentClick(target) {
        if (this.containsTarget(target)) {
            this.hide();
        }
    }
};
DialogComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "id", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "dialogTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "content", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], DialogComponent.prototype, "template", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "cssClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], DialogComponent.prototype, "context", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DialogComponent.prototype, "class", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], DialogComponent.prototype, "closeOnBlur", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], DialogComponent.prototype, "closeOnEscape", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], DialogComponent.prototype, "closeButton", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], DialogComponent.prototype, "visible", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], DialogComponent.prototype, "zIndex", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], DialogComponent.prototype, "open", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], DialogComponent.prototype, "close", void 0);
__decorate([
    HostListener('keydown.esc'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], DialogComponent.prototype, "onEscapeKeyDown", null);
__decorate([
    HostListener('document:click', ['$event.target']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], DialogComponent.prototype, "onDocumentClick", null);
DialogComponent = __decorate([
    Component({
        exportAs: 'ngxDialog',
        selector: 'ngx-dialog',
        template: "<div [class]=\"class\" [class.ngx-dialog]=\"true\" [style.zIndex]=\"zIndex\">\n  <div\n    class=\"ngx-dialog-content {{ cssClass }}\"\n    [@visibilityTransition]=\"visibleState\"\n    [style.zIndex]=\"contentzIndex\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <button *ngIf=\"closeButton\" type=\"button\" class=\"close\" (click)=\"hide()\">\n      <span class=\"icon-x\"></span>\n    </button>\n    <div class=\"ngx-dialog-header\" *ngIf=\"dialogTitle\">\n      <h2 *ngIf=\"dialogTitle\" class=\"ngx-dialog-title\" [innerHTML]=\"dialogTitle\"></h2>\n    </div>\n    <ng-template *ngIf=\"template\" [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ context: context }\">\n    </ng-template>\n    <div *ngIf=\"content\" [innerHTML]=\"content\"></div>\n    <ng-content></ng-content>\n  </div>\n</div>\n",
        animations: [
            trigger('visibilityTransition', [
                state('active', style({
                    opacity: 1,
                    transform: 'scale3d(1, 1, 1)'
                })),
                transition('void => *', [
                    style({
                        opacity: 0,
                        transform: 'scale3d(1.2, 1.2, 1.2)'
                    }),
                    animate('0.2s ease-out')
                ]),
                transition('* => inactive', [
                    style({
                        opacity: 1,
                        transform: 'scale3d(1, 1, 1)'
                    }),
                    animate('0.2s ease-out', style({
                        transform: 'scale3d(0.9, 0.9, 1)',
                        opacity: 0
                    }))
                ])
            ])
        ],
        host: { tabindex: '-1' },
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [".ngx-dialog{position:fixed;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;top:0;left:0;height:100vh;width:100%;pointer-events:none}.ngx-dialog .ngx-dialog-content{pointer-events:auto;border-radius:2px;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12);background:#1c2029;padding:1.4rem;position:relative;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;min-width:250px;font-size:.9rem;color:#9c9c9c}.ngx-dialog .ngx-dialog-content .close{position:absolute;font-size:20px;color:#cfcfcf;right:-25px;top:-25px}.ngx-dialog .ngx-dialog-content .ngx-dialog-header .ngx-dialog-title,.ngx-dialog .ngx-dialog-content .ngx-dialog-header h1{font-size:1.8rem;font-weight:500;margin:0 0 1.4rem;color:#cfcfcf}.ngx-dialog .ngx-dialog-content .ngx-dialog-footer{text-align:right}.ngx-dialog .ngx-dialog-content .ngx-dialog-footer .btn{margin-left:5px}.ngx-dialog.wizard .ngx-dialog-content{padding:0;background:#2b3240}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-header{padding:1.4rem;background:#262c38}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-header h1{margin:0}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer{padding:1.4rem}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer .wizard-nav{float:left}.ngx-dialog.wizard .ngx-dialog-content .ngx-dialog-footer .wizard-nav .btn{margin:0 5px 0 0}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs{margin-bottom:0}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list{padding:0 20px;background:#212631;border-bottom:2px solid #212631}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab{background:#212631}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab button{padding:.6em .75em;text-transform:uppercase}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tabs-list .ngx-tab.active{background:#313847}.ngx-dialog.wizard .ngx-dialog-content .ngx-tabs .ngx-tab-content{padding:1.4rem 1.4rem 0}.ngx-dialog.ngx-dialog-full-screen{width:100vw;height:100%;overflow-y:scroll;position:fixed;top:0;bottom:0;left:0;right:0}.ngx-dialog.ngx-dialog-full-screen .ngx-dialog-content{box-shadow:none;width:100%;min-height:100vh}.ngx-dialog.ngx-dialog-full-screen .ngx-dialog-content button.close{color:#afb7c8;font-size:24px;opacity:1;top:56px;right:56px;text-shadow:none}@-webkit-keyframes anim-open{0%{opacity:0;-webkit-transform:scale3d(1.1,1.1,1);transform:scale3d(1.1,1.1,1)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes anim-open{0%{opacity:0;-webkit-transform:scale3d(1.1,1.1,1);transform:scale3d(1.1,1.1,1)}100%{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@-webkit-keyframes anim-close{0%{opacity:1}100%{opacity:0;-webkit-transform:scale3d(.9,.9,1);transform:scale3d(.9,.9,1)}}@keyframes anim-close{0%{opacity:1}100%{opacity:0;-webkit-transform:scale3d(.9,.9,1);transform:scale3d(.9,.9,1)}}"]
    }),
    __metadata("design:paramtypes", [ElementRef, Renderer2])
], DialogComponent);
export { DialogComponent };
//# sourceMappingURL=data:application/json;base64,