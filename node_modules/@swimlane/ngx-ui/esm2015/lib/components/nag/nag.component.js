import { __decorate, __metadata } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';
import { coerceNumberProperty } from '@angular/cdk/coercion';
import { trigger } from '@angular/animations';
import { NAG_DRAWER_ANIMATION } from './nag.animation';
let NagComponent = class NagComponent {
    constructor() {
        this.cssClass = '';
        this.state = 'closed';
        this.stateChanged = new EventEmitter();
        this.nagTitle = '';
    }
    get zIndex() {
        return this._zIndex;
    }
    set zIndex(val) {
        this._zIndex = coerceNumberProperty(val);
    }
    get klass() {
        return `ngx-nag ngx-nag-bottom ngx-nag-${this.state} ${this.cssClass}`;
    }
    toggle() {
        this.state = this.state !== 'open' ? 'open' : 'closed';
        this.stateChanged.emit(this.state);
    }
    ngOnDestroy() {
        this.stateChanged.emit(this.state);
    }
    ngOnChanges(changes) {
        if (changes.watch && this.state === 'closed') {
            this.state = 'peek';
            setTimeout(() => {
                this.state = 'closed';
            }, 100);
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], NagComponent.prototype, "cssClass", void 0);
__decorate([
    HostBinding('@drawerTransition'),
    Input(),
    __metadata("design:type", String)
], NagComponent.prototype, "state", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NagComponent.prototype, "stateChanged", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], NagComponent.prototype, "zIndex", null);
__decorate([
    Input(),
    __metadata("design:type", String)
], NagComponent.prototype, "nagTitle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NagComponent.prototype, "watch", void 0);
__decorate([
    HostBinding('class'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], NagComponent.prototype, "klass", null);
NagComponent = __decorate([
    Component({
        selector: 'ngx-nag',
        exportAs: 'ngxNag',
        template: "<div class=\"ngx-nag-content\">\n  <ngx-toolbar class=\"ngx-nag-toolbar\" (click)=\"toggle()\" [mainTitle]=\"nagTitle\">\n    <ngx-toolbar-title *ngIf=\"!nagTitle\"> <ng-content select=\"[ngx-nag-title]\"></ng-content> </ngx-toolbar-title>\n    <ngx-toolbar-content><ngx-icon class=\"ngx-nag-icon\" fontIcon=\"arrow-down\"></ngx-icon></ngx-toolbar-content>\n  </ngx-toolbar>\n  <section class=\"ngx-nag-body ngx-section-content\"><ng-content></ng-content></section>\n</div>\n",
        host: {
            role: 'dialog',
            tabindex: '-1',
            '[style.zIndex]': 'zIndex'
        },
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        animations: [trigger('drawerTransition', NAG_DRAWER_ANIMATION)],
        styles: [".ngx-nag{position:fixed;overflow-y:auto;overflow-x:hidden;text-align:left;z-index:998;background:#313847}.ngx-nag.ngx-nag-bottom{left:20%;right:20%;top:100%;width:60%}.ngx-nag.ngx-nag-bottom .ngx-nag-icon{-webkit-transform:rotateZ(180deg);transform:rotateZ(180deg);display:block;-webkit-transition:.4s ease-out;transition:.4s ease-out;background-color:#212633;height:30px;width:30px;border-radius:15px;float:right;text-align:center;margin-top:10px;line-height:34px;cursor:pointer}.ngx-nag.ngx-nag-bottom.ngx-nag-open .ngx-nag-icon{-webkit-transform:rotateZ(0);transform:rotateZ(0)}.ngx-nag .ngx-nag-body{background-color:#313847;margin-bottom:0;padding:1.8em;max-height:50vh;overflow-y:auto}.ngx-nag .ngx-nag-toolbar{background:#293040;cursor:pointer}"]
    })
], NagComponent);
export { NagComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9uYWcvbmFnLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBR0wsTUFBTSxFQUVOLGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFOUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFnQnZELElBQWEsWUFBWSxHQUF6QixNQUFhLFlBQVk7SUFBekI7UUFDVyxhQUFRLEdBQVcsRUFBRSxDQUFDO1FBSS9CLFVBQUssR0FBVyxRQUFRLENBQUM7UUFFZixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFVM0MsYUFBUSxHQUFXLEVBQUUsQ0FBQztJQTJCakMsQ0FBQztJQW5DQyxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQUksTUFBTSxDQUFDLEdBQVc7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBTUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxrQ0FBa0MsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDekUsQ0FBQztJQUlELE1BQU07UUFDSixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUN2RCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDNUMsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7WUFDcEIsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDZCxJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztZQUN4QixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDVDtJQUNILENBQUM7Q0FDRixDQUFBO0FBM0NVO0lBQVIsS0FBSyxFQUFFOzs4Q0FBdUI7QUFJL0I7SUFGQyxXQUFXLENBQUMsbUJBQW1CLENBQUM7SUFDaEMsS0FBSyxFQUFFOzsyQ0FDaUI7QUFFZjtJQUFULE1BQU0sRUFBRTs7a0RBQTJDO0FBTXBEO0lBREMsS0FBSyxFQUFFOzs7MENBR1A7QUFFUTtJQUFSLEtBQUssRUFBRTs7OENBQXVCO0FBQ3RCO0lBQVIsS0FBSyxFQUFFOzsyQ0FBWTtBQUdwQjtJQURDLFdBQVcsQ0FBQyxPQUFPLENBQUM7Ozt5Q0FHcEI7QUF2QlUsWUFBWTtJQWR4QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsU0FBUztRQUNuQixRQUFRLEVBQUUsUUFBUTtRQUNsQix1ZUFBbUM7UUFDbkMsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLFFBQVE7WUFDZCxRQUFRLEVBQUUsSUFBSTtZQUNkLGdCQUFnQixFQUFFLFFBQVE7U0FDM0I7UUFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtRQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUUvQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLENBQUMsQ0FBQzs7S0FDaEUsQ0FBQztHQUNXLFlBQVksQ0E0Q3hCO1NBNUNZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIEhvc3RCaW5kaW5nLFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxuICBPbkRlc3Ryb3ksXG4gIE91dHB1dCxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb2VyY2VOdW1iZXJQcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyB0cmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbmltcG9ydCB7IE5BR19EUkFXRVJfQU5JTUFUSU9OIH0gZnJvbSAnLi9uYWcuYW5pbWF0aW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LW5hZycsXG4gIGV4cG9ydEFzOiAnbmd4TmFnJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25hZy5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICByb2xlOiAnZGlhbG9nJyxcbiAgICB0YWJpbmRleDogJy0xJyxcbiAgICAnW3N0eWxlLnpJbmRleF0nOiAnekluZGV4J1xuICB9LFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJy4vbmFnLmNvbXBvbmVudC5zY3NzJ10sXG4gIGFuaW1hdGlvbnM6IFt0cmlnZ2VyKCdkcmF3ZXJUcmFuc2l0aW9uJywgTkFHX0RSQVdFUl9BTklNQVRJT04pXVxufSlcbmV4cG9ydCBjbGFzcyBOYWdDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGNzc0NsYXNzOiBzdHJpbmcgPSAnJztcblxuICBASG9zdEJpbmRpbmcoJ0BkcmF3ZXJUcmFuc2l0aW9uJylcbiAgQElucHV0KClcbiAgc3RhdGU6IHN0cmluZyA9ICdjbG9zZWQnO1xuXG4gIEBPdXRwdXQoKSBzdGF0ZUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICBnZXQgekluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLl96SW5kZXg7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IHpJbmRleCh2YWw6IG51bWJlcikge1xuICAgIHRoaXMuX3pJbmRleCA9IGNvZXJjZU51bWJlclByb3BlcnR5KHZhbCk7XG4gIH1cblxuICBASW5wdXQoKSBuYWdUaXRsZTogc3RyaW5nID0gJyc7XG4gIEBJbnB1dCgpIHdhdGNoOiBhbnk7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gIGdldCBrbGFzcygpIHtcbiAgICByZXR1cm4gYG5neC1uYWcgbmd4LW5hZy1ib3R0b20gbmd4LW5hZy0ke3RoaXMuc3RhdGV9ICR7dGhpcy5jc3NDbGFzc31gO1xuICB9XG5cbiAgcHJpdmF0ZSBfekluZGV4OiBudW1iZXI7XG5cbiAgdG9nZ2xlKCkge1xuICAgIHRoaXMuc3RhdGUgPSB0aGlzLnN0YXRlICE9PSAnb3BlbicgPyAnb3BlbicgOiAnY2xvc2VkJztcbiAgICB0aGlzLnN0YXRlQ2hhbmdlZC5lbWl0KHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5zdGF0ZUNoYW5nZWQuZW1pdCh0aGlzLnN0YXRlKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy53YXRjaCAmJiB0aGlzLnN0YXRlID09PSAnY2xvc2VkJykge1xuICAgICAgdGhpcy5zdGF0ZSA9ICdwZWVrJztcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnN0YXRlID0gJ2Nsb3NlZCc7XG4gICAgICB9LCAxMDApO1xuICAgIH1cbiAgfVxufVxuIl19