import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, EventEmitter, HostListener, HostBinding, ViewEncapsulation, TemplateRef, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
import { NotificationStyleType } from './notification-style-type.enum';
let NotificationComponent = class NotificationComponent {
    constructor() {
        this.cssClass = '';
        this.close = new EventEmitter();
        this.pause = new EventEmitter();
        this.resume = new EventEmitter();
        this.NotificationStyleType = NotificationStyleType;
    }
    get showClose() {
        return this._showClose;
    }
    set showClose(showClose) {
        this._showClose = coerceBooleanProperty(showClose);
    }
    get pauseOnHover() {
        return this._pauseOnHover;
    }
    set pauseOnHover(pauseOnHover) {
        this._pauseOnHover = coerceBooleanProperty(pauseOnHover);
    }
    get timestamp() {
        return this._timestamp;
    }
    set timestamp(timestamp) {
        this._timestamp = coerceNumberProperty(timestamp);
    }
    get cssClasses() {
        let cls = `ngx-notification ngx-notification-${this.styleType}`;
        if (this.cssClass)
            cls += ` ${this.cssClass}`;
        if (this.showClose)
            cls += ' notification-closeable';
        return cls;
    }
    get animationDuration() {
        if (typeof this.timeout !== 'number') {
            return '3000s';
        }
        return `${this.timeout}ms`;
    }
    onMouseEnter() {
        if (this.pauseOnHover) {
            this.pause.emit();
        }
    }
    onMouseLeave() {
        if (this.pauseOnHover) {
            this.resume.emit();
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], NotificationComponent.prototype, "cssClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NotificationComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NotificationComponent.prototype, "body", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], NotificationComponent.prototype, "template", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NotificationComponent.prototype, "styleType", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], NotificationComponent.prototype, "icon", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], NotificationComponent.prototype, "timeout", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], NotificationComponent.prototype, "showClose", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], NotificationComponent.prototype, "pauseOnHover", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], NotificationComponent.prototype, "timestamp", null);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NotificationComponent.prototype, "close", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NotificationComponent.prototype, "pause", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], NotificationComponent.prototype, "resume", void 0);
__decorate([
    HostBinding('class'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [])
], NotificationComponent.prototype, "cssClasses", null);
__decorate([
    HostListener('mouseenter'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NotificationComponent.prototype, "onMouseEnter", null);
__decorate([
    HostListener('mouseleave'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NotificationComponent.prototype, "onMouseLeave", null);
NotificationComponent = __decorate([
    Component({
        exportAs: 'ngxNotification',
        selector: 'ngx-notification',
        template: "<div>\n  <div class=\"notification-bar\" [class.animated]=\"timeout\">\n    <div class=\"bar\" [ngStyle]=\"{'animation-duration': animationDuration }\"></div>\n  </div>\n\n  <div *ngIf=\"styleType !== NotificationStyleType.none && !icon\" class=\"icon-container\">\n    <span *ngIf=\"styleType === NotificationStyleType.info\" class=\"icon icon-info-fulled\"></span>\n    <span *ngIf=\"styleType === NotificationStyleType.warning\" class=\"icon icon-warning-filled\"></span>\n    <span *ngIf=\"styleType === NotificationStyleType.error\" class=\"icon icon-x-filled\"></span>\n    <span *ngIf=\"styleType === NotificationStyleType.success\" class=\"icon icon-check-filled\"></span>\n  </div>\n\n  <div *ngIf=\"styleType === NotificationStyleType.none && icon\" class=\"icon-container\"><span [class]=\"'icon ' + icon\"></span></div>\n\n  <div class=\"notification-content\" [class.has-icon]=\"styleType !== NotificationStyleType.none || icon\">\n    <h2 class=\"ngx-notification-title\" [innerHTML]=\"title\"></h2>\n    <p class=\"ngx-notification-body\" [innerHTML]=\"body\"></p>\n    <ng-template *ngIf=\"template\" [ngTemplateOutlet]=\"template\"> </ng-template>\n    <button *ngIf=\"showClose\" type=\"button\" (click)=\"close.emit()\" class=\"icon-x ngx-notification-close\"></button>\n  </div>\n</div>\n\n",
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [".ngx-notification-container{position:fixed;bottom:20px;right:20px;min-width:120px;max-width:400px;z-index:9998}.ngx-notification{display:block;margin-top:.5rem;position:relative;box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12);color:#fff;text-shadow:1px 1px rgba(0,0,0,.1);background:#313847}.ngx-notification .notification-bar{background-color:rgba(69,80,102,.2);width:5px;height:100%;position:absolute}.ngx-notification .notification-bar .bar{background-color:#455066;width:5px;height:100%;position:absolute;bottom:0}.ngx-notification .icon-container .icon{color:#455066;font-size:2.5rem;line-height:2.5rem}.ngx-notification .notification-bar.animated .bar{height:0%;-webkit-animation:1s ease-out heightBar;animation:1s ease-out heightBar}@-webkit-keyframes heightBar{0%{height:100%}100%{height:0%}}@keyframes heightBar{0%{height:100%}100%{height:0%}}.ngx-notification .icon-container{float:left;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);padding:0 1em;height:2.5rem}.ngx-notification .notification-content{padding:1.5rem;color:#cdd2dd;overflow:auto;max-height:300px}.ngx-notification .notification-content.has-icon{margin-left:4.5rem;border-left:1px solid #3b4457}.ngx-notification.notification-closeable{padding-right:1rem}.ngx-notification.ngx-notification-info .notification-bar{background-color:rgba(20,131,255,.2)}.ngx-notification.ngx-notification-info .notification-bar .bar{background-color:#1483ff}.ngx-notification.ngx-notification-info .icon-container .icon{color:#1483ff}.ngx-notification.ngx-notification-error .notification-bar{background-color:rgba(255,69,20,.2)}.ngx-notification.ngx-notification-error .notification-bar .bar{background-color:#ff4514}.ngx-notification.ngx-notification-error .icon-container .icon{color:#ff4514}.ngx-notification.ngx-notification-warning .notification-bar{background-color:rgba(255,168,20,.2)}.ngx-notification.ngx-notification-warning .notification-bar .bar{background-color:#ffa814}.ngx-notification.ngx-notification-warning .icon-container .icon{color:#ffa814}.ngx-notification.ngx-notification-success .notification-bar{background-color:rgba(29,222,182,.2)}.ngx-notification.ngx-notification-success .notification-bar .bar{background-color:#1ddeb6}.ngx-notification.ngx-notification-success .icon-container .icon{color:#1ddeb6}.ngx-notification .ngx-notification-title{margin:0;font-size:1.2rem;color:#fff}.ngx-notification .ngx-notification-body{font-size:.9rem;margin:0;line-height:1rem}.ngx-notification .ngx-notification-close{position:absolute;right:.5rem;top:.5rem;line-height:1em;padding:0;font-size:16px;height:16px}"]
    })
], NotificationComponent);
export { NotificationComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixZQUFZLEVBQ1osV0FBVyxFQUNYLGlCQUFpQixFQUNqQixXQUFXLEVBQ1gsdUJBQXVCLEVBQ3hCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXBGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBVXZFLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0lBQWxDO1FBQ1csYUFBUSxHQUFXLEVBQUUsQ0FBQztRQWdDckIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDakMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDakMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFpQm5DLDBCQUFxQixHQUFHLHFCQUFxQixDQUFDO0lBb0J6RCxDQUFDO0lBOURDLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBQ0QsSUFBSSxTQUFTLENBQUMsU0FBUztRQUNyQixJQUFJLENBQUMsVUFBVSxHQUFHLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFHRCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQztJQUNELElBQUksWUFBWSxDQUFDLFlBQVk7UUFDM0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBR0QsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFDRCxJQUFJLFNBQVMsQ0FBQyxTQUFTO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsb0JBQW9CLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQU9ELElBQUksVUFBVTtRQUNaLElBQUksR0FBRyxHQUFHLHFDQUFxQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDaEUsSUFBSSxJQUFJLENBQUMsUUFBUTtZQUFFLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM5QyxJQUFJLElBQUksQ0FBQyxTQUFTO1lBQUUsR0FBRyxJQUFJLHlCQUF5QixDQUFDO1FBQ3JELE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQUksaUJBQWlCO1FBQ25CLElBQUksT0FBTyxJQUFJLENBQUMsT0FBTyxLQUFLLFFBQVEsRUFBRTtZQUNwQyxPQUFPLE9BQU8sQ0FBQztTQUNoQjtRQUNELE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQVVELFlBQVk7UUFDVixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNuQjtJQUNILENBQUM7SUFHRCxZQUFZO1FBQ1YsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDO0NBQ0YsQ0FBQTtBQXZFVTtJQUFSLEtBQUssRUFBRTs7dURBQXVCO0FBQ3RCO0lBQVIsS0FBSyxFQUFFOztvREFBZTtBQUNkO0lBQVIsS0FBSyxFQUFFOzttREFBYztBQUNiO0lBQVIsS0FBSyxFQUFFOzhCQUFXLFdBQVc7dURBQU07QUFDM0I7SUFBUixLQUFLLEVBQUU7O3dEQUFrQztBQUNqQztJQUFSLEtBQUssRUFBRTs7bURBQWM7QUFDYjtJQUFSLEtBQUssRUFBRTs7c0RBQXlCO0FBR2pDO0lBREMsS0FBSyxFQUFFOzs7c0RBR1A7QUFNRDtJQURDLEtBQUssRUFBRTs7O3lEQUdQO0FBTUQ7SUFEQyxLQUFLLEVBQUU7OztzREFHUDtBQUtTO0lBQVQsTUFBTSxFQUFFOztvREFBa0M7QUFDakM7SUFBVCxNQUFNLEVBQUU7O29EQUFrQztBQUNqQztJQUFULE1BQU0sRUFBRTs7cURBQW1DO0FBRzVDO0lBREMsV0FBVyxDQUFDLE9BQU8sQ0FBQzs7O3VEQU1wQjtBQWlCRDtJQURDLFlBQVksQ0FBQyxZQUFZLENBQUM7Ozs7eURBSzFCO0FBR0Q7SUFEQyxZQUFZLENBQUMsWUFBWSxDQUFDOzs7O3lEQUsxQjtBQXZFVSxxQkFBcUI7SUFSakMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQixRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLDB5Q0FBNEM7UUFFNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7UUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O0tBQ2hELENBQUM7R0FDVyxxQkFBcUIsQ0F3RWpDO1NBeEVZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBIb3N0TGlzdGVuZXIsXG4gIEhvc3RCaW5kaW5nLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgVGVtcGxhdGVSZWYsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5LCBjb2VyY2VOdW1iZXJQcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5cbmltcG9ydCB7IE5vdGlmaWNhdGlvblN0eWxlVHlwZSB9IGZyb20gJy4vbm90aWZpY2F0aW9uLXN0eWxlLXR5cGUuZW51bSc7XG5cbkBDb21wb25lbnQoe1xuICBleHBvcnRBczogJ25neE5vdGlmaWNhdGlvbicsXG4gIHNlbGVjdG9yOiAnbmd4LW5vdGlmaWNhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9ub3RpZmljYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY3NzQ2xhc3M6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBib2R5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBASW5wdXQoKSBzdHlsZVR5cGU6IE5vdGlmaWNhdGlvblN0eWxlVHlwZTtcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICBASW5wdXQoKSB0aW1lb3V0OiBmYWxzZSB8IG51bWJlcjtcblxuICBASW5wdXQoKVxuICBnZXQgc2hvd0Nsb3NlKCkge1xuICAgIHJldHVybiB0aGlzLl9zaG93Q2xvc2U7XG4gIH1cbiAgc2V0IHNob3dDbG9zZShzaG93Q2xvc2UpIHtcbiAgICB0aGlzLl9zaG93Q2xvc2UgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkoc2hvd0Nsb3NlKTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIGdldCBwYXVzZU9uSG92ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhdXNlT25Ib3ZlcjtcbiAgfVxuICBzZXQgcGF1c2VPbkhvdmVyKHBhdXNlT25Ib3Zlcikge1xuICAgIHRoaXMuX3BhdXNlT25Ib3ZlciA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eShwYXVzZU9uSG92ZXIpO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IHRpbWVzdGFtcCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGltZXN0YW1wO1xuICB9XG4gIHNldCB0aW1lc3RhbXAodGltZXN0YW1wKSB7XG4gICAgdGhpcy5fdGltZXN0YW1wID0gY29lcmNlTnVtYmVyUHJvcGVydHkodGltZXN0YW1wKTtcbiAgfVxuXG4gIEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIHBhdXNlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuICBAT3V0cHV0KCkgcmVzdW1lID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICBnZXQgY3NzQ2xhc3NlcygpOiBzdHJpbmcge1xuICAgIGxldCBjbHMgPSBgbmd4LW5vdGlmaWNhdGlvbiBuZ3gtbm90aWZpY2F0aW9uLSR7dGhpcy5zdHlsZVR5cGV9YDtcbiAgICBpZiAodGhpcy5jc3NDbGFzcykgY2xzICs9IGAgJHt0aGlzLmNzc0NsYXNzfWA7XG4gICAgaWYgKHRoaXMuc2hvd0Nsb3NlKSBjbHMgKz0gJyBub3RpZmljYXRpb24tY2xvc2VhYmxlJztcbiAgICByZXR1cm4gY2xzO1xuICB9XG5cbiAgZ2V0IGFuaW1hdGlvbkR1cmF0aW9uKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy50aW1lb3V0ICE9PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuICczMDAwcyc7XG4gICAgfVxuICAgIHJldHVybiBgJHt0aGlzLnRpbWVvdXR9bXNgO1xuICB9XG5cbiAgcmVhZG9ubHkgTm90aWZpY2F0aW9uU3R5bGVUeXBlID0gTm90aWZpY2F0aW9uU3R5bGVUeXBlO1xuICB0aW1lcjogYW55O1xuXG4gIHByaXZhdGUgX3Nob3dDbG9zZT86IGJvb2xlYW47XG4gIHByaXZhdGUgX3BhdXNlT25Ib3Zlcj86IGJvb2xlYW47XG4gIHByaXZhdGUgX3RpbWVzdGFtcD86IG51bWJlcjtcblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWVudGVyJylcbiAgb25Nb3VzZUVudGVyKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnBhdXNlT25Ib3Zlcikge1xuICAgICAgdGhpcy5wYXVzZS5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpXG4gIG9uTW91c2VMZWF2ZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYXVzZU9uSG92ZXIpIHtcbiAgICAgIHRoaXMucmVzdW1lLmVtaXQoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==