import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, HostListener, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { BehaviorSubject } from 'rxjs';
import { ButtonState } from './button-state.enum';
let ButtonComponent = class ButtonComponent {
    constructor() {
        this.inProgress$ = new BehaviorSubject(false);
        this.active$ = new BehaviorSubject(false);
        this.success$ = new BehaviorSubject(false);
        this.fail$ = new BehaviorSubject(false);
        this._state = ButtonState.Active;
        this._disabled = false;
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(v) {
        this._disabled = coerceBooleanProperty(v);
    }
    get state() {
        return this._state;
    }
    set state(v) {
        this._state = v;
        this.inProgress$.next(v === ButtonState.InProgress);
        this.active$.next(v === ButtonState.Active);
        this.success$.next(v === ButtonState.Success);
        this.fail$.next(v === ButtonState.Fail);
    }
    ngOnInit() {
        this.updateState();
    }
    ngOnChanges() {
        this.updateState();
        this.updatePromise();
    }
    updatePromise() {
        if (this.promise) {
            this.state = ButtonState.InProgress;
            this.updateState();
            return this.promise
                .then(() => {
                this.state = ButtonState.Success;
                this.updateState();
            })
                .catch(() => {
                this.state = ButtonState.Fail;
                this.updateState();
            });
        }
    }
    updateState() {
        if (!this.state) {
            this.state = ButtonState.Active;
        }
        if (this.state === ButtonState.Success ||
            this.state === ButtonState.Fail ||
            this.state === ButtonState.InProgress) {
            clearTimeout(this._timer);
            this._timer = setTimeout(() => {
                this.state = ButtonState.Active;
                this.updateState();
            }, 3000);
        }
    }
    onClick(event) {
        if (this.disabled) {
            event.stopPropagation();
            event.preventDefault();
            return false;
        }
        return true;
    }
};
__decorate([
    Input(),
    __metadata("design:type", Promise)
], ButtonComponent.prototype, "promise", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], ButtonComponent.prototype, "disabled", null);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], ButtonComponent.prototype, "state", null);
__decorate([
    HostListener('click', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Event]),
    __metadata("design:returntype", void 0)
], ButtonComponent.prototype, "onClick", null);
ButtonComponent = __decorate([
    Component({
        selector: 'ngx-button',
        exportAs: 'ngxButton',
        template: "<button [disabled]=\"disabled\">\n  <span class=\"content\"><ng-content></ng-content></span>\n  <span class=\"state-icon\">\n    <span *ngIf=\"inProgress$ | async\" class=\"icon icon-loading\"></span>\n    <span *ngIf=\"success$ | async\" class=\"icon icon-check\"></span>\n    <span *ngIf=\"fail$ | async\" class=\"icon icon-x\"></span>\n  </span>\n</button>\n",
        host: {
            class: 'ngx-button',
            '[class.in-progress]': 'inProgress$.value',
            '[class.active]': 'active$.value',
            '[class.success]': 'success$.value',
            '[class.fail]': 'fail$.value',
            '[class.disabled-button]': 'disabled'
        },
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: ["button{box-sizing:border-box;color:inherit;cursor:pointer;display:inline-block;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font:inherit;background:0 0;border:none;text-shadow:1px 1px rgba(0,0,0,.07)}button:active,button:focus{outline:0}.btn{box-sizing:border-box;color:#fff;display:inline-block;padding:.35em .55em;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font:inherit;font-size:.9em;font-weight:700;outline:0;line-height:1em;background:#455066;border:1px solid transparent;border-radius:2px;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);-webkit-transition:background-color .2s,box-shadow .2s;transition:background-color .2s,box-shadow .2s}.btn .icon,.btn .ngx-icon{font-weight:400;vertical-align:middle;line-height:1em;font-size:.9em}.btn .icon:before,.btn .ngx-icon:before{font-weight:inherit}.btn .icon.has-text,.btn .icon.has-text-right,.btn .ngx-icon.has-text,.btn .ngx-icon.has-text-right{margin-right:.2em}.btn .icon.has-text-left,.btn .ngx-icon.has-text-left{margin-left:.2em}.btn::-moz-focus-inner{border:0;padding:0}.btn:focus{outline:0;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12)}.btn:active:hover:focus:not(.disabled),.btn:active:hover:focus:not([disabled]){cursor:pointer;background:#313847}.btn:active:hover:focus:not(.disabled).btn-primary,.btn:active:hover:focus:not([disabled]).btn-primary{background-color:#1483ff}.btn:active:hover:focus:not(.disabled).btn-warning,.btn:active:hover:focus:not([disabled]).btn-warning{background-color:#ffa814}.btn:active:hover:focus:not(.disabled).btn-danger,.btn:active:hover:focus:not([disabled]).btn-danger{background-color:#ff4514}.btn:active:hover:focus:not(.disabled).btn-link,.btn:active:hover:focus:not([disabled]).btn-link{background-color:transparent}.btn:active:hover:focus:not(.disabled).btn-bordered,.btn:active:hover:focus:not([disabled]).btn-bordered{border-color:#94c6ff;color:#94c6ff}.btn:active,.btn:focus,.btn:hover{text-decoration:none}.btn.small{font-size:.6em}.btn.large{font-size:1.3em}.btn.btn-primary{background-color:#479eff}.btn.btn-primary.btn-primary-gradient{background:linear-gradient(125.43deg,#54cdfc 10.86%,#479eff 49.11%)}.btn.btn-warning{background-color:#ffbb47;color:#07080b}.btn.btn-danger{background-color:#ff6d47}.btn.btn-link{background-color:transparent;box-shadow:none}.btn.btn-bordered,.btn.btn-primary.btn-bordered{border:1px solid #479eff;color:#479eff;background-color:transparent;box-shadow:none}.btn.btn-bordered.disabled-button,.btn.btn-primary.btn-bordered.disabled-button{opacity:.5}.btn.btn-bordered.disabled-button .button,.btn.btn-primary.btn-bordered.disabled-button .button{opacity:1}.btn.btn-default.btn-bordered{border:1px solid #fff;color:#fff;background-color:transparent;box-shadow:none}.btn.btn-default.btn-bordered:hover{border-color:#1483ff!important;color:#1483ff!important}.btn.btn-default.btn-bordered.disabled-button{opacity:.5}.btn.btn-default.btn-bordered.disabled-button .button{opacity:1}.btn.btn-file{cursor:pointer;padding:0}.btn.btn-file label{display:block;cursor:pointer;padding:.35em .75em}.btn.btn-file[disabled] label{cursor:not-allowed}.btn.btn-file input[type=file]{pointer-events:none;position:absolute;left:-9999px}.ngx-button{-webkit-transition:background-color .25s ease-out!important;transition:background-color .25s ease-out!important}.ngx-button button{padding:0;width:100%}.ngx-button.disabled-button{pointer-events:none}.ngx-button.success{background-color:#1ddeb6!important}.ngx-button.fail{background-color:#ff4514!important}.ngx-button:focus{outline:0;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12)}.ngx-button.fail,.ngx-button.in-progress,.ngx-button.success{pointer-events:auto;cursor:wait!important;color:#fff;position:relative;opacity:1!important}.ngx-button.fail button,.ngx-button.in-progress button,.ngx-button.success button{opacity:1}.ngx-button.fail *,.ngx-button.fail:active,.ngx-button.in-progress *,.ngx-button.in-progress:active,.ngx-button.success *,.ngx-button.success:active{pointer-events:none}.ngx-button.fail .content,.ngx-button.in-progress .content,.ngx-button.success .content{opacity:0;-webkit-transition:opacity .25s ease-out;transition:opacity .25s ease-out}.ngx-button.fail.active .content,.ngx-button.in-progress.active .content,.ngx-button.success.active .content{opacity:1}.ngx-button.fail .state-icon,.ngx-button.in-progress .state-icon,.ngx-button.success .state-icon{position:absolute;display:inline-block;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ngx-button.fail .state-icon .icon,.ngx-button.in-progress .state-icon .icon,.ngx-button.success .state-icon .icon{height:1em;width:1em;font-weight:700;color:#fff;overflow:hidden;font-size:1em}"]
    })
], ButtonComponent);
export { ButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzd2ltbGFuZS9uZ3gtdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsaUJBQWlCLEVBR2pCLFlBQVksRUFDWix1QkFBdUIsRUFDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV2QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFrQmxELElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7SUFBNUI7UUF3QlcsZ0JBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxZQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckMsYUFBUSxHQUFHLElBQUksZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLFVBQUssR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVwQyxXQUFNLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUM1QixjQUFTLEdBQUcsS0FBSyxDQUFDO0lBeUQ1QixDQUFDO0lBbkZDLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBQ0QsSUFBSSxRQUFRLENBQUMsQ0FBVTtRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFHRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUNELElBQUksS0FBSyxDQUFDLENBQWM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFaEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBV0QsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNuQixPQUFPLElBQUksQ0FBQyxPQUFPO2lCQUNoQixJQUFJLENBQUMsR0FBRyxFQUFFO2dCQUNULElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQztnQkFDakMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3JCLENBQUMsQ0FBQztpQkFDRCxLQUFLLENBQUMsR0FBRyxFQUFFO2dCQUNWLElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQztnQkFDOUIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3JCLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDO1NBQ2pDO1FBRUQsSUFDRSxJQUFJLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxPQUFPO1lBQ2xDLElBQUksQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLElBQUk7WUFDL0IsSUFBSSxDQUFDLEtBQUssS0FBSyxXQUFXLENBQUMsVUFBVSxFQUNyQztZQUNBLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNyQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDVjtJQUNILENBQUM7SUFHRCxPQUFPLENBQUMsS0FBWTtRQUNsQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3hCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUV2QixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0YsQ0FBQTtBQXRGVTtJQUFSLEtBQUssRUFBRTs7Z0RBQXdCO0FBR2hDO0lBREMsS0FBSyxFQUFFOzs7K0NBR1A7QUFNRDtJQURDLEtBQUssRUFBRTs7OzRDQUdQO0FBK0REO0lBREMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDOztxQ0FDbkIsS0FBSzs7OENBU25CO0FBdEZVLGVBQWU7SUFoQjNCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxZQUFZO1FBQ3RCLFFBQVEsRUFBRSxXQUFXO1FBQ3JCLHFYQUFzQztRQUV0QyxJQUFJLEVBQUU7WUFDSixLQUFLLEVBQUUsWUFBWTtZQUNuQixxQkFBcUIsRUFBRSxtQkFBbUI7WUFDMUMsZ0JBQWdCLEVBQUUsZUFBZTtZQUNqQyxpQkFBaUIsRUFBRSxnQkFBZ0I7WUFDbkMsY0FBYyxFQUFFLGFBQWE7WUFDN0IseUJBQXlCLEVBQUUsVUFBVTtTQUN0QztRQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO1FBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNoRCxDQUFDO0dBQ1csZUFBZSxDQXVGM0I7U0F2RlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBPbkluaXQsXG4gIE9uQ2hhbmdlcyxcbiAgSG9zdExpc3RlbmVyLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgQnV0dG9uU3RhdGUgfSBmcm9tICcuL2J1dHRvbi1zdGF0ZS5lbnVtJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWJ1dHRvbicsXG4gIGV4cG9ydEFzOiAnbmd4QnV0dG9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2J1dHRvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2J1dHRvbi5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICduZ3gtYnV0dG9uJyxcbiAgICAnW2NsYXNzLmluLXByb2dyZXNzXSc6ICdpblByb2dyZXNzJC52YWx1ZScsXG4gICAgJ1tjbGFzcy5hY3RpdmVdJzogJ2FjdGl2ZSQudmFsdWUnLFxuICAgICdbY2xhc3Muc3VjY2Vzc10nOiAnc3VjY2VzcyQudmFsdWUnLFxuICAgICdbY2xhc3MuZmFpbF0nOiAnZmFpbCQudmFsdWUnLFxuICAgICdbY2xhc3MuZGlzYWJsZWQtYnV0dG9uXSc6ICdkaXNhYmxlZCdcbiAgfSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBwcm9taXNlPzogUHJvbWlzZTxhbnk+O1xuXG4gIEBJbnB1dCgpXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQ7XG4gIH1cbiAgc2V0IGRpc2FibGVkKHY6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2KTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIGdldCBzdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhdGU7XG4gIH1cbiAgc2V0IHN0YXRlKHY6IEJ1dHRvblN0YXRlKSB7XG4gICAgdGhpcy5fc3RhdGUgPSB2O1xuXG4gICAgdGhpcy5pblByb2dyZXNzJC5uZXh0KHYgPT09IEJ1dHRvblN0YXRlLkluUHJvZ3Jlc3MpO1xuICAgIHRoaXMuYWN0aXZlJC5uZXh0KHYgPT09IEJ1dHRvblN0YXRlLkFjdGl2ZSk7XG4gICAgdGhpcy5zdWNjZXNzJC5uZXh0KHYgPT09IEJ1dHRvblN0YXRlLlN1Y2Nlc3MpO1xuICAgIHRoaXMuZmFpbCQubmV4dCh2ID09PSBCdXR0b25TdGF0ZS5GYWlsKTtcbiAgfVxuXG4gIHJlYWRvbmx5IGluUHJvZ3Jlc3MkID0gbmV3IEJlaGF2aW9yU3ViamVjdChmYWxzZSk7XG4gIHJlYWRvbmx5IGFjdGl2ZSQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcbiAgcmVhZG9ubHkgc3VjY2VzcyQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcbiAgcmVhZG9ubHkgZmFpbCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcblxuICBwcml2YXRlIF9zdGF0ZSA9IEJ1dHRvblN0YXRlLkFjdGl2ZTtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQgPSBmYWxzZTtcbiAgcHJpdmF0ZSBfdGltZXI6IGFueTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gICAgdGhpcy51cGRhdGVQcm9taXNlKCk7XG4gIH1cblxuICB1cGRhdGVQcm9taXNlKCkge1xuICAgIGlmICh0aGlzLnByb21pc2UpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSBCdXR0b25TdGF0ZS5JblByb2dyZXNzO1xuICAgICAgdGhpcy51cGRhdGVTdGF0ZSgpO1xuICAgICAgcmV0dXJuIHRoaXMucHJvbWlzZVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zdGF0ZSA9IEJ1dHRvblN0YXRlLlN1Y2Nlc3M7XG4gICAgICAgICAgdGhpcy51cGRhdGVTdGF0ZSgpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgIHRoaXMuc3RhdGUgPSBCdXR0b25TdGF0ZS5GYWlsO1xuICAgICAgICAgIHRoaXMudXBkYXRlU3RhdGUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlU3RhdGUoKSB7XG4gICAgaWYgKCF0aGlzLnN0YXRlKSB7XG4gICAgICB0aGlzLnN0YXRlID0gQnV0dG9uU3RhdGUuQWN0aXZlO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIHRoaXMuc3RhdGUgPT09IEJ1dHRvblN0YXRlLlN1Y2Nlc3MgfHxcbiAgICAgIHRoaXMuc3RhdGUgPT09IEJ1dHRvblN0YXRlLkZhaWwgfHxcbiAgICAgIHRoaXMuc3RhdGUgPT09IEJ1dHRvblN0YXRlLkluUHJvZ3Jlc3NcbiAgICApIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lcik7XG4gICAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnN0YXRlID0gQnV0dG9uU3RhdGUuQWN0aXZlO1xuICAgICAgICB0aGlzLnVwZGF0ZVN0YXRlKCk7XG4gICAgICB9LCAzMDAwKTtcbiAgICB9XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gIG9uQ2xpY2soZXZlbnQ6IEV2ZW50KSB7XG4gICAgaWYgKHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4iXX0=