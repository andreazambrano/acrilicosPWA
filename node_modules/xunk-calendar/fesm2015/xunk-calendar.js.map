{"version":3,"file":"xunk-calendar.js","sources":["ng://xunk-calendar/src/xunk-calendar/xunk-calendar.component.ts","ng://xunk-calendar/src/xunk-calendar/xunk-calendar.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nexport interface XunkDate {\n  date: number;\n  month: any;\n  year: any;\n}\n\n@Component({\n    selector: 'xunk-calendar',\n    templateUrl: './xunk-calendar.component.html',\n    styleUrls: ['./xunk-calendar.component.css']\n  })\n  export class XunkCalendarComponent implements OnInit {\n\n    /** Today */\n    @Input() public today: XunkDate;\n\n    /** The page open with [xx, month, year] */\n    @Input() public openPage: XunkDate;\n\n    /** Currently selected date */\n    @Input() public selectedDate: XunkDate;\n\n    /** Array with all the calendar data */\n    @Input() public calendar: any[][] = [[]];\n\n    /** Color for heat map */\n    @Input() public heatMapColor = '#00ff00';\n\n    /** Color for primary */\n    @Input() public primaryColor = '#ff0000';\n\n    /** Color for primary foreground */\n    @Input() public primaryForeground = 'white';\n\n    /** Heatmap data */\n    @Input() public heatmap = {};\n\n    /** Set this to false to hide month changing header */\n    @Input() public showHeader = true;\n\n    /** Emits the new date on change */\n    @Output() change: EventEmitter<XunkDate> = new EventEmitter();\n\n    /** Emits the new month with date as 1 on change */\n    @Output() monthChange: EventEmitter<XunkDate> = new EventEmitter();\n\n    private RGB_HM: any;\n    private RGB_Primary: any;\n    private RGB_Primary_FG: any;\n\n    /** Constants */\n    public readonly monthNames =\n      [\n        'January', 'February', 'March', 'April',\n        'May', 'June', 'July', 'August',\n        'September', 'October', 'November', 'December'\n      ];\n    public readonly dayNames =\n      [\n        'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n        'Thrusday', 'Friday', 'Saturday'\n      ];\n\n    /* Get RGB from CSS color */\n    public static parseColor(input) {\n      const div = document.createElement('div');\n      div.style.color = input;\n      document.body.appendChild(div);\n      const m = getComputedStyle(div).color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n      document.body.removeChild(div);\n\n      if (m) {\n        return {R: m[1], G: m[2], B: m[3]};\n      } else {\n        throw new Error('Color ' + input + ' could not be parsed.');\n      }\n    }\n\n    /* Get today's date */\n    public static getToday(): XunkDate {\n      const dateNow = new Date();\n      return {\n        date: dateNow.getDate(),\n        month: dateNow.getMonth(),\n        year: dateNow.getFullYear()\n      };\n    }\n\n    /** Pad number with zeros */\n    public static zeropad(num, padlen, padchar = '0'): string {\n      const pad_char = typeof padchar !== 'undefined' ? padchar : '0';\n      const pad = new Array(1 + padlen).join(pad_char);\n      return (pad + num).slice(-pad.length);\n    }\n\n    /** CalendarComponent */\n    constructor() {\n      /* Initialize */\n      this.calendar = [];\n\n      this.today = XunkCalendarComponent.getToday();\n      this.openPage = {...this.today};\n      this.selectedDate = {...this.today};\n    }\n\n    ngOnInit() {\n      /* Parse colors*/\n      this.RGB_HM = XunkCalendarComponent.parseColor(this.heatMapColor);\n      this.RGB_Primary = XunkCalendarComponent.parseColor(this.primaryColor);\n      this.RGB_Primary_FG = XunkCalendarComponent.parseColor(this.primaryForeground);\n\n      /* Display initial */\n      this.displayCalendar();\n    }\n\n    /**\n     * Returns true if two dates are the same\n     * with the date taken separately\n     */\n    protected sameDate(date: number, a: XunkDate, b: XunkDate): boolean {\n      return date === b.date &&\n             a.month === b.month &&\n             a.year === b.year;\n    }\n\n    /** Returns true if fab! */\n    protected isFab(col: number): string {\n      /* Check if date is selected */\n      if (this.sameDate(col, this.openPage, this.selectedDate)) {\n        return 'primary';\n      }\n\n      /* No matches found */\n      return '';\n    }\n\n    /** Returns 'primary' if col is today */\n    public isToday(col: number): string {\n      if (this.sameDate(col, this.openPage, this.today)) {\n        return 'primary';\n      }\n      return '';\n    }\n\n    /** Select a day in the open page */\n    public selectDay(col: number) {\n      this.selectedDate.date = col;\n      this.selectedDate.month = this.openPage.month;\n      this.selectedDate.year = this.openPage.year;\n      this.change.emit(this.selectedDate);\n    }\n\n    /** Change the month +1 or -1 */\n    public changeMonth(diff: number) {\n      this.openPage.month += diff;\n\n      /* See if the year switches */\n      if (this.openPage.month >= 12 ) {\n        this.openPage.month = 0;\n        this.openPage.year++;\n      }\n\n      if (this.openPage.month < 0 ) {\n        this.openPage.month = 11;\n        this.openPage.year--;\n      }\n\n      /* Refresh */\n      this.displayCalendar();\n\n      /* Emit event */\n      this.monthChange.emit(this.openPage);\n    }\n\n    /** Compute the calendar */\n    public displayCalendar() {\n      /* Generate a new object */\n      const newCalendar = [[]];\n\n      const month = this.openPage.month;\n      const year = this.openPage.year;\n\n      /* Days in next month, and day of week */\n      let col = new Date(year, month, 0).getDay();\n      let row = 0, counter = 1;\n      const numOfDays = Number(this.getDaysOfMonth(month, year));\n\n      /* Loop to build the calendar body */\n      while (counter <= numOfDays) {\n         /* When to start new line */\n         if (col > 6) {\n             col = 0;\n             newCalendar[++row] = [];\n         }\n\n         /* Set the value and increment */\n         newCalendar[row][col++] = counter++;\n      }\n\n      /* Set the calendar to the newly computed one */\n      this.calendar = newCalendar;\n    }\n\n    /** Gets the DaysPerMonth array */\n    protected getDaysOfMonth(month: number, year: number): number {\n      /* Check leap years if February */\n      if (month === 1 && this.leapYear(year)) {\n        return 29;\n      }\n\n      /** Return the number of days */\n      return [31, 28, 31, 30, 31, 30,\n        31, 31, 30, 31, 30, 31][month];\n    }\n\n    /** Returns true if leap year */\n    protected leapYear(year: number): boolean {\n      return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    }\n\n    /** Gets the heat map color */\n    public getHM(day: number): string {\n      /* If today */\n      if (this.isFab(day)) {\n        return `rgb(${this.RGB_Primary.R}, ${this.RGB_Primary.G}, ${this.RGB_Primary.B})`;\n      }\n\n      /* Return heatmap color */\n      const zeropad = XunkCalendarComponent.zeropad;\n      const ind = (zeropad(this.openPage.year, 4) + zeropad(this.openPage.month + 1, 2) + zeropad(day, 2));\n      if (ind in this.heatmap) {\n        return `rgba(${this.RGB_HM.R}, ${this.RGB_HM.G}, ${this.RGB_HM.B}, ${this.heatmap[ind]})`;\n      } else {\n        return 'inherit';\n      }\n    }\n\n    public getForeground(day: number): string {\n      /* If today */\n      if (this.isFab(day)) {\n        return `rgb(${this.RGB_Primary_FG.R}, ${this.RGB_Primary_FG.G}, ${this.RGB_Primary_FG.B})`;\n      }\n      if (this.isToday(day)) {\n        return `rgb(${this.RGB_Primary.R}, ${this.RGB_Primary.G}, ${this.RGB_Primary.B})`;\n      }\n      return;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { XunkCalendarComponent } from './xunk-calendar.component';\n\n@NgModule({\n    declarations: [\n        XunkCalendarComponent\n    ],\n    imports: [\n        CommonModule,\n        MatIconModule,\n        MatButtonModule,\n     ],\n    exports: [\n        XunkCalendarComponent,\n    ]\n})\nexport class XunkCalendarModule {\n\n    /* Gets today's date */\n    public static getToday(): any {\n      return XunkCalendarComponent.getToday();\n    }\n\n    /** Pad number with zeros */\n    public static zeroPad(num: number, padlen: number, padchar = '0'): string {\n        return XunkCalendarComponent.zeropad(num, padlen, padchar);\n    }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}